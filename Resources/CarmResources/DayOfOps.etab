/*
Example of a new role
This file contain settings for a planner with very limited
functionality in the GUI.
*/
6
SApplication "Application" ?"This is the application name." 32 / 7,
SModule "Module" ?"This is the name of a module in the application." 32 / 8,
SName "Name" ?"This is the resource name." 32 / 15,
BFrozen "Frozen" [ N ; Y ] ?"The resource is frozen if this value is 'Y'" 5 / 1,
SValue "Value" ?"This is the actual resource value." 256 / 35,
CComment "Comment" ?"This is a brief description of the resource" 256 / 38,
"gpc", "config", "FailObjectBottom", false, "40", "", 
"gpc", "config", "FailObjectTop", false, "75", "", 
"default", "config", "administratorMode", true, "false", "No admin features accessible", 
"gpc", "commandline", "Enabled", false, "True", "If enabled, the commandline is activated", 
"gpc", "commandline", "DynamicReload", false, "False", "If enabled, command definitions will be reloaded if the source code has changed",
"gpc", "config", "allowOverlap", false, "True", "",
"gpc", "config", "useSelectionFrames", false, "True", "Mark legs by putting a frame around them instead of coloring them", 
"gpc", "config", "windowsButtons", false, "True", "How to use the mouse buttons", 
"gpc", "manipulate", "dropCRRs2RostersMain", false, "carmusr.tracking.DragDrop.AssignMarkedTrips 'Assign' UNDO OPAQ", "python function called when dragging from a trip view to a crew view", 
"gpc", "manipulate", "dropRosters2RostersMain", false, "carmusr.tracking.DragDrop.MoveLegs 'Move' UNDO OPAQ", "python function called when dragging one or several legs from a roster to another", 
"gpc", "manipulate", "doubleClickRostersMain", false, "carmusr.tracking.DragDrop.MarkTrip", "", 
"gpc", "manipulate", "doubleClickCRRsMain", false, "carmusr.tracking.DragDrop.MarkTrip", "", 
"gpc", "manipulate", "dropRotations2CRRsMain", false, "", "python function called when dragging from a rotation view to a trip view", 
"gpc", "manipulate", "dropRotations2RotationsMain", false, "", "python function called when dragging within the rotation view", 
"gpc", "manipulate", "dropRosters2RotationsMain", false, "", "", 
"gpc", "manipulate", "dropCRRs2RotationsMain", false, "", "", 
"gpc", "manipulate", "deleteRotationsMain", false, "", "", 
"gpc", "manipulate", "deleteRostersMain", false, "carmusr.tracking.Deassign.deassign 'Deassign' UNDO OPAQ", "python function called when pressing delete on keyboard", 
"gpc", "manipulate", "legBasedSelection", false, "True", "When selecting with the left mouse button, only the leg is selected",
"gpc", "preferences", "showOnlyScheduledTime", false, "No", "If true, actual or estimated time are not considered", 
"default", "RaveCompile", "DefaultApplications", false, "gpc", "Default set of applications for which rulesets should be built", 
"gpc", "preferences", "Carrier", false, "SK", "", 
"gpc", "config", "FilterAssignableRelaxationEtab", false, "$(CARMUSR)/crc/etable/FARelaxation.etab", "", 
"gpc", "config", "FilterAssignableRemovableLeg", false, "studio_fac.%removable_leg%", "", 
"gpc", "preferences", "refreshInfoOption", false, "0", "", 
"gpc", "config", "ConfigWindow", false, "3007", "Enable right window but not the right window menus. 3071 = all 3007=no menu", 
"gpc", "config", "ActivateDynamicOpenTime", false, "True", "Defines if the system should use the dynamic open time handling or not", 
"gpc", "config", "ShowAssignmentLocks", false, "true", "Show assignment locks on top of legs in Roster view", 
"gpc", "config", "useConflictHandling", false, "True", "Use conflict Handling", 
"gpc", "config", "MoveAssignmentsPostFunction", false, "carmusr.tracking.DragDrop.postFunction", "", 
"gpc", "config", "MoveAssignmentsSliceOpenTrips", false, "slice_main", "", 
"gpc", "colours", "Over_crewed_leg", false, "Off", "", 
"gpc", "config", "UseDefaultTitle", true, "false", "Use default updating of Studio title bar", 
"gpc", "config", "RuleExceptionColor", false, "Rule_color_22", "Changed from default to distinguish from standbys an open-days", 
"gpc", "config", "DataPeriodDbPreFunc", false, "carmusr.tracking.FileHandlingExt.getDbPeriodStart", "The function returns the number of days before the planningperiod start that should be loaded.", 
"default", "dialogues", "suppressCheckLegalityDialogue", false, "False", "Roster illegalities popup message warning", 
"gpc", "config", "FailObjectLeftWinAfterNow", false, "True", "Only alerts of upcoming rule violations",
"default", "config", "DaveClientInfo", false, "$(SK_APP) $(CARM_PROCESS_NAME)", "Argument to setClientInfo in Dave API",

