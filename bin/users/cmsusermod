#!/bin/env python
# @(#) $Header: /opt/Carmen/CVS/sk_cms_user/bin/cmsusermod,v 1.2 2007/10/01 08:42:04 acosta Exp $

"""
cmsusermod - modify a user's login information on the CMS system.
"""

import logging
import os
import sys

try:
    from cmsadm.cmsroles import usermod, cms_optparser, CMSRoleError
except:
    if sys.executable.startswith('/opt/Carmen'):
        raise UsageException('Cannot even start with carmpython, check your installation!')
    if not 'CARMUSR' in os.environ:
        a0 = sys.argv[0]
        if os.path.isabs(a0):
            os.environ['CARMUSR'] = os.path.dirname(os.path.dirname(a0))
        else:
            os.environ['CARMUSR'] = os.path.dirname(os.path.abspath(os.path.join(os.getcwd(), os.path.dirname(a0))))
    if not 'CARMSYS' in os.environ:
        os.environ['CARMSYS'] = os.path.join(os.environ['CARMUSR'], 'current_carmsys_cct')
    if not 'CARMTMP' in os.environ:
        os.environ['CARMTMP'] = os.path.join(os.environ['CARMUSR'], 'current_carmtmp')
    carmpython = os.path.join(os.environ['CARMSYS'], 'bin', 'carmpython')
    rc = os.execvp(carmpython, ['carmpython'] + sys.argv)
    sys.exit()


# exports ================================================================{{{1
__all__ = ['main']


# logging ================================================================{{{1
logging.basicConfig(format='%(module)s: %(levelname)s: %(message)s', level=logging.INFO)


# functions =============================================================={{{1

# main -------------------------------------------------------------------{{{2
def main(*argv, **options):
    """
    Run cmsroles.usermod.
    """
    if len(argv) == 0:
        argv = sys.argv[1:]
    try:
        parser = cms_optparser('mod')
        (opts, args) = parser.parse_args(argv)
        if len(args) < 1:
            raise CMSRoleError('No login name was given.')
        options.update(opts.__dict__)
        usermod(args[0], **options)

    except CMSRoleError, err:
        logging.error(str(err))
        logging.info("for help use --help")
        return 2
    except SystemExit, err:
        return err
    except Exception, e:
        logging.error(str(e))
        return 2

    return 0


# main ==================================================================={{{1
if __name__ == '__main__':
    sys.exit(main())


# [acosta:07/184@09:38] First version
# modeline ==============================================================={{{1
# vim: set fdm=marker:
# eof
