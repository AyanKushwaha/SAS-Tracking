#!/bin/sh
# $Header: /opt/Carmen/CVS/sk_cms_user/bin/cmd_install_bids.sh,v 1.5 2009/12/02 09:52:48 adl412 Exp $
#
# This script copies and installs PBS-bid dumps produced by Interbids.
#
# The script is set up by means of the desmond scheduler to run once a day
# from the 16:th each month until and including the 6:th the following month.
# The script exits with an error message if executed outside this allowed
# 'run period'. If -t is not set current time would be considered.
#
# The script supports two ways of copying the dump file: ftp and plain copy
# Plain copy:
#   Use option  -f <full path to dump file> -t <time of execution 2017-10-03 > 
# Ftp:
#   Use options -h <ftp host> -u <user> -p <passwd> -d <dir> -n <filename>
#
# First: it copy the bids.etab file which is generated by Jboss and rename it with dated name like:
# bids_20170701.etab and creat a link toward latest bid file like: bids -> bids_20170701.etab
# Second: Run bin/bids/installBids.sh script with corresponding date and bid files like:
# exmaple is: cmd_install_bids.sh -f current_carmdata/crewportal/datasource/bids/new -t 6Jun2017 => bin/bids/installBids.sh bids_20170701.etab 1Jul2017
# Interbids side:
# /usr/java/jboss-eap/standalone/crewportal/current_period_export_job.xml is configuration file to generate nightly bids.etab file
#

LOG=${CARMTMP}/logfiles/`basename $0 .sh`.${USER}.$(date +%Y%m%d.%H%M.%S).`hostname -s`.log
{
TARGETDIR=$CARMDATA/ETABLES/PBS/BIDS
INSTALLER=$CARMUSR/bin/bids/installBids.sh

BIDSFILE=bids
RUNONSTART=16
RUNONEND=8

while getopts f:h:u:p:d:n:t:b:s:e: option; do
  case "$option" in
    f) DUMPPATH=$OPTARG ;;
    h) FTPHOST=$OPTARG ;;
    u) FTPUSER=$OPTARG ;;
    p) FTPPASS=$OPTARG ;;
    d) FTPDIR=$OPTARG ;;
    n) FTPFILENAME=$OPTARG ;;
    t) TIMEOFEXE=$OPTARG ;;
    b) BIDSFILE=$OPTARG ;;
    s) RUNONSTART=$OPTARG ;;
    e) RUNONEND=$OPTARG ;;
  esac
done

ts=`date +'%Y%m%d %H:%M:%S'`
echo "$ts $0 started"
if [ X$CARMDATA = X ]; then
  echo "$ts ERROR: Environment variable CARMDATA not defined, bailing out..."
  exit
fi
if [ ! -x $INSTALLER ]; then
  echo "$ts ERROR: $INSTALLER not available, bailing out..."
  exit
fi

if [ ! -d $TARGETDIR ]; then
  echo "$ts ERROR: Target directory $TARGETDIR not found!"
  exit
fi

if [ $TIMEOFEXE ]; then
  ts=`date -d $TIMEOFEXE +'%Y%m%d %H:%M:%S'`
  echo "`date +'%Y%m%d %H:%M:%S'` INFO: Time of execution is set to $ts"
fi

# Calculate bid period in format '1Mar2008' for use as input to the installer
# Calculate bid period in format '20080301' for use in finding the correct bid file
# The same bid period is used throughout the whole 'run period'.
# E.g. run dates 20080116-20080206 => bid period '1Mar2008'
# E.g. run date 20081201 => bid period '1Jan2009'
if [ $TIMEOFEXE ]; then
  daynum=`date -d $TIMEOFEXE +'%e'`
else
  daynum=`date +%e`
fi
echo "`date +'%Y%m%d %H:%M:%S'` INFO: day number of execution is set to $daynum"

if [ $daynum -le $RUNONEND ]; then
  daysadd=32
elif [ $daynum -ge $RUNONSTART ]; then
  daysadd=$(expr 31 - $daynum + 32)
else
  echo "`date +'%Y%m%d %H:%M:%S'` ERROR: Invalid day in month for run (valid between the $RUNONSTART and the $RUNONEND the following month), bailing out..."
  exit
fi
bidperiod_install=1`date --date="$daysadd day" +%b%Y`
bidperiod_file=`date --date="$daysadd day" +%Y%m01`

if [ -z $DUMPPATH ]; then
  # Fetch dump file by ftp
  if [ -z $FTPHOST ] || [ -z $FTPUSER ] || [ -z $FTPPASS ] || [ -z $FTPDIR ] || [ -z $FTPFILENAME ]; then
    echo "`date +'%Y%m%d %H:%M:%S'` ERROR: Ftp host,user,password,directory,filename must be specified!"
    exit
  fi

  FTPFILENAMELOCAL=$FTPFILENAME

  cd $TARGETDIR
  ftp -n $FTPHOST << END
quote USER $FTPUSER
quote PASS $FTPPASS
bin
cd $FTPDIR
get $FTPFILENAME $FTPFILENAMELOCAL
quit
END
  DUMPFILE=$FTPFILENAMELOCAL
else
  # Fetch dump file by plain copy
  # Assume it is called 'bids.etab'
  DUMPFILE=$BIDSFILE.etab
  # The target name should be on the format
  # 'bids_YYYYMMDD.etab'
  TARGETFILE=${BIDSFILE}_$bidperiod_file.etab

  DUMPPATH=$DUMPPATH/$DUMPFILE
  if [ ! -f $DUMPPATH ]; then
    echo "`date +'%Y%m%d %H:%M:%S'` ERROR: Dump file $DUMPPATH not found!"
    exit
  fi

  dumpsize=$(wc -c <"$DUMPPATH")
  if [ $dumpsize -eq 0 ]; then
    echo "$ts ERROR: Dump file $DUMPPATH is zero size!"
    exit
  fi
    
  TARGETDIR=$TARGETDIR/$TARGETFILE
  cp -p $TARGETDIR $TARGETDIR.old
  echo "`date +'%Y%m%d %H:%M:%S'` INFO: Copying bids: $DUMPPATH -> $TARGETDIR"
  cp -p $DUMPPATH $TARGETDIR
  echo "`date +'%Y%m%d %H:%M:%S'` INFO: Bid file copied: `ls -l $TARGETDIR`"
fi

# Install the dump file
echo "`date +'%Y%m%d %H:%M:%S'` INFO: Running \"$INSTALLER $TARGETFILE $bidperiod_install\""
$INSTALLER $TARGETFILE $bidperiod_install
} | tee -a ${LOG}

exit
