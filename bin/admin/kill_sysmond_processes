#!/usr/bin/env python 

#  from __future__ import print_function
__author__="Mahdi Abdinejadi <mahdi.abdinejadi@hiq.se>"
__version__= "0.2"


"""
Simple carmusr process killer script ( main use is to kill left over process form sysmond after sysmondctl exit command
"""

import os
from argparse import ArgumentParser
from argparse import RawDescriptionHelpFormatter
import logging


def run():
	success = False
	ap = ArgumentParser(description=__doc__, formatter_class=RawDescriptionHelpFormatter)
	ap.add_argument('-c', '--carmusr', help='Set the carmuser to be add or removed Default is environment variable $CARMUSR')
	ap.add_argument('-v', '--verbos', default=False, action='store_true', help='set logging to verbos (debug level)')
	args = ap.parse_args()
	
	if args.verbos:
		logging.basicConfig(format="%(filename)s %(levelname)-8s: %(message)s", level=logging.DEBUG)	
	else:
		logging.basicConfig(format="%(filename)s %(levelname)-8s: %(message)s", level=logging.INFO)	

	if args.carmusr:
		carmusr = args.carmusr
	else:
		try:
			pwd = os.path.realpath(__file__)
			carmusr = pwd.split('/bin/admin/')[0] 
		except Exception:
			logging.error("Please set carmusr argument")
			exit(1)	
	kill_carmusr_proc(carmusr)
		

def kill_carmusr_proc(carmusr):

	count_string = "ps -ef | grep -i %s | egrep -v grep | grep -v SessionServer | wc -l" % carmusr
	kill_string = "ps -ef | grep -i %s | egrep -v grep | grep -v SessionServer" % carmusr
	logging.debug("kill_string is: %s" % kill_string )

	count = os.popen(count_string).readlines()[0].strip()
	if int(count) > 0:
		success_kill = 0
		ps = os.popen(kill_string).readlines()
		if ps:
			logging.info("Starting to kill %s processes" % count)
			for line in ps:
				fields = line.strip().split()
				try:
					os.kill(int(fields[1]), 9)
                			success_kill += 1
				except Exception as e:
					logging.error("Process %s is not possible to kill with error: %s" % (str(fields[1]), str(e)))
  		logging.info("Killed %s processes successfully and out of %s processes" % (str(success_kill),count))
	else:
		logging.info("No carmusr process to kill")

if '__name__' != '__main__':
	run()




