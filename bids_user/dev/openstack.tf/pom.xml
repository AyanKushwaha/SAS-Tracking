<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <groupId>com.jeppesen.jcms.customization.sas</groupId>
    <artifactId>dev</artifactId>
    <version>11.0.3.1-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <name>${project.groupId} :: ${project.artifactId}</name>
  <description>SAS Openstack</description>
  <artifactId>openstack.tf</artifactId>
  <packaging>pom</packaging>

  <profiles>
    <profile>
      <id>openstack</id>

      <build>
        <defaultGoal>antrun:run@prepare-application-to-run-in-docker</defaultGoal>

        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${maven-antrun-plugin.version}</version>
            <dependencies>
              <dependency>
                <groupId>ant-contrib</groupId>
                <artifactId>ant-contrib</artifactId>
                <version>${ant-contrib.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>prepare-application-to-run-in-docker</id>
                <phase>prepare-package</phase>
                <configuration>
                  <target>
                    <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
                    <if>
                      <available file="${project.basedir}/scripts/prepare-application-to-run-in-docker.sh" />
                      <then>
                        <copy overwrite="true" file="${project.basedir}/scripts/prepare-application-to-run-in-docker.sh" tofile="${project.basedir}/scripts/04-crewportal-application.sh" />
                      </then>
                    </if>
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>add-mock-configuration</id>
                <phase>prepare-package</phase>
                <configuration>
                  <target>
                    <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
                    <if>
                      <available file="${project.basedir}/files/docker-compose-base.mock.yaml" />
                      <then>
                        <copy overwrite="true" file="${project.basedir}/files/docker-compose-base.mock.yaml" tofile="${project.basedir}/files/docker-compose-base.yaml" />
                      </then>
                    </if>
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>add-manpower-configuration</id>
                <phase>prepare-package</phase>
                <configuration>
                  <target>
                    <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
                    <if>
                      <available file="${project.basedir}/files/docker-compose-base.manpower.yaml" />
                      <then>
                        <copy overwrite="true" file="${project.basedir}/files/docker-compose-base.manpower.yaml" tofile="${project.basedir}/files/docker-compose-base.yaml" />
                      </then>
                    </if>
                  </target>
                </configuration>
              </execution>
            </executions>
            <goals>
              <goal>run</goal>
            </goals>
          </plugin>

          <plugin>
            <artifactId>maven-release-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>versions</id>

      <build>
        <defaultGoal>clean resources:resources</defaultGoal>

        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>${maven-resources-plugin.version}</version>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/templates/</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
              <delimiters>
                <delimiter>{{ * }}</delimiter>
              </delimiters>
              <outputDirectory>./</outputDirectory>
              <overwrite>true</overwrite>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
