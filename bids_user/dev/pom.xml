<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <name>${project.groupId} :: ${project.artifactId}</name>
    <description>SAS dev module</description>
    <groupId>com.jeppesen.jcms.customization.sas</groupId>
    <artifactId>dev</artifactId>
    <version>11.0.3.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <docker-compose-maven-plugin.version>3.0.0</docker-compose-maven-plugin.version>
        <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
        <ant-contrib.version>20020829</ant-contrib.version>

        <selenide.version>5.10.0</selenide.version>
        <lombok.version>1.18.12</lombok.version>
        <vavr.version>0.10.2</vavr.version>
        <assertj.version>3.16.1</assertj.version>
        <oracle.version>18.3.0.0</oracle.version>
        <versions-maven-plugin.version>2.8.1</versions-maven-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <outputDirectory>${project.build.directory}/classes</outputDirectory>
        <spring-boot.version>2.3.3.RELEASE</spring-boot.version>
        <junit-jupiter.version>5.7.0</junit-jupiter.version>
        <java.version>1.8</java.version>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.source>${java.version}</maven.compiler.source>

        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>

        <scm.comp.name>ui-crewweb.xmlrpc-mock-server</scm.comp.name>
        <maven-assembly-plugin.version>3.2.0</maven-assembly-plugin.version>
        <xmlrpc.version>3.1</xmlrpc.version>

        <junit.version>4.13</junit.version>
        <maven-release-plugin.version>3.0.0-M4</maven-release-plugin.version>
    </properties>

    <scm>
        <connection>scm:git:https://git@git.got.jeppesensystems.com/crew-buddies/ib6-sas.git</connection>
        <developerConnection>scm:git:ssh://git@git.got.jeppesensystems.com:10022/crew-buddies/ib6-sas.git</developerConnection>
        <url>https://git.got.jeppesensystems.com/crew-buddies/ib6-sas.git</url>
        <tag>HEAD</tag>
    </scm>

    <modules>
        <module>docker</module>
        <module>e2e</module>
        <module>openstack.tf</module>
        <module>xmlrpc-mock-server</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>local-libs</id>
            <name>local-libs</name>
            <url>${project.baseUri}../settings/.m2/repository/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <defaultGoal>clean package</defaultGoal>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                    <configuration>
                        <suppressCommitBeforeBranch>true</suppressCommitBeforeBranch>
                        <tagNameFormat>@{project.version}-release</tagNameFormat>
                        <localCheckout>true</localCheckout>
                        <pushChanges>true</pushChanges>
                        <!-- Execute the "install" goal instead of just "verify" to ease multi component releases -->
                        <preparationGoals>clean install</preparationGoals>
                        <!-- Avoid running site:deploy as part of release:perform -->
                        <goals>deploy</goals>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <!-- Copy dev / prod specific files -->
                        <releaseProfiles>prod</releaseProfiles>
                        <preparationGoals>org.apache.maven.plugins:maven-antrun-plugin:1.8:run</preparationGoals>
                        <!-- Tired fix that annoying issues: Cannot prepare the release because you have local modifications... -->
                        <checkModificationExcludes>**</checkModificationExcludes>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <distributionManagement>
        <repository>
            <id>release</id>
            <uniqueVersion>false</uniqueVersion>
            <name>Released component versions</name>
            <url>${mvn.repo}release</url><!-- mvn.repo comes from settings.xml -->
        </repository>
        <snapshotRepository>
            <id>development</id>
            <uniqueVersion>true</uniqueVersion>
            <name>Development component repository</name>
            <url>${mvn.repo}development</url><!-- mvn.repo comes from settings.xml -->
        </snapshotRepository>
    </distributionManagement>

</project>
