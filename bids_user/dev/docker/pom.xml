<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <groupId>com.jeppesen.jcms.customization.sas</groupId>
    <artifactId>dev</artifactId>
    <version>11.0.3.1-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <name>${project.groupId} :: ${project.artifactId}</name>
  <description>SAS Docker</description>
  <artifactId>docker</artifactId>
  <packaging>pom</packaging>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.dkanejs.maven.plugins</groupId>
          <artifactId>docker-compose-maven-plugin</artifactId>
          <version>${docker-compose-maven-plugin.version}</version>
          <configuration>
            <skip>true</skip>
            <build>true</build>
            <detail>true</detail>
            <verbose>false</verbose>
            <removeOrphans>true</removeOrphans>
            <removeVolumes>true</removeVolumes>
            <detachedMode>true</detachedMode>
            <removeImages>true</removeImages>
            <removeImagesType>local</removeImagesType>
            <ignorePullFailures>true</ignorePullFailures>
            <composeFile>${project.basedir}/docker-compose.yaml</composeFile>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>ant-contrib</groupId>
              <artifactId>ant-contrib</artifactId>
              <version>${ant-contrib.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>prepare-manpower-configuration</id>
              <configuration>
                <target>
                  <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
                  <if>
                    <available file="${project.basedir}/jboss/config/jeppesen-config/manpower/career.properties" />
                    <then>
                      <copy overwrite="true" file="${project.basedir}/jboss/config/jeppesen-config/manpower/career.properties" tofile="${project.basedir}/jboss/config/jeppesen-config/career.properties" />
                    </then>
                  </if>
                  <if>
                    <available file="${project.basedir}/jboss/config/jeppesen-config/manpower/vacation.properties" />
                    <then>
                      <copy overwrite="true" file="${project.basedir}/jboss/config/jeppesen-config/manpower/vacation.properties" tofile="${project.basedir}/jboss/config/jeppesen-config/vacation.properties" />
                    </then>
                  </if>
                </target>
              </configuration>
            </execution>
            <execution>
              <id>prepare-mock-configuration</id>
              <configuration>
                <target>
                  <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
                  <if>
                    <available file="${project.basedir}/jboss/config/jeppesen-config/mock/career.properties" />
                    <then>
                      <copy overwrite="true" file="${project.basedir}/jboss/config/jeppesen-config/mock/career.properties" tofile="${project.basedir}/jboss/config/jeppesen-config/career.properties" />
                    </then>
                  </if>
                  <if>
                    <available file="${project.basedir}/jboss/config/jeppesen-config/mock/vacation.properties" />
                    <then>
                      <copy overwrite="true" file="${project.basedir}/jboss/config/jeppesen-config/mock/vacation.properties" tofile="${project.basedir}/jboss/config/jeppesen-config/vacation.properties" />
                    </then>
                  </if>
                </target>
              </configuration>
            </execution>
          </executions>
          <goals>
            <goal>run</goal>
          </goals>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>up</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <defaultGoal>
          antrun:run@prepare-mock-configuration
          docker-compose:up
        </defaultGoal>
        <plugins>
          <plugin>
            <groupId>com.dkanejs.maven.plugins</groupId>
            <artifactId>docker-compose-maven-plugin</artifactId>
            <configuration>
              <skip>false</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>manpower-up</id>
      <build>
        <defaultGoal>
          antrun:run@prepare-manpower-configuration
          docker-compose:up
        </defaultGoal>
        <plugins>
          <plugin>
            <groupId>com.dkanejs.maven.plugins</groupId>
            <artifactId>docker-compose-maven-plugin</artifactId>
            <configuration>
              <skip>false</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>down</id>
      <build>
        <defaultGoal>docker-compose:down</defaultGoal>
        <plugins>
          <plugin>
            <groupId>com.dkanejs.maven.plugins</groupId>
            <artifactId>docker-compose-maven-plugin</artifactId>
            <configuration>
              <skip>false</skip>
              <detachedMode>false</detachedMode>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>images</id>
      <build>
        <defaultGoal>
          clean
          antrun:run@prepare-mock-configuration
          docker:build@app-image
          docker:build@xmlrpc-image
          docker:build@xmlrpc-vacation-image
          docker:build@xmlrpc-career-image
          antrun:run@prepare-manpower-configuration
          docker:build@manpower-image
        </defaultGoal>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.33.0</version>
            <configuration>
              <verbose>true</verbose>
            </configuration>
            <executions>
              <execution>
                <id>app-image</id>
                <configuration>
                  <images>
                    <image>
                      <name>ib6-sas:%v</name>
                      <build>
                        <dockerFile>${project.basedir}/jboss/Dockerfile</dockerFile>
                        <contextDir>${project.basedir}/../../</contextDir>
                      </build>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>xmlrpc-image</id>
                <configuration>
                  <images>
                    <image>
                      <name>xmlrpc-sas:%v</name>
                      <build>
                        <dockerFile>${project.basedir}/xmlrpc/Dockerfile</dockerFile>
                        <contextDir>${project.basedir}/../../</contextDir>
                      </build>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>xmlrpc-vacation-image</id>
                <configuration>
                  <images>
                    <image>
                      <name>xmlrpc-vacation-sas:%v</name>
                      <build>
                        <dockerFile>${project.basedir}/xmlrpc/vacation/Dockerfile</dockerFile>
                        <contextDir>${project.basedir}/../../</contextDir>
                      </build>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>xmlrpc-career-image</id>
                <configuration>
                  <images>
                    <image>
                      <name>xmlrpc-career-sas:%v</name>
                      <build>
                        <dockerFile>${project.basedir}/xmlrpc/career/Dockerfile</dockerFile>
                        <contextDir>${project.basedir}/../../</contextDir>
                      </build>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>manpower-image</id>
                <configuration>
                  <images>
                    <image>
                      <name>ib6-sas.manpower:%v</name>
                      <build>
                        <dockerFile>${project.basedir}/jboss/Dockerfile</dockerFile>
                        <contextDir>${project.basedir}/../../</contextDir>
                      </build>
                    </image>
                  </images>
                </configuration>
              </execution>
            </executions>
            <goals>
              <goal>build</goal>
            </goals>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>e2e-up</id>

      <build>
        <defaultGoal>docker-compose:pull docker-compose:up</defaultGoal>

        <plugins>
          <plugin>
            <groupId>com.dkanejs.maven.plugins</groupId>
            <artifactId>docker-compose-maven-plugin</artifactId>
            <configuration>
              <skip>false</skip>
              <composeFile>${project.basedir}/docker-compose-e2e.yaml</composeFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>e2e-down</id>

      <build>
        <defaultGoal>docker-compose:down</defaultGoal>

        <plugins>
          <plugin>
            <groupId>com.dkanejs.maven.plugins</groupId>
            <artifactId>docker-compose-maven-plugin</artifactId>
            <configuration>
              <skip>false</skip>
              <detachedMode>false</detachedMode>
              <composeFile>${project.basedir}/docker-compose-e2e.yaml</composeFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
