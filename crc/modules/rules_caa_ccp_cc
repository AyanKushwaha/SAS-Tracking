/* -*- crc -*- 
 * 
 * 
 *
 * Purpose:
 *   This module contains cabin crew only government rules from the Civil Avaiation
 *   Authority to be used in Carmen Crew Rostering and as studio only 
 *   in Carmen Crew Tracking.
 *
 * Sections:
 *   1. Aircraft qualification rules
 *
 * Created by:
 *   Henrik Albertson, 22nov2006
 *
 * Major changes:
 *
 */
root module rules_caa_ccp_cc


import trip;
import duty;
import leg;
import levels;
import fundamental;
import rule_exceptions;
import rules;

/****************************************************************
 * Section 1: Aircraft qualification rules
 ***************************************************************/
 
/*
** Rule:
**    Max nr ac families in a duty
**
** Description:
**    Check that trip doesnt contain more than a fixed number of
**    different aircraft families.
**
** Agreement:
**    OM-A 4.4.3 (the limit is however a praxis limit)
*/
export rule qln_max_ac_families_in_duty_CC =
  valid trip.%check_rules% and
        duty.%in_pp_extended% and
        duty.%has_flight_duty%;
  %nr_ac_family_types% <= %max_nr_ac_family_types% + 
		          rule_exceptions.%overshoot_int%(duty.%start_UTC%);
  startdate  = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = %qln_max_ac_families_in_duty_CC_failobject%;
  failtext(Int value, Int limit) =
    rules.%failtext_int%("OMA: Nr ac fam in duty",value,limit);
  remark "OMA: Max aircraft families in duty",
  planner "";
end

%qln_max_ac_families_in_duty_CC_failobject% =
  first(leg(duty), leg.%failobject_departure%) 
    where ( %leg_nr_ac_family_types% > 
           %max_nr_ac_family_types% + 
           rule_exceptions.%overshoot_int%(duty.%start_UTC%));

%max_nr_ac_family_types% = 2;
%leg_nr_ac_family_types% =
  sum(leg(duty),%leg_has_new_ac_family_nr%) from (first) to (current);

%leg_has_new_ac_family_nr% =
  if %leg_has_new_ac_family% then 1 
  else 0;

%nr_ac_family_types% =
  count(leg(duty)) 
  where (%leg_has_new_ac_family%);

%leg_has_new_ac_family% =
  let ac_family = leg.%ac_family%;
  is_first(leg(duty))
  where (leg.%is_active_flight% and
         ac_family = leg.%ac_family%);

/* end of file */

