/* -*- crc -*- 
 *
 * 
 *
 * Purpose:
 *   This module contains variables needed by prt-reports extracted
 *   from std_cas_user
 *
 * Sections:
*   1. Planning period info
 *  2. Crew info
*   3. Roster info
 *  4. Print Wrapper
 * Major changes:
 *
 */
 
module report_roster

import base_utils;
import fundamental;
import keywords;
import crg_date;
import crew;
import pp;
import trip;
import duty;
import duty_period;
import crg_basic;
import crg_roster;
import crg_crew_pos;
import duty_code;
import levels;
import meal;
import crew_pos;
import attributes;
import leg;
import task;

/* 1. PLANNING PERIOD INFO*/

%extra_days% = crg_basic.%extra_days%;
%print_pp% = crg_date.%print_period%(%pp_start%,%pp_end_extended%);

/* 2. CREW INFO */
%crew_credit_time% = crg_roster.%printed_credit_time%;
%crew_block_time% = crg_roster.%printed_block_time%;
%crew_duty_rest_days% = crg_roster.%printed_duty_rest_days%;
  
%crew_name% = concat("Name: ",crew.%surname%,", ", crew.%firstname%);
%crew_base% = concat("Base: ", default(crew.%homebase%,""));
%crew_id% = crew.%id_text%;
%crew_sen% = format_int(crew.%seniority%,"Sen: %2i");
%crew_pt_factor% = format_int(crew.%part_time_factor%,"PT Factor: %i");
%crew_group% = 
    concat("Group: ",if crew.%in_variable_group_pp_start% 
                        then "V" 
                        else "F");
%crew_rank% = concat("Rank: ",default(crew.%rank%,""));
%crew_empno% = concat("Empno: ", default(crew.%employee_number%,""));



/* ROSTER INFO */
/*trip*/
%trip_real_start_date% = crg_roster.%trip_real_start_date%;
%trip_real_end_date% = crg_roster.%trip_real_end_date%;
%trip_start% = crg_roster.%trip_start%;
%trip_end% = crg_roster.%trip_end%;
%start_time_aux% = crg_roster.%start_time_aux%;
%end_time_aux% = crg_roster.%end_time_aux%;
/*duty*/
%duty_start_date% = crg_roster.%duty_start_date%;
%duty_end_time% = crg_roster.%duty_end_date%;
%duty_real_start_date% = crg_roster.%duty_real_start_date%;
%duty_real_end_date% = crg_roster.%duty_real_end_date%;
%duty_start% = crg_roster.%duty_start%;
%duty_end% = crg_roster.%duty_end%;
/* misc */
%layover_info% = crg_roster.%layover_info%;
%flight_info% = 
   concat(if duty_code.%leg_has_duty_code% then concat(duty_code.%leg_code%," ")
          else "",crg_roster.%flight_info%);



/* FUNCTION WRAPPER */
%print_time2%(Abstime date) = crg_date.%print_time2%(date);
/* end of file */
                                        
/*******************************************************************************
** Export functions for RosterServer
*******************************************************************************/

export %month_start% =
  round_down_month(%pp_start%);

export %month_end% = 
  round_up_month(%pp_start% + 0:01);

/*
export %dt_to_iso%(Abstime d) =
  base_utils.%abstime2isotimestr%(d);
*/

export %abs2iso%(Abstime dt) =
  base_utils.%abstime2isotime_strict_Z%(dt);

/* Calculates the offset, and returns the first dt as "strict" ISO time string with offset.*/
export %abs2iso_diffed%(Abstime some_abs, Abstime utc_abs) =
    let
        offset_rel =
            some_abs - utc_abs;
    base_utils.%abstime2isotime_strict%(some_abs, offset_rel);


/* selection of month trips */
export %trip_matches_month%(Abstime f, Abstime t) =
  trip.%start_hb% < t
  and trip.%end_hb% > f;

export %crew_roster_name%(Abstime d) =
  crew.%login_name_at_date_by_id%(crew.%id%, d);

export %crew_roster_empno%(Abstime d) =
  crew.%employee_number_at_date%(d);

export %crew_crew_rank%(Abstime d) =
  crew.%rank_at_date%(d);

export %crew_title_rank%(Abstime d) =
  crew.%titlerank_at_date%(d);

export %crew_maincat%(Abstime d) =
  crew.%main_func_at_date%(d);

export %crew_homebase%(Abstime d) =
  crew.%base_at_date%(d);

export %crew_street%(Abstime d) =
  crew.%street%(d);

export %crew_city%(Abstime d) =
  crew.%city%(d);

export %crew_postal_code%(Abstime d) =
  crew.%postal_code%(d);

export %crew_country%(Abstime d) =
  crew.%country%(d);

export %crew_email%(Abstime d) =
  crew.%gen_email_addr%(d);

export %crew_tel_1% =
  crew.%phone_primary%;

export %crew_tel_2% =
  crew.%phone_secondary%;




export %trip_day_start_utc% = %abs2iso%(round_down(trip.%start_hb%, 24:00));
export %trip_start_utc% = %abs2iso%(trip.%start_hb%);
export %trip_start_hb% = %abs2iso_diffed%(trip.%start_hb%, trip.%start_utc%);
export %trip_start_lt% = %abs2iso_diffed%(trip.%start_lt%, trip.%start_utc%);

export %trip_day_end_utc% = %abs2iso%(round_up(trip.%end_hb%, 24:00));
export %trip_end_utc% = %abs2iso%(trip.%end_hb%);
export %trip_end_hb% = %abs2iso_diffed%(trip.%end_hb%, trip.%end_utc%);
export %trip_end_lt% = %abs2iso_diffed%(trip.%end_lt%, trip.%end_utc%);

export %f%(Abstime start_day, Abstime end_day, String crew_id) = 
   (trip.%start_day% = start_day) and 
        (trip.%end_day% = end_day) and
            (crew.%id% = crew_id);

export %duty_start_utc% = %abs2iso%(duty.%start_utc%);
export %duty_start_hb% = %abs2iso_diffed%(duty.%start_hb%, duty.%start_utc%);
export %duty_start_lt% = %abs2iso_diffed%(duty.%start_lt%, duty.%start_utc%);
export %duty_end_utc% = %abs2iso%(duty.%end_utc%);
export %duty_end_hb% = %abs2iso_diffed%(duty.%end_hb%, duty.%end_utc%);
export %duty_end_lt% = %abs2iso_diffed%(duty.%end_lt%, duty.%end_utc%);

export %dp_start% =
  not duty.%is_on_duty%
  or duty_period.%is_first_duty_in_duty_period%;

export %duty_is_split% =
  duty.%is_on_duty% /* speed up */
  and duty_period.%is_split%;

export %leg_ci_utc% = %abs2iso%(leg.%ci_start_utc%);
export %leg_ci_hb% = %abs2iso_diffed%(leg.%ci_start_hb%, leg.%ci_start_utc%);
export %leg_ci_lt% = %abs2iso_diffed%(leg.%ci_start_lt%, leg.%ci_start_utc%);

export %leg_ob_utc% = %abs2iso%(leg.%start_utc%);
export %leg_ob_hb% = %abs2iso_diffed%(leg.%start_hb%, leg.%start_utc%);
export %leg_ob_lt% = %abs2iso_diffed%(leg.%start_lt%, leg.%start_utc%);

export %leg_co_utc% = %abs2iso%(leg.%co_end_utc%);
export %leg_co_hb% = %abs2iso_diffed%(leg.%co_end_hb%, leg.%co_end_utc%);
export %leg_co_lt% = %abs2iso_diffed%(leg.%co_end_lt%, leg.%co_end_utc%);

export %leg_ib_utc% = %abs2iso%(leg.%end_utc%);
export %leg_ib_hb% = %abs2iso_diffed%(leg.%end_hb%, leg.%end_utc%);
export %leg_ib_lt% = %abs2iso_diffed%(leg.%end_lt%, leg.%end_utc%);


export %leg_start_apt% =
  leg.%start_station%;

export %leg_end_apt% =
  leg.%end_station%;

export %is_leg_id%(String id) = 
    keywords.%activity_id% = id;

export %leg_id% =
  keywords.%activity_id%;

export %leg_act_set% =
  if leg.%is_flight_duty% then
    if leg.%is_deadhead% then "P-FLT"
/*    else if leg.%is_lc% then "L-FLT "*/
    else "FLT"
  else task.%code%;

%duty_display% =
  let act = task.%code%,
      grp = task.%group%(act);
  if act=grp then act
  else concat(act," (",grp,")");

%flight_display% =
  concat(leg.%flight_carrier%, format_int(leg.%flight_nr%, "%03d"));

export %leg_display% =
  default(
    if leg.%is_flight_duty% then %flight_display%
     /*                        else %flight_name_transport%, "?");*/
                            else %duty_display%, "?");

export %leg_pos% =
  /*if is_acrot then "N/A" else */
  if leg.%is_ground_transport% or leg.%is_deadhead% or leg.%is_oag% then
    ""
  else
    default(crg_crew_pos.%crew_func_leg_assigned%, "");

export %leg_duty_code% =
  default(
    default(
      %_sb_info%,
      %_duty_code%
    ),
    "N/A");

%_duty_code% =
  if attributes.%assignment_has_any_attr% then
    concat(default(duty_code.%leg_code%, ""), " [", attributes.%all_assignment_attributes%,"]")
  else
    duty_code.%leg_code%;

%_sb_info% =
    if void(leg.%sb_qual_attr%) then
        fundamental.%_sb_extra_info_no_qual%(leg.%homeairport%, leg.%code%, leg.%start_utc%, leg.%end_utc%, leg.%sb_int_attr%)
    else
        fundamental.%_sb_extra_info%(leg.%homeairport%, leg.%code%, leg.%start_utc%, leg.%end_utc%, leg.%sb_qual_attr%, leg.%sb_int_attr%);

/* off duty includes all F-codes, even if they are payed */
export %trip_is_off_time% = 
    all(leg(trip), (not leg.%is_on_duty%) or
        task.%is_day_off%(task.%code%));
        
    

export %leg_meal_codes% =
  meal.%meal_code%;
    
export %leg_is_flight% =
  leg.%is_flight_duty%;

export %leg_stc% =
  keywords.%service_type%;

export %leg_ac_employer% =
  leg.%ac_employer_code%;

export %leg_ac_change% =
  leg.%is_ac_change%;

