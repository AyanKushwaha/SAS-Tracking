module rule_exceptions_leave inherits rule_exceptions

/* Imports */
import levels;
import kwdmap;


/* Parameters */
%rule_exception_table_p% =
  parameter "rule_exception"
  remark "Table for rule exceptions";

%start_para% =
  parameter 01Jan1986 0:00
  remark "Start of planning period";

%use% =
  parameter true
  remark "RULE EXCEPTIONS: Use rule exceptions";


/* ----------------------------------------------------------- */
/* Currently we only allow rule_exception on crew */
%resource_id% = %crew_id%;

%rule_prefix% = "cmp.";
export %current_rule_id% = concat(%rule_prefix%, current_rule_id);

export %pp_start% = %start_para%;

redefine export %rule_s_off%(String RuleId, Abstime SDate) =
  %use% and default(%rule_turned_off_tab%(RuleId,SDate), false);

%rule_turned_off_tab%(String RuleId, Abstime SDate) =
  not void(%rule_exception_exist%(RuleId,SDate));

export %rule_exception_table_name% = %rule_exception_table_p%;

redefine export %overshoot_int%(Abstime SDate) =
  %overshoot_s_int%(%current_rule_id%, SDate);

redefine export %overshoot_s_int%(String RuleId, Abstime SDate) =
  if %use% then
    default(%overshoot_int_tab%(RuleId,SDate), 0)
  else
    0;

redefine export %overshoot_rel%(Abstime SDate) =
  %overshoot_s_rel%(%current_rule_id%, SDate);

redefine export %overshoot_s_rel%(String RuleId, Abstime SDate) =
  if %use% then
    default(%overshoot_rel_tab%(RuleId,SDate), 0:00)
  else
    0:00;
/* ----------------------------------------------------------- */


/* Table Definitions */
table rule_exceptions(String ruleid, Abstime starttime) =
  %resource_id%, ruleid, starttime ->
    String %rule_exception_exist%,
    Int %overshoot_int_tab%,
    Reltime %overshoot_rel_tab%;
  external %rule_exception_table_name%;
  crew, ruleid, starttime -> ruleid, overint, overrel;
  -,-,- ->  void_string, 0, 0:00;
end
