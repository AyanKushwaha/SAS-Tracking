/* -*- crc -*-
 *  
 * This module provides functionality to F-day calculations.
 */

root module report_account

import fundamental;
import levels;
import leg;
import duty;
import crew;
import freedays;
import training;
import system_db_parameters;
import report_crewlists;

/*********
 * common
 *********/


%duty_percent_at_date%(abstime date) =
    let
        agreement = crew.%agreement_at_date_name%(crew.%id%, date),
        percent = crew.%ccs_dutypercent%(agreement);

    default(percent, 0);


%days_in_year%(abstime date) =
    let strt = round_down_year(date),
        stp = add_years(strt, 1);
    (stp - strt) / 24:00;


table account_sum_period_table(String crew_id, Abstime start, Abstime stop, String account, String source) =
    crew_id,  account,  start,  stop,  source    -> Int %account_sum_period_exp%; /* all args explisit*/
    external "account_entry";
    crew,     account,  <=tim,  >tim,  source    -> sum(amount);
end


%account_sum_year%(Abstime date, String account, String source) =
    let start = round_down_year(date),
        stop = add_years(start, 1);
    %account_sum_period_exp%(crew.%id%, start, stop, account, source);


%account_sum_month%(Abstime date, String account, String source) =
    let start = round_down_month(date),
        stop = add_months(start, 1);
    %account_sum_period_exp%(crew.%id%, start, stop, account, source);



%leg_is_reducing_f0% =
    leg.%is_longterm_illness% /*IL12*/ or
    leg.%is_LAx%  /* LA**/ or
    duty.%is_military%;


%leg_is_reducing_f36% =
    leg.%is_longterm_illness% /*IL12*/ or
    leg.%is_LAx%  /* LA**/ or
    duty.%is_military% or
    (training.%leg_is_valid_school_activity% and
     training.%leg_is_in_school_period_min_7x24%);

%leg_is_reducing%(String account) =
    if account = "F0" then
        %leg_is_reducing_f0%
    else %leg_is_reducing_f36%;


%day_has_reducer%(AbsTime day, String account) =
    let start = round_down(day, 24:00),
        stop = start + 24:00;
    any(leg(roster), %leg_is_reducing%(account) and leg.%in_period%(start, stop));


%reducing_days_in_period%(AbsTime start, Abstime stop, String account) =
    count(
        times((stop - start) / 24:00)
        where (%day_has_reducer%(start + (24:00 * (%times_index_0% - 1)), account)));


%reducing_days_in_month%(AbsTime start, String account) =
    let strt = round_down_month(start),
        stp = add_months(strt, 1);
    %reducing_days_in_period%(strt, stp, account);


/*  The amount which should be reducted from the F36 account.
    The reduction is calculated as a fraction of the entitled days the contract at date dictates.
    The fraction is calculated as reducing days over total days in year.
    We multipy by 100, then divide by 100 to avoid rounding errors. */
%reduction_in_period%(AbsTime start, Abstime stop, int quota, String account) =
    let
        rdays = %reducing_days_in_period%(start, stop, account),
        ydays = %days_in_year%(start);
    - (quota * rdays *100 / ydays) /100;

%cba16_F0_F36_entitlement_valid%(Abstime date) =
    system_db_parameters.%agreement_valid%("cba16_F0_F36_entitlement", date);

%is_parttime_at_date%(Abstime date) =
    let percent = %duty_percent_at_date%(date);
    percent < 100;

/******
 * F0
 ******/

table f0_quota_group_b(abstime date) =

    %is_f0_quota_group_1_at_date%(date)
            ->
                %f0_quota_group_at_date_lookup_b%,
                            %f0_quota_group_desc_at_date_lookup_b%;

    y   -> 1,           "SNK_CC all";
    -   -> void_int,    void_string;
end

table f0_quota_group(abstime date) =

    %is_f0_quota_group_1_at_date%(date)
                ->
                %f0_quota_group_at_date_lookup%,
                            %f0_quota_group_desc_at_date_lookup%;

    y   -> 1,           "SKN_CC all";
    -   -> void_int,    void_string;
end

table f0_quota_group_cba16_b(Bool is_SNK, Bool is_NKF, Bool is_VG) =
    is_SNK,
        is_NKF,
            is_VG
                     ->
                        %f0_quota_group_cba16_lookup_b%;

    y,  n,  y   -> "SNK_VG";
    y,  n,  n   -> "SNK_FG";
    n,  y,  -   -> "NKF_ALL";
    -,  -,  -   -> void_string;
end

table f0_quota_group_cba16(Bool is_SKN, Bool is_VG) =

    is_SKN, is_VG      ->  %f0_quota_group_cba16_lookup%;
    y,  y              -> "SKN_VG";
    y,  n              -> "SKN_FG";
    -,  -              -> void_string;
end

table f0_quota_group_desc_cba16(String grp) =

    grp         -> %f0_quota_group_desc_cba16_lookup%;

    "SKN_VG"    -> %_check_variable_name%;
    "SKN_FG"    -> %_check_fixed_name%;
        -           ->   void_string;
end

%_check_fixed_name% =
if crew.%has_agmt_group_nkf_cc%  then
"NKF FG"
else
"SNK FG";

%_check_variable_name% =
if crew.%has_agmt_group_nkf_cc%  then
"NKF VG"
else
"SNK VG";

%f0_quota_group_desc_at_date%(Abstime date) =
    if %cba16_F0_F36_entitlement_valid%(date) then
        %f0_quota_group_desc_cba16_lookup%(%f0_quota_group_at_date_cba16%(date))
    else
        %f0_quota_group_desc_at_date_lookup%(date);


table f0_quota(int duty_percent, int quota_group) =
    duty_percent,
                quota_group
                    ->  %f0_quota_lookup%;
    100,        1   ->  500;
    100,        2   ->  700;

     90,        1   ->  500;
     90,        2   ->  600;

    (70,80),    1   ->  400;
    (70,80),    2   ->  500;

     60,        1   ->  300;
     60,        2   ->  400;

     50,        -   ->  300;
      -,        -   ->    0;
end

table f0_quota_cba16_b(int duty_percent, String quota_group) =
    quota_group,
                duty_percent
                        ->  %f0_quota_cba16_lookup_b%;

    "SNK_VG",   100     ->  500;
    "SNK_VG",    80     ->  400;
    "SNK_VG",    75     ->  400;
    "SNK_VG",    60     ->  300;
    "SNK_FG",   100     ->  500;
    -,            -     ->   0;
end


table f0_quota_cba16(int duty_percent, String quota_group) =
    quota_group,
                duty_percent
                        ->  %f0_quota_cba16_lookup%;

    "SKN_VG",   100     ->  500;
    "SKN_VG",    90     ->  400;
    "SKN_VG",    80     ->  400;
    "SKN_VG",    75     ->  400;
    "SKN_VG",    60     ->  300;
    "SKN_FG",   100     ->  500;
    -,            -     ->   0;
end


%is_f0_quota_group_1_at_date%(abstime date) =
    if system_db_parameters.%skn_cc_F0_entitlement_valid%(date)
        then  crew.%has_agmt_group_skn_cc_at_date%(date)
    else
        crew.%has_agmt_group_snk_cc_at_date%(date);

%is_f0_eligable_at_date%(abstime date) =
    %is_f0_quota_group_1_at_date%(date);

%f0_quota_group_at_date_cba16%(abstime date) =
    let
        is_SNK = crew.%has_agmt_group_snk_cc_at_date%(date),
        is_NKF = crew.%has_agmt_group_nkf_cc_at_date%(date),
        is_SKN = crew.%has_agmt_group_skn_cc_at_date%(date),
        is_VG = crew.%in_variable_group_at_date%(date);

    if system_db_parameters.%skn_cc_F0_entitlement_valid%(date)
        then %f0_quota_group_cba16_lookup%(is_SKN, is_VG)
    else
        %f0_quota_group_cba16_lookup_b%(is_SNK, is_NKF, is_VG);

%f0_quota_at_date_cba16%(Int percent, Abstime date) =
    if system_db_parameters.%skn_cc_F0_entitlement_valid%(date)
        then %f0_quota_cba16_lookup%(percent, %f0_quota_group_at_date_cba16%(date))
    else %f0_quota_cba16_lookup_b%(percent, %f0_quota_group_at_date_cba16%(date));

%_f0_quota_at_date%(abstime date) =
    let percent = %duty_percent_at_date%(date);

    if %cba16_F0_F36_entitlement_valid%(date) then
        %f0_quota_at_date_cba16%(percent, date)
    else
        if system_db_parameters.%skn_cc_F0_entitlement_valid%(date)
            then %f0_quota_lookup%(percent, %f0_quota_group_at_date_lookup%(date))
        else
            %f0_quota_lookup%(percent, %f0_quota_group_at_date_lookup_b%(date));

%f0_quota_at_date%(abstime date) =
    /* SNK should have whatever quota they had at beginning of year, irrespective of changes during year */
    default(
            %_f0_quota_at_date%(date)
        , 0);

%f0_reduction_in_month%(AbsTime start) =
    let strt = round_down_month(start),
        stp = add_months(strt, 1);
    %reduction_in_period%(strt, stp, %f0_quota_at_date%(start), "F0");
    
    
%f0_reduction_str_built%(AbsTime date) =
    format_time(date, %_f0_reduction_format_str%);

%f0_entitled_str% = "Entitled F0 days";
%f0_correction_str% = "Entitled F0 days CORR";
%f0_round_str% = "F0 days ROUND";
%_f0_reduction_format_str% = "F0 Reductions[%d%b]";


/*******
 * F36
 *******/

%is_f36_quota_group_1_at_date%(abstime date) =
    crew.%has_agmt_group_snk_cc_at_date%(date) and
    crew.%in_variable_group_at_date%(date);

%is_f36_quota_group_3_at_date%(abstime date) =
    crew.%has_agmt_group_snk_cc_at_date%(date) and
    crew.%in_fixed_group_at_date%(date);

%is_f36_quota_group_4_at_date%(abstime date) =
    crew.%has_agmt_group_nkf_cc_at_date%(date) and
    crew.%in_fixed_group_at_date%(date) and
    %is_parttime_at_date%(date);

%is_f36_quota_group_at_date%(abstime date) =
    %is_f36_quota_group_1_at_date%(date) or
    %is_f36_quota_group_3_at_date%(date) or
    (%cba16_F0_F36_entitlement_valid%(date) and %is_f36_quota_group_4_at_date%(date));


table f36_quota_group(abstime date) =

    %is_f36_quota_group_1_at_date%(date),
            %is_f36_quota_group_3_at_date%(date),
                %is_f36_quota_group_4_at_date%(date)
                    ->
                        %f36_quota_group_at_date%,
                                /* salary.account.f0_grant (py) */
                                /* salary.account.f36.f36_grant (py) */
                                %f36_quota_group_desc_at_date%;

    y,   n,  n   ->  1,          "SNK CC VG";
    n,   y,  n   ->  3,          "SNK CC FG";
    n,   n,  y   ->  4,          "NKF CC FG parttime";
    -,   -,  -   ->  void_int,   "other CC";
end

table f36_quota(int duty_percent, int quota_group) =
    duty_percent,
                quota_group
                    ->  %f36_quota_lookup%;
    100,        3   ->  700;
    (75,80),    3   ->  600;
     60,        3   ->  400;
      -,        -   ->    0;
end


%f36_quota_lookup_at_date%(abstime date) =
    let
        percent = %duty_percent_at_date%(date),
        quota = %f36_quota_group_at_date%(date);

    if %cba16_F0_F36_entitlement_valid%(date) and percent < 100 then
        0
    else
        %f36_quota_lookup%(percent, quota);


export %f36_quota_at_date%(abstime date) =
    default(
        if system_db_parameters.%f36_entitlemnts_skn_cc_inshape%(date) and 
        crew.%has_agmt_group_skn_cc_at_date%(date) then
            0
        else if %is_f36_quota_group_at_date%(date) then
            %f36_quota_lookup_at_date%(date)
        else
            freedays.%entitled_f36_days_of_lookup_year%(date)
        , 0);

%f36_reduction_in_month%(AbsTime start) =
    let strt = round_down_month(start),
        stp = add_months(strt, 1);
    %reduction_in_period%(strt, stp, %f36_quota_at_date%(start), "F36");

%f36_reduction_str_built%(AbsTime date) =
    format_time(date, %_f36_reduction_format_str%);


%f36_entitled_str% = "Entitled F36 days";
%f36_correction_str% = "Entitled F36 days CORR";
%f36_round_str% = "F36 days ROUND";
%_f36_reduction_format_str% = "F36 Reductions[%d%b]";
%f36_reset_str% = "F36 Reset";


/*******
 * F9
 *******/


%f9_reset_str% = "F9 Reset";

/*******
  * F32  
*********/
/*%jan01%=round_down_year(fundamental.%now%);*/
/*%Nov01% =round_down_month(add_months(%jan01%,11));*/
/*%Nov_before_20_yrs% = add_years(%Nov01%,-20);*/


export %has_age_60plus%(abstime date) =
  default(crew.%is_cabin% and
  (date > add_years(crew.%birthday%, 60))and (date < add_years(crew.%birthday%, 65)),false)
  ;

export %has_age_65plus%(Abstime date) =
  default(crew.%is_cabin% and
  (date > add_years(crew.%birthday%, 65)),false)
  ;

export %is_f32_crew_base_group_at_date%(abstime date) =
 if (report_crewlists.%crew_base%(date)="CPH") then
  True
 else
  False;

export %crew_has_min_20yrs_exp_at_cph%(abstime date,abstime date1) =
 if (report_crewlists.%crew_base%(date)="CPH") and 
 (report_crewlists.%crew_base%(date1)="CPH") then
  True
 else
  False;


/* End of file */
