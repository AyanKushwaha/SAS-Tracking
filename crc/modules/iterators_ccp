/* -*- crc -*- 
 *
 * Purpose:
 *   Fundamental iterators.
 * Created by:
 *   Extracted from the Carmen Standard User, 07-Dec-2005
 *
 * Major changes:
 *
 */

module iterators_ccp inherits iterators
import keywords;
import levels;
import trip;
import duty;
import leg;

global export iterator chain_set =
  partition(chain);
end
%num_chains_in_bag% = count(chain_set);

/*
** Trip iterators
*/

global export iterator trip_set =
  partition(trip);
end

export iterator homebase_set =
  partition(trip)
  by(trip.%homebase%);
end

export iterator trip_base_set =
  partition(trip)
  by(leg.%homebase%);
end

/*
** Duty iterators ITERATORS
*/

global export iterator duty_set =
  partition(duty);
end
%num_duties_in_bag% = count(duty_set);

export iterator layover_set =
  partition(duty)
  by(duty.%end_station%);
end

/*
** Leg iterators
*/

global export iterator leg_set =
  partition(leg);
end
%num_legs_in_bag% = count(leg_set);

export iterator end_station_set =
  partition(leg)
  by(leg.%end_station%);
end

export iterator start_station_set =
  partition(leg)
  by(leg.%start_station%);
end

export iterator stations_set =
  partition(leg)
  by(leg.%start_station%, leg.%end_station%);
end

export iterator flight_carrier_set =
  partition(leg)
  by(leg.%flight_carrier%);
end

export iterator unique_leg_set =
  partition(leg)
  by( leg.%flight_carrier%,leg.%flight_nr%,leg.%code%,leg.%start_station%, 
      leg.%leg_number%,leg.%their_flight_suffix%,leg.%our_flight_suffix%,leg.%is_deadhead%,leg.%start_utc%);
end

/* fd, udor or task, udor */
export iterator flight_set =
  partition(leg)
  by(
    leg.%flight_carrier%,
    leg.%flight_nr%,
    leg.%flight_suffix%,
    leg.%code%,
    leg.%udor%
  );
end

/* fd, udor, adep or task, udor, adep */
export iterator flight_leg_set =
  partition(leg)
  by(
    leg.%flight_carrier%,
    leg.%flight_nr%,
    leg.%flight_suffix%,
    leg.%our_flight_suffix%,
    leg.%code%,
    leg.%udor%,
    leg.%start_station%
  );
end

export iterator ac_family_set =
  partition(leg)
  by(leg.%ac_family%);
end

/*
** Keys for compression iterators
*/

/* compressed leg values */

%dep_daylight_saving_change% =
    round_down(keywords.%local_departure_time%,24:00) <>
    round_down(keywords.%local_departure_time_summer%,24:00);
%arr_daylight_saving_change% =
    round_down(keywords.%local_arrival_time%,24:00) <>
    round_down(keywords.%local_arrival_time_summer%,24:00);

%key1% =  keywords.%flight_number%;
%key2% =  keywords.%leg_number%;
%key3% =  keywords.%deadhead%;
%key4% =  keywords.%flight_carrier%;
%key5% =  keywords.%flight_suffix%;
%key6% =  time_of_day(keywords.%departure%);
%key7% =  time_of_day(keywords.%arrival%);
%key8% =  keywords.%departure_airport_name%;
%key9% =  keywords.%arrival_airport_name%;

%key10% = %dep_daylight_saving_change%;
%key11% = %arr_daylight_saving_change%;

/* compressed duty values */

%duty_pos% =
    round_down(first(leg(duty),keywords.%arrival%),24:00) -
    round_down(first(leg(trip),keywords.%arrival%),24:00);
%days_to_next_rtd% =
    if not is_last(duty(trip)) then
        round_down( next(duty(trip),first(leg(duty),keywords.%departure%)) ,24:00) -
        round_down(first(leg(duty),keywords.%departure%),24:00) + 24:00
    else
        0:00;
%key15% = %duty_pos%;
%key16% = %days_to_next_rtd%;
%key17% = trip.%name%;
%key18% = default(keywords.%aircraft_change%,false);

/* compressed trip values */

%crew_pos_1% =  first(leg(trip),keywords.%assigned_crew_position%(1));
%crew_pos_2% =  first(leg(trip),keywords.%assigned_crew_position%(2));
%crew_pos_3% =  first(leg(trip),keywords.%assigned_crew_position%(3));
%crew_pos_4% =  first(leg(trip),keywords.%assigned_crew_position%(4));
%crew_pos_5% =  first(leg(trip),keywords.%assigned_crew_position%(5));
%crew_pos_6% =  first(leg(trip),keywords.%assigned_crew_position%(6));
%crew_pos_7% =  first(leg(trip),keywords.%assigned_crew_position%(7));
%crew_pos_8% =  first(leg(trip),keywords.%assigned_crew_position%(8));
%crew_pos_9% =  first(leg(trip),keywords.%assigned_crew_position%(9));
%crew_pos_10% = first(leg(trip),keywords.%assigned_crew_position%(10));
%crew_pos_11% = first(leg(trip),keywords.%assigned_crew_position%(11));
%crew_pos_12% = first(leg(trip),keywords.%assigned_crew_position%(12));

/*
** Compression iterators
*/

export iterator compressed_trip_set =
  partition(trip)
  by(map(leg(trip),%key1%, %key2%, %key3%, %key4%,
                   %key5%, %key6%, %key7%, %key8%,
                   %key9%, %key10%,%key11%,
                   %key15%,%key16%,%key18%),
      %key17%,
      %crew_pos_1%,  %crew_pos_2%,
      %crew_pos_3%,  %crew_pos_4%,
      %crew_pos_5%,  %crew_pos_6%,
      %crew_pos_7%,  %crew_pos_8%,
      %crew_pos_9%,  %crew_pos_10%,
      %crew_pos_11%, %crew_pos_12% );
end

export iterator compressed_duty_set =
  partition(duty)
  by(map(leg(duty),%key1%,  %key2%,  %key3%, %key4%,
                   %key5%,  %key6%,  %key7%, %key8%,
                   %key9%,  %key10%, %key11%,
                   %key15%, %key16%, %key18% ),
      %key17%,
      %crew_pos_1%,  %crew_pos_2%,
      %crew_pos_3%,  %crew_pos_4%,
      %crew_pos_5%,  %crew_pos_6%,
      %crew_pos_7%,  %crew_pos_8%,
      %crew_pos_9%,  %crew_pos_10%,
      %crew_pos_11%, %crew_pos_12% );
end


export iterator compressed_leg_set =
  partition(leg)
  by( %key1%,  %key2%,  %key3%, %key4%,
      %key5%,  %key6%,  %key7%, %key8%,
      %key9%,  %key10%, %key11%,
      %key15%, %key16%, %key18%,

      %crew_pos_1%,  %crew_pos_2%,
      %crew_pos_3%,  %crew_pos_4%,
      %crew_pos_5%,  %crew_pos_6%,
      %crew_pos_7%,  %crew_pos_8%,
      %crew_pos_9%,  %crew_pos_10%,
      %crew_pos_11%, %crew_pos_12% );
end

