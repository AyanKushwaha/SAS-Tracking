/* -*- crc -*- 
 *
 * $Header$ 
 *
 * Purpose:
 *   This module contains flight crew specific industrial rules to be used in
 *   tracking
 *
 * Sections:
 *    
 *
 * Created by:
 *   Peter Jonsson 23-May-2006
 *
 * Major changes:
 *
 */

module rules_indust_cct_fc inherits rules_indust_cct

import duty_time;
import accumulators;
import parameters;
import freedays;
import fdp;
import duty_period;
import oma16;

/*
** Rule:
**    Maximum number of sold days in calendar month.
**
** Description:
**    Check that the maximum number of sold days doesnt exceed monthly limits.
**
** Agreement:
**    FC 9.9
*/
rule ind_max_num_sold_days_month_ALL =
  valid roster.%check_rules% and
        crew.%is_ski% and
        not (parameters.%K15_jan16_valid%(wop.%start_UTC%) and crew.%is_ski%) and
        wop.%in_pp% and
        wop.%is_last_on_duty_in_month% and
        not crew.%is_leased_wop_start%;

  %bought_days_in_calendar_month% <= %max_sold_days_in_calendar_month% + 
				    rule_exceptions.%overshoot_int%(wop.%start_UTC%);

  startdate  = wop.%start_utc%;
  severity = first(leg(wop), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = %ind_max_num_sold_days_month_ALL_failobject%;
  failtext(Int value, Int limit) =
    rules.%failtext_int%("Coll: Sold days cal. month",value,limit);
  remark "Coll: Max sold days in calendar month exceeded.",
  planner "Check that the number of sold days in calendar month "
          "doesnt exceed limit";
end

%max_sold_days_in_calendar_month% = 6;

%bought_days_in_calendar_month% =
  compdays.%bought_days_in_calendar_month%(wop.%start_UTC%);

%ind_max_num_sold_days_month_ALL_failobject% =
  let start = wop.%start_month_start%;
  default(first(duty(chain), duty.%failobject_start%) where
            (duty.%start_day% >= start and
             bought_days.%bought_days_in_period%(start, duty.%end_day% + 24:00) >
             %max_sold_days_in_calendar_month%),
          wop.%failobject_start%);
          

%max_duty_time_per_day_2_months_skn_fc_p% = 
  parameter 9:30 remark "Max duty time per P-day in 2 months [SKN]";

  rule ind_max_reduced_time_off_periods_in_calendar_month_FC =
  valid trip.%check_rules% and
        crew.%in_variable_group_trip_start% and
        is_last(trip(wop)) where (trip.%is_on_duty% and
                                  not trip.%has_no_duty_time_contribution%) and
        last(duty(trip),duty.%rest_ends_in_pp%) and
        %reduced_time_off_period% and
        rule_exceptions.%rule_on%(trip.%start_UTC%);
        
  %nr_reduced_time_off_periods_calendar_month% <= 2;
  
  startdate  = trip.%start_utc%;
  severity = first(leg(trip), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = trip.%failobject_start%;
  failtext(Int value, Int limit) =
    rules.%failtext_int%(concat("", "Coll: maximum reduced time-off periods in ",
                                format_time(%time_off_period_month%, "%b")), value, limit);
  remark "Coll: Maximum reduced time-off periods in calendar month",
  planner "Check that there are no more than 2 time-off periods reduced to less"
          " than 62:00 in a calendar month";
end

%nr_reduced_time_off_periods_calendar_month% =
  count(trip(roster)) from (current) backwards
    while (trip.%start_month_start% = %time_off_period_month%)
    where (is_last(trip(wop))
             where (trip.%is_on_duty% and
                    not trip.%has_no_duty_time_contribution%) and
           %reduced_time_off_period%);

%reduced_time_off_period% =
  last(duty(trip),duty.%rest_time%) < freedays.%time_off_minimum_duration_fc_k11%;

%time_off_period_month% =
  default(next(trip(roster),trip.%start_month_start%) where (trip.%is_on_duty%),
          last(trip(roster),trip.%start_month_start%));




/* End of file */

