/* -*- crc -*- 
 *
 * 
 *
 * Purpose of the file:
 * Definitions used in autotest (texttest) reports to
 * perform regression test on Rave values
 *
 * Created by:
 *  Jonas Carlsson 2006-10-12
 *
 * Major changes:
 *
 * Sections:
 *  1. COMMON DEFINTIONS
 *  2. CHAIN VALUE SECTION
 *  3. TRIP VALUE SECTION
 *  4. DUTY VALUE SECTION
 *  5. LEG VALUE SECTION
 */

module crg_texttest

import fundamental;
import leg;
import duty;
import trip;
import crew;
import roster;
import hotel;
import levels;
import bid;


/*********************************************************************
 * SECTION 1: COMMON DEFINITIONS
 *********************************************************************/
  
/* This string is printed in the report if a void value is encountered */
%void_value% = "** VOID **";
/* Used when counting the number of elements in a section
   Increase if the actual number of elements grows larger
   than the current %max_nr_elements% */
%max_nr_elements% = 100;

/*********************************************************************
 * SECTION 2: CHAIN VALUE SECTION
 *********************************************************************/

/* Chain element lookup variables */
export %chain_nr_elements% = 
  count(times(%max_nr_elements%)) while (%chain_element_name%(%times_index_0%) <> "");
export %chain_default_sort% = %chain_element_value%(1);
export %chain_element_name%(Int element) = %chain_elem_name%(element);
export %chain_element_value%(Int element) = %chain_elem_value%(element);
export %chain_element_exist%(Int element) = %chain_element_name%(element) <> "";

/* Chain value table */
table chain_elements_table(Int element) =
  element ->
    String %chain_elem_name%,
      String %chain_elem_value%;
    
  1 -> "Crew id",
       default(crew.%id%, %void_value%);
       
  2 -> "Roster block time",
       default(format_time(roster.%block_time%, "%h:%02M"),
               %void_value%);
       
  3 -> "Roster duty time (with night upgrade)",
       default(format_time(roster.%duty_time%(duty.union, True), "%h:%02M"),
               %void_value%);
  
  4 -> "Crew number of bids",
       default(format_int(bid.%crew_num_bids%, "%d"),
               %void_value%);
       
  - -> "", "";
end   

/*********************************************************************
 * SECTION 3: TRIP VALUE SECTION
 *********************************************************************/

/* Trip element lookup variables */
export %trip_nr_elements% = 
  count(times(%max_nr_elements%)) while (%trip_element_name%(%times_index_0%) <> "");
export %trip_default_sort% = %trip_element_value%(1);
export %trip_element_name%(Int element) = %trip_elem_name%(element);
export %trip_element_value%(Int element) = %trip_elem_value%(element);
export %trip_element_exist%(Int element) = %trip_element_name%(element) <> "";

/* Trip value table */
table trip_elements_table(Int element) =
  element ->
    String %trip_elem_name%,
      String %trip_elem_value%;
    
  1 -> "Trip start UTC",
       default(format_time(trip.%start_utc%, "%b %d, %02H:%02M"),
               %void_value%);
               
  2 -> "Trip end UTC",
       default(format_time(trip.%end_utc%, "%b %d, %02H:%02M"),
               %void_value%);
  3 -> "Trip block time",
       default(format_time(trip.%block_time%, "%h:%02M"),
               %void_value%);
       
  4 -> "Trip duty time (with night upgrade)",
       default(format_time(trip.%duty_time%(duty.union, True), "%h:%02M"),
               %void_value%);
               
  - -> "", "";
end   

/*********************************************************************
 * SECTION 4: DUTY VALUE SECTION
 *********************************************************************/

/* Duty element lookup variables */
export %duty_nr_elements% = 
  count(times(%max_nr_elements%)) while (%duty_element_name%(%times_index_0%) <> "");
export %duty_default_sort% = %duty_element_value%(1);
export %duty_element_name%(Int element) = %duty_elem_name%(element);
export %duty_element_value%(Int element) = %duty_elem_value%(element);
export %duty_element_exist%(Int element) = %duty_element_name%(element) <> "";

/* Duty value table */
table duty_elements_table(Int element) =
  element ->
    String %duty_elem_name%,
      String %duty_elem_value%;
    
  1 -> "Duty start UTC",
       default(format_time(duty.%start_utc%, "%b %d, %02H:%02M"),
               %void_value%);
   
  2 -> "Duty end UTC",
       default(format_time(duty.%end_utc%, "%b %d, %02H:%02M"),
               %void_value%);
       
  3 -> "Duty block time", 
       default(format_time(duty.%block_time%, "%h:%02M"),
               %void_value%);

  4 -> "Duty duty time (with night upgrade)", 
       default(format_time(duty.%duty_time%(duty.union, True), "%h:%02M"),
               %void_value%);

  - -> "", "";
end   

/*********************************************************************
 * SECTION 5: LEG VALUE SECTION
 *********************************************************************/

/* Leg element lookup variables */
export %leg_nr_elements% = 
  count(times(%max_nr_elements%)) while (%leg_element_name%(%times_index_0%) <> "");
export %leg_default_sort% = %leg_element_value%(1);
export %leg_element_name%(Int element) = %leg_elem_name%(element);
export %leg_element_value%(Int element) = %leg_elem_value%(element);
export %leg_element_exist%(Int element) = %leg_element_name%(element) <> "";

/* Leg value table */
table leg_elements_table(int element) =
  element ->
    String %leg_elem_name%,
      String %leg_elem_value%;
  
  1 -> "Leg start UTC",
       default(format_time(leg.%start_utc%, "%b %d, %02H:%02M"),
               %void_value%);
   
  2 -> "Leg end UTC",
       default(format_time(leg.%end_utc%, "%b %d, %02H:%02M"),
               %void_value%);
       
  3 -> "Leg block time", 
       default(format_time(leg.%block_time%, "%h:%02M"),
               %void_value%);

  - -> "", "";
end

/* end of file */

