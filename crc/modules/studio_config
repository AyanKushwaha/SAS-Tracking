/* -*- crc -*- 
 *
 * 
 * 
 * Purpose: 
 *   Definitions for studio (rudobs, header etc). 
 *
 *  The file contains:
 *  1. General parameters	
 *  2. Color definitions
 *	3. Header mappings
 *	4. Leg mappings
 *	5. Rudobs
 *   .1 Helper functions
 *   .2 Planning period
 *   .3 Min rest after duty
 *   .4 Min rest after trip
 *   .5 Briefing / Debriefing
 *   .6 Layover
 *
 *
 * Created by:
 *   Extracted from the Carmen Standard User, 07-Dec-2005
 *
 *
 * Major changes:
 *   07-Jun-2007: Major restructuring of all studio_config modules.
 *                /Erik Gustafsson
 *
 */

root module studio_config
import base_utils;
import fundamental;
import levels;
import leg;
import duty;
import trip;
import crew_pos;
import task;
import crg_basic;
import crg_crew_pos;
import rest;
import hotel;
import planning_area;
import fdp;
import duty_period;
import oma16;

/*******************************************************************
**
** Section 1: General parameters
**
********************************************************************/

%rulefailure% = crg_basic.%rule_failure%;

/* Used for cases where we don't want to do a crew lookup */
%utc_time%(Abstime hb_time) =
  station_utctime("CPH", hb_time);

/* Parameter for visualizing the rule name (what the rule is namned in the rave
   code) in the check legality-report. */
%visualize_rulename% = 
  parameter false 
  remark "Debug: Display rulename in Check Legality report";

export %trip_assigned_check% = True; /*Redefined in CCT */
/*******************************************************************
**
** Section 2: Color definitions
**
********************************************************************/

%color_change_indicator% = 7;   /* Yellow, Built into Studio, do not use! */
export %color_default% = -1;		/* Background color */
%color_pp_background% = 2;	    /* White */
%color_illegal% = 30;		        /* Red */
%color_warning% = 20;		        /* Bright red */
%color_incomplete% = 29;	      /* Brown */
%color_rule_exception% = 22;    /* Orange */
%color_trip_rest% = 26;		      /* Green */
%color_brief_debrief% = 26;	    /* Dark green */
%color_brief_delayed% = 22;     /* Orange */
%color_brief_debrief_checked_in% = 21; /* Light green */
%color_frozen_brief% = 15;  /* Light Thiel */
%color_ac_change% = 31;     /* Purple */
%color_layover% = 26;       /* Dark green */
%color_penalty% = 22;       /* Orange */
%color_duty_rest% = 3;      /* Blue */
%color_far_duty_rest% = 30; /* Red */
%color_annotation% = 7;         /* Yellow */
%color_crew_warning% = %color_warning%;
%color_bought_day% = 13;     /* Light yellow */
%color_crew_leased_day% = 17; /* Light green */

export %color_granted_high_bid% = 26;   /* Dark green */
export %color_granted_bid% = 14;  /* Light blue */
export %color_violated_bid% = 20; /* Bright red */
%color_non_available% = 3;        /* Blue */
%color_base_break% = 23;    /* Pink (same as deadhead) */
%color_jar_booked% = 26;	  /* Dark green */
%color_published_view% = "LightOrange"; 
%color_do_not_publish% = "LightOrange";
%color_privately_traded_day_J3P_bg% = "LightPurple";
%color_privately_traded_day_J3F_bg% = "LightBlue";
%color_privately_traded_free_day% = 25; /* Dark Grey */
%color_adhoc_on_loan_bg% = 17;
%color_informed_period% = 27;
%color_published_not_informed% = "Orange";
%color_publish% = 3; /* Blue */
%color_publish_this_period% = 27; /* Green */
%color_overbooked% = 3;     /* Blue */
%color_overrostered% = 26;     /* Dark green */
%color_underrostered% = 15;     /* Lighter some color */
%color_underrostered_jar% = 10;     /* Some color */
%color_gd_overrostered% = 24;     /* Dark red */
%color_gd_underrostered% = 22;     /* Orange brown */
%color_flight_leg% = 5;     /* Light Green (default for flight legs.) */
%color_manual_flight% = 21; /* Bright green */
%color_sch_off_block_color% = 14; /*Light blue*/
%color_sch_in_block_color% = 8;   /*Blue*/
%color_cio% = 17;
%color_after_publication_time% = 4; /*Grey*/
%color_meal_stop% = 9;/* Light brown */
%color_meal_stop_manual% = 29;/* brown */

/* Crew change colors */
%color_crew_agreement_change% = 11;
%color_crew_homebase_change% = 19;
%color_crew_acqual_change% = 21;

/*******************************************************************
**
** Section 3: Header mappings
**
********************************************************************/
/*
** Top middle color is used for indication database
** changes in a multiuser environment.
*/
%rtd_header_color_top_middle% = -1;
%leg_header_color_top_middle% = -1;
%leg_set_header_color_top_middle% = -1;

/*
** Trip header
*/
 
/* If you want to show less positions, consider using 
 * %all_assigned_crew% = ... crg_crew_pos.CockPit, Cabin, Other 
 */
%all_assigned_crew% =
  crg_crew_pos.%trip_assigned_vector%(crg_crew_pos.AllCat,
                                      crg_crew_pos.SingleTrip);

%crr_header_text_top_left% = %all_assigned_crew%;
%crr_header_text_top_middle% = "";
%crr_header_text_top_right% = "";

%crr_header_text_bottom_left% = default(crr_name, "");
%crr_header_text_bottom_middle% = trip.%homebase%;
%crr_header_text_bottom_right% = trip.%area_planning_group%;

%crr_header_color_top% = 
  if %rulefailure% then 
    %color_illegal% 
  else if %show_incomplete% and %trip_is_incomplete% then 
    %color_incomplete%
  else 
    %color_default%;
    
%crr_header_color_top_left% = %crr_header_color_top%;
%crr_header_color_top_middle% = %crr_header_color_top%;
%crr_header_color_top_right% = %crr_header_color_top%;

%crr_header_color_bottom% = %color_default%;
%crr_header_color_bottom_right% = %crr_header_color_bottom%;
%crr_header_color_bottom_middle% = %crr_header_color_bottom%;
%crr_header_color_bottom_left%	= %crr_header_color_bottom%;

%show_incomplete% = 
  parameter TRUE
  remark "Show markers for incomplete trips";

%incomplete_one_legged_linda% =
  is_first(leg(trip)) and is_last(leg(trip)) and
  leg.%departure_airport_base% <> leg.%arrival_airport_base%;

%trip_is_incomplete% =
  not (trip.%is_standby% or
      not ((default(%incomplete_connection%,
                    %incomplete_one_legged_linda%) and
            trip.%has_only_flight_duty%) or
            (first(leg(trip), leg.%departure_airport_base%) <>
             last(leg(trip), leg.%arrival_airport_base%)) or
            (first(leg(trip), leg.%departure_airport_base% = "") or
             last(leg(trip), leg.%arrival_airport_base% = ""))));

%incomplete_connection% =
  arrival_airport_name <> next(leg(trip), departure_airport_name);

/*
** ac-roation view mappings
*/

%ac_header_text_bottom_left_ac% = default(first(leg(chain),leg.%ac_type%),"");
%ac_header_text_bottom_middle_ac% = "";
%ac_header_text_bottom_right_ac% = first(leg(trip), leg.%ac_planning_group%);
%ac_header_text_top_middle_ac% = "";
%ac_header_text_top_left_ac% = %tail_id%;
%ac_header_text_top_right_ac% = default(first(leg(chain),aircraft_owner),"");

%tail_id% = default(substr(resource_id,3,7),"");

%ac_header_color_top_left% = -1;
%ac_header_color_top_middle% = -1;
%ac_header_color_top_right% = -1;

/*******************************************************************
**
** Section 4: Leg mappings
**
********************************************************************/

%leg_color% =
  if leg.%is_active_flight% and crew_pos.%jar_booked% then
    %color_jar_booked%
  else if not leg.%is_nop% then
    default(task.%color%(/*leg.%group_code%,*/leg.%code%), %color_default%)
  else
    %color_default%;


%leg_color_top_middle_crr% = %leg_color%;
%leg_color_top_middle_rtd% = %leg_color%;
%leg_color_top_middle_leg% = %leg_color%;
%leg_color_top_middle_leg_set% = %leg_color%;
%leg_color_top_middle_ac% = %leg_color%;

/*
** The trip view leg markers
*/

/*If a colour is set to the upper left field change indicator rudobs is obscured*/
/*%leg_color_top_left_crr% =  %leg_color%;*/
/*If a colour is set to the upper right field hard lock rudobs is obscured*/
%leg_color_top_right_crr% = 
  if next_locked then
    -1
  else 
    %leg_color%;


%leg_color_middle_crr% = %leg_color%;
%leg_color_middle_left_crr% = %leg_color_middle_crr%;
%leg_color_middle_middle_crr% = %leg_color_middle_crr%;
%leg_color_middle_right_crr% = %leg_color_middle_crr%;

%leg_color_bottom_left_crr% = %leg_color%;
%leg_color_bottom_middle_crr% = %leg_color%;

%leg_color_bottom_middle_crew% = %leg_color%;
%leg_color_top_middle_crew% = %leg_color%;

/*
** Leg color crr bottom right: aircraft change
*/
%leg_color_bottom_right_crr% = 
  if %rudob_show_ac_change% and
      leg.%is_flight_duty% and
      leg.%is_ac_change%
  then 
    %color_ac_change%
  else 
    %leg_color%;

%rudob_show_ac_change% = 
  parameter TRUE
  remark "Show markers for aircraft changes";
%leg_color_bottom_right_crew% = %leg_color_bottom_right_crr%;

/* Leg delimiter color in roster view */
%leg_color_delimiter_crew% = 
    if leg.%time% >= 24:00 then "BrightGrey" else "-1";


/*******************************************************************
**
** Section 5: Rudobs
**
********************************************************************/

/*******************************************************
 * 5.1 Helper functions
 *******************************************************/

/* Do not start rudobs too early or late, studio complains */
%rudob_date_range%(abstime t) =
  nmax(nmin(fundamental.%plan_end%, t), fundamental.%plan_start%);

/* Some rudobs only makes sense if they overlap the planning period */
%rudob_len_if_overlap_pp%(abstime s, abstime e) =
  if overlap(s,e, %pp_start%, %pp_end%) > 0:00 then 
    e-s 
  else 
    0:00;
 
/* Other if they are after %pp_start% */
%rudob_len_if_after_pp_start%(abstime s, abstime e) =
  if e >= %pp_start% then 
    e-s 
  else 
    0:00;
 
%required_rest% = rest.%minimum_time%;

/*******************************************************
 * 5.2 Planning period
 *******************************************************/
%pp_background_start% = %utc_time%(%pp_start%);
%pp_background_len% = %utc_time%(%pp_end%)-%pp_background_start%;
%pp_background_layer% = false; /* keep background in background*/
export %pp_background_color_p% =
  parameter 2
  remark "Color: The current background color for pp";

/*******************************************************
 * 5.3 Min rest after duty
 *******************************************************/

%rudob_show_duty_min_rest_p% = 
  parameter TRUE
  remark "Show markers for minimum required rest time after a duty";

%rudob_show_duty_min_rest% = %rudob_show_duty_min_rest_p%;

%rudob_duty_min_rest_color% = %color_duty_rest%;

%local_transport_time_before_rest% =
  if leg.%arrives_at_homebase% then
    rest.%local_transport_default%
  else
    default(hotel.%slt_after_leg%,
            rest.%local_transport_time%);
%local_transport_time_after_rest% =
  if leg.%arrives_at_homebase% then
    rest.%local_transport_default%
  else
    default(next(leg(trip), hotel.%slt_before_leg%),
            rest.%local_transport_time%);

%rudob_duty_min_rest_text% = concat("Min required rest after DP: ",
                                    %reltime2str%(%rudob_duty_min_rest_length%));

/* The code below is duplicated from rules_indust_ccp since we can't import
   rule-modules in studio-config for pre-rostering */
%valid_ind_min_rest_after_duty_period_ALL% =
  trip.%check_rules% and
  trip.%in_pp_extended% and
  ((is_last(leg(duty)) and %rudob_show_duty_min_rest%) or
   (is_last(leg(trip)) and %rudob_show_trip_min_rest%)) and
  duty.%is_on_duty% and
  not leg.%is_rest% and
  /* Short stop at homebase allowed for sby call-outs */
  not leg.%is_standby_callout% and
  duty_period.%is_last_duty_in_duty_period%;

%rudob_duty_min_rest_length% = 
  if %valid_ind_min_rest_after_duty_period_ALL% and
     not duty.%is_blank_day% and      
     not duty.%has_no_duty_time_contribution% 
  then 
    oma16.%min_rest_after_dp%
  else 
    0:00;

%rudob_duty_min_rest_start% = duty.%end_UTC%;
%rudob_duty_min_rest_bottom% = 15;
%rudob_duty_min_rest_top% = 20;


/*******************************************************
 * 5.4 Min rest after trip
 *******************************************************/
%rudob_show_rest_required_trip_p% = 
  parameter true
  remark "Show markers for required rest after trip";
  
%rudob_show_trip_min_rest% = %rudob_show_rest_required_trip_p%;

/*******************************************************
 * 5.5 Briefing / Debriefing
 *******************************************************/

%rudob_show_briefing_debriefing_time_p% = 
  parameter TRUE
  remark "Show markers for briefing and debriefing time";

%rudob_show_briefing_debriefing_time% =
  %rudob_show_briefing_debriefing_time_p% and not leg.%is_simulator%;

%rudob_debriefing_time_text% = "Debriefing"; 
%rudob_briefing_time_text% = "Briefing";
%rudob_scheduled_briefing_time_text% = "Scheduled briefing";

/* Briefing time rudob is redefined in _cct */
%rudob_briefing_time_length% = %rudob_briefing_time_length_default%;
%rudob_briefing_time_length_default% = 
  if %rudob_show_briefing_debriefing_time% and
      leg.%has_check_in% and
      /* Do not draw if too far away from pp */
      %rudob_date_range%(%rudob_briefing_time_start%)
	= %rudob_briefing_time_start%
  then
    /* The length of the check-in rudob is not the length of the checkin
       but rather the difference in duty_pass_start and start of first activity */
    leg.%activity_start_time_UTC% - %rudob_briefing_time_start%
    /*leg.%check_in%*/
  else
    0:00;

%rudob_briefing_time_delayed_length% =
  if %rudob_show_briefing_debriefing_time% and
      leg.%has_check_in% and
      /* Do not draw if too far away from pp */
      %rudob_date_range%(%rudob_briefing_default_time_start%)
	= %rudob_briefing_default_time_start% and 
  %rudob_briefing_default_time_start% < %rudob_briefing_time_start%
  or leg.%has_frozen_estimated_block_off%
  then
    leg.%activity_start_time_UTC% /*%rudob_briefing_time_start%*/ - %rudob_briefing_default_time_start%
  else
    0:00;

%rudob_debriefing_time_length% = 
  if %rudob_show_briefing_debriefing_time% and
      leg.%has_check_out% and
      /* Do not draw if too far away from pp */
      %rudob_date_range%(%rudob_debriefing_time_start%)
	= %rudob_debriefing_time_start%
  then 
    /* Debriefing time is allways set to debriefing time */
    leg.%check_out%
  else
    0:00;

/* check_[in|out] times are always relative to scheduled.*/
%rudob_briefing_time_start% = 
    leg.%ci_start_utc%;
%rudob_briefing_default_time_start% = 
    leg.%ci_default_start_utc%;
      
%rudob_debriefing_time_start% = leg.%activity_end_time_UTC%;
%rudob_briefing_debriefing_time_bottom% = 40;
%rudob_briefing_debriefing_time_top% = 60;
%rudob_debriefing_time_color% = %color_brief_debrief%;
%rudob_briefing_time_color% =  %color_brief_debrief%;
%rudob_briefing_time_delayed_color% = %color_brief_delayed%;

/*******************************************************
 * 5.5.1 Simulator Briefing / Debriefing
 *******************************************************/

%rudob_show_sim_briefing_debriefing_time% =
  if leg.%is_ground_duty% and leg.%is_simulator% then
    %rudob_show_sim_brief_debrief%
  else
    false;

%rudob_show_sim_brief_debrief% =
  not default(next(leg(duty), leg.%is_simulator_briefing_debriefing%) or 
              prev(leg(duty), leg.%is_simulator_briefing_debriefing%), false);
    
%rudob_sim_debriefing_time_text% = "Debriefing"; 
%rudob_sim_briefing_time_text% = "Briefing";

%rudob_sim_briefing_time_length% =  
  if %rudob_show_sim_briefing_debriefing_time% then
    leg.%activity_start_time_UTC% - %rudob_sim_briefing_time_start%
  else
    0:00;

%rudob_sim_debriefing_time_length% = 
  if %rudob_show_sim_briefing_debriefing_time% then 
    leg.%check_out%
  else
    0:00;

%rudob_sim_briefing_time_start% = 
  if %rudob_show_sim_briefing_debriefing_time% then
    leg.%ci_start_utc%
  else
    leg.%activity_scheduled_start_time_UTC%;
      
%rudob_sim_debriefing_time_start% = leg.%activity_end_time_UTC%;
%rudob_sim_briefing_debriefing_time_bottom% = 40;
%rudob_sim_briefing_debriefing_time_top% = 60;
%rudob_sim_debriefing_time_color% = %color_brief_debrief%;
%rudob_sim_briefing_time_color% = %color_brief_debrief%;


/*******************************************************
 * 5.6 Layover
 *******************************************************/
%rudob_show_layover_time% = 
  parameter TRUE
  remark "Show markers for layover time";

%rudob_layover_time_text% = 
  concat("Layover:  ", format_time(duty.%rest_time%,"%h:%02M"));

%rudob_layover_time_length% = 
  if  %rudob_show_layover_time% and 
      is_last(leg(duty)) and 
      not is_last(leg(trip))
  then 
    duty.%rest_time%
  else 
    0:00;

%rudob_layover_time_start% = duty.%end_UTC%;
%rudob_layover_time_bottom% = 48;
%rudob_layover_time_top% = 53;
%rudob_layover_time_color% = %color_layover%;


/* Annotations view toggle */
%annotations_view_toggle% =
  parameter FALSE;

/* end of file */

