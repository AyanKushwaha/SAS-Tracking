/* -*- crc -*- 
 *
 * 
 * 
 * Purpose:
 *   This file contains basic definitions for the areas defined under the section headline. Many of the 
 *   definitions are used in the other level modules. This is to improve caching and to reuse variable
 *   names in a good way.
 *
 * Created by:
 *   Anna Olsson, Jeppesen 27-Feb-2008
 *
 * Major changes:
 *
 */
module wop_cct inherits wop
import trip;
import duty;
import leg;
import levels;
import fundamental;
import task;

/*redefine export %rest_days% = 
  sum(wop(roster), %rest_days_in_single_wop%)
  from (next) forwards while ((wop.%is_rest% or wop.%is_bought%) and %consecutive_wops_bw%);
  
%rest_days_in_single_wop% =  
  sum(duty(wop), duty.%days%) 
  where ((duty.%is_rest% or duty.%is_bought%) and duty.%consecutive_duties_bw%); */

/*
** The version defined in wop assumes that PP start is the first day of a month,
** which is also the case in CCR and a stand-alone CCT studio.
** However, when generating alerts for AM, or in a CCT studio started from AM,
** PP start can be any day in a month, and this can result in alerts not being
** generated.
** This redefined version should resolve that problem!
*/ 
redefine %_is_last_in_pp_start_month%(String attr) =
  let pp_start_month = round_down_month(%pp_start%);
  %attribute%(attr) and %in_pp% and
  %start_month_start% = pp_start_month and
  default(next(wop(roster), %start_month_start%) where (%attribute%(attr))
            > pp_start_month,
          true);

/*
** Number of standby line days in a working period.
**
** A day with a standby line call-out is not included.
**
** This is used when checking the maximum number of working days between F-days.
** Standby line days, or IL on standby line day, should not be included in that
** rule, except when there is a call-out or they are between duties within the wop.
*/
export %standby_line_days% =
  sum(trip(wop), trip.%days%)
  from(first) while (trip.%is_standby%);

export %illness_days% =
  sum(trip(wop), trip.%days%)
  where (trip.%is_illness%);

export %last_leg_has_landed% =
  last(trip(wop),trip.%last_leg_has_landed%);


/* end of file */

