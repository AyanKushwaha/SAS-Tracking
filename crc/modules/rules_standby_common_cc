/* -*- crc -*- 
 *
 * 
 *
 * Purpose:
 *   This module contains standby rules used common for cabin crew in Carmen 
 *   Crew Rostering and Crew Tracking
 *
 * Sections:
 *   Standby rules
 *
 * Created by:
 *   Johan Astrom, 2008-06-02
 *
 * Major changes:
 *
 */

module rules_standby_common_cc inherits rules_standby_common

import standby;
import accumulators;
import trip;
import rules;
import freedays;
import parameters;

/*
** Rule: 
**    Crew must have at least 2 months of experience or
**    3 longhaul trips before performing standby.
**
** Description:
**    Crew must have at least 2 months of experience or 3
**    longhaul trips before performing standby.
**    The rule is only valid for danish longhaul cabin crew.
**
** Agreement:
**    CAU K04 B2 F1.6
*/
rule sby_2_months_lh_experience_before_sby_CC_SKD =
  valid roster.%check_rules% and
        crew.%is_SKD% and 
        crew.%has_had_new_restriction_recently% and
        wop.%in_pp_extended% and
        wop.%has_standby% and
        crew.%is_long_haul_wop_start% and
        not crew.%is_leased_wop_start% and
        rule_exceptions.%rule_on%(wop.%start_UTC%);

  %crew_legal_experience_for_standby_long_haul%;
	
  startdate = wop.%start_UTC%;
  failobject = wop.%failobject_start%;
  severity = first(leg(wop), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failtext  
    concat("SBY: Min 2 months after NEW,"  
           " valid date is: ", 
           format_time(default(%first_valid_lh_standby_date%, 31dec2035), "%02d%ub%Y"));
  remark "SBY: Crew must have at least 2 months of experience before performing standby",
  planner "The rule checks that has 2 months of experience before performing standby.";
end

%crew_legal_experience_for_standby_long_haul% =
  %crew_long_haul_experience_exceeds_2_months% or
  %crew_has_necessary_long_haul_trips%;

/*
** No NEW restricion within last 2 months
** NEW restriction ends on second familiarization flight date
*/
%crew_long_haul_experience_exceeds_2_months% =
  not crew.%has_restr_subtype_in_ival%("NEW", "ACTYPE", add_months(standby.%first_standby_in_wop_date%, -2), 
                                        standby.%first_standby_in_wop_date%);

%first_valid_lh_standby_date% =
  add_months(crew.%qrestr_new_end%(add_months(standby.%first_standby_in_wop_date%, -2),
                                   standby.%first_standby_in_wop_date%), 2);

/*
** For performance purposes we avoid specific lh trip
** accumulator and translate demand into at least 6
** lh flights
*/
%crew_has_necessary_long_haul_trips% =
  %nr_landings_since_new_enddate% >= 6;

/*
** This terrible code to avoid LH trip specific accumulator
*/
%nr_landings_since_new_enddate% =
  %nr_landing_A330_since_new_enddate% +
  %nr_landing_A340_since_new_enddate%; 

%nr_landing_A330_since_new_enddate% =
  if %lf1_330% = 01jan1986 or
     %lf1_330% < %new_restriction_date% then
    0
  else if %lf2_330% = 01jan1986 or
          %lf2_330% < %new_restriction_date% then 
    1
  else if %lf3_330% = 01jan1986 or
          %lf3_330% < %new_restriction_date% then 
    2
  else if %lf4_330% = 01jan1986 or
          %lf4_330% < %new_restriction_date% then 
    3
  else if %lf5_330% = 01jan1986 or
          %lf5_330% < %new_restriction_date% then 
    4
  else if %lf6_330% = 01jan1986 or
          %lf6_330% < %new_restriction_date% then 
    5
  else
    6;

%lf1_330% = accumulators.%last_flown%("A330", trip.%start_UTC%);
%lf2_330% = accumulators.%last_flown%("A330", %lf1_330%);
%lf3_330% = accumulators.%last_flown%("A330", %lf2_330%);
%lf4_330% = accumulators.%last_flown%("A330", %lf3_330%);
%lf5_330% = accumulators.%last_flown%("A330", %lf4_330%);
%lf6_330% = accumulators.%last_flown%("A330", %lf5_330%);

%nr_landing_A340_since_new_enddate% =
  if %lf1_340% = 01jan1986 or
     %lf1_340% < %new_restriction_date% then
    0
  else if %lf2_340% = 01jan1986 or
          %lf2_340% < %new_restriction_date% then 
    1
  else if %lf3_340% = 01jan1986 or
          %lf3_340% < %new_restriction_date% then 
    2
  else if %lf4_340% = 01jan1986 or
          %lf4_340% < %new_restriction_date% then 
    3
  else if %lf5_340% = 01jan1986 or
          %lf5_340% < %new_restriction_date% then 
    4
  else if %lf6_340% = 01jan1986 or
          %lf6_340% < %new_restriction_date% then 
    5
  else
    6;

%lf1_340% = accumulators.%last_flown%("A340", trip.%start_UTC%);
%lf2_340% = accumulators.%last_flown%("A340", %lf1_340%);
%lf3_340% = accumulators.%last_flown%("A340", %lf2_340%);
%lf4_340% = accumulators.%last_flown%("A340", %lf3_340%);
%lf5_340% = accumulators.%last_flown%("A340", %lf4_340%);
%lf6_340% = accumulators.%last_flown%("A340", %lf5_340%);

%new_restriction_date% =
  default(crew.%restriction_subtype_enddate%("NEW", "ACTYPE", standby.%first_standby_in_wop_date%), 01jan1986);

/*
** Rule: 
**    SKS temp CC may not be assigned home/hotel standby
**
** Description:
**    The rule checks that SKS temp CC are not assigned hoem/hotel standby
**    The only standby allowed is airport standby
**    
** Agreement:
**    SKS CC 
*/

rule (off) stb_only_airport_standby_allowed_temp_CC_SKS =
  valid roster.%check_rules% and
        trip.%in_pp% and
        crew.%is_SKS%  and
        crew.%is_temporary_trip_start% and
        trip.%is_standby% and
        not crew.%is_leased_trip_start%;

  trip.%is_airport_standby%;

  startdate  = trip.%start_UTC%;
  failobject = trip.%failobject_start%;
  severity = first(leg(trip), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failtext  
    concat("SBY: Temp CC must not be assigned ", first(leg(trip),leg.%code%)
                                                   where (leg.%is_standby%));
  remark "(CCR) SBY: Temp CC must not be assigned home/hotel standby.",
  planner "Check that SKS temp CC are not assigned home/hotel standby.";
end


/* end of file */
