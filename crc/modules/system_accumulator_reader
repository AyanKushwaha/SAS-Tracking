/* -*- crc -*-
 *
 * Purpose:
 *   This module contains routines focused on reading accumulator values, when having been update in database.
 *   This is usable in manpower, on possibly some testing. It does *not* in any way replace ordinary 
 *   Accumulator implementation
 *   
 * Sections:
 *
 * Created by:
 *   Lars Westerlind 2016-02-19
 *
 */

module system_accumulator_reader

import base_utils;

/****************************************************************
 * Section 1:  Accumulator names literals
 ***************************************************************/

/* accumulators for fdc15, accessed from manpower also */
export %fdc15_scheduled_acc_name% =
  "fdc15_nr_possibly_scheduled_freedays_acc";
export %fdc15_year_entitled_acc_name% =
  "fdc15_nr_entitled_freedays_acc";
export %fdc15_twin_entitled_acc_name% =
  "fdc15_nr_acc_entitled_freedays_qa_2_months";

/* accumulator of published values, used in tracking report */
export %nr_far_single_slipping_acc_name% =
  "nr_far_single_slipping";

/****************************************************************
 * Section 2:  General db access
 ***************************************************************/
%full_acc_name%(String accname) =
  concat("accumulators.", accname);

table accumulator_int_tbl(String acc_name, String acc_key, Abstime acc_tim) =
  %full_acc_name%(acc_name), acc_key, acc_tim -> Int %acc_int_value%;
  external "accumulator_int";
  name, acckey, tim -> val;
  -, -, - -> void_int;
end

table accumulator_int_prev_tbl(String acc_name, String acc_key, Abstime acc_tim) =
  %full_acc_name%(acc_name), acc_key, acc_tim -> Abstime %prev_acc_int_time%;
  external "accumulator_int";
  name, acckey, >tim -> max(tim);
end

export %int_value_at%(String acc_name, String acc_key, Abstime lookup_tim) =
  %acc_int_value%(acc_name, acc_key, %prev_acc_int_time%(acc_name, acc_key, lookup_tim + 0:01));

export %int_value_in%(String acc_name, String acc_key, Abstime s, Abstime e) =
  %int_value_at%(acc_name, acc_key, e) - default(%int_value_at%(acc_name, acc_key, s), 0);

table accumulator_rel_tbl(String acc_name, String acc_key, Abstime acc_tim) =
  %full_acc_name%(acc_name), acc_key, acc_tim -> Reltime %acc_rel_value%;
  external "accumulator_rel";
  name, acckey, tim -> val;
  -, -, - -> void_reltime;
end

table accumulator_rel_prev_tbl(String acc_name, String acc_key, Abstime acc_tim) =
  %full_acc_name%(acc_name), acc_key, acc_tim -> Abstime %prev_acc_rel_time%;
  external "accumulator_rel";
  name, acckey, >tim -> max(tim);
end

export %rel_value_at%(String acc_name, String acc_key, Abstime lookup_tim) =
  %acc_rel_value%(acc_name, acc_key, %prev_acc_rel_time%(acc_name, acc_key, lookup_tim + 0:01));

export %rel_value_in%(String acc_name, String acc_key, Abstime s, Abstime e) =
  %rel_value_at%(acc_name, acc_key, e) - default(%rel_value_at%(acc_name, acc_key, s), 0:00);

table accumulator_prev_time_tbl(String acc_name, String acc_key, Abstime acc_tim) =
  %full_acc_name%(acc_name), acc_key, acc_tim -> export Abstime %prev_acc_time_time%;
  external "accumulator_time";
  name, acckey, >tim -> max(tim);
end

table accumulator_next_time_tbl(String acc_name, String acc_key, Abstime acc_tim) =
  %full_acc_name%(acc_name), acc_key, acc_tim -> export Abstime %next_acc_time_time%;
  external "accumulator_time";
  name, acckey, <tim -> min(tim);
end
  
