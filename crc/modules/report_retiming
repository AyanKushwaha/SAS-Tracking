
/* -*- crc -*- *

Report Retiming.

Copied from OTS and modified for SAS by
Stefan Hammar in March 2012 
as a part of the Retiming project. 

Note: This module can only be used in Pairing rule set. 

********************************************************/

module report_retiming

import retiming;
import studio_retiming;
import levels;
import iterators;
import leg;
import retiming_leg;

/*
 * Mapped variables from other modules
 */

%leg_flight_carrier% = leg.%flight_carrier%;
%leg_flight_number% = leg.%flight_nr%;
%leg_leg_number% = 
  if leg_number = 1 then 
    "" 
  else 
    format_int(leg_number,"-%d");

%leg_flight_suffix% = 
  if NOT leg.%is_flight_duty% then 
    " "
  else if flight_suffix = "*" then 
    " " 
  else 
    flight_suffix;

%leg_start_station% = leg.%start_station%;
%leg_end_station% = leg.%end_station%;

%leg_start% = leg.%start_lt%;
%leg_end% = leg.%end_lt%;
%leg_start_orig% = retiming_leg.%scheduled_start_lc%;
%leg_end_orig% = retiming_leg.%scheduled_end_lc%;

%any_leg_in_bag_has_retiming% = 
  any(leg_set, retiming.%has_retiming%);
%first_departure_date_in_bag% = 
  min(leg_set, leg.%normalized_scheduled_start_date_utc%);

export iterator flight_set =
  partition(leg)
  by(leg.%flight_carrier%, leg.%flight_nr%, leg.%start_station%,
     leg.%leg_number%, leg.%flight_suffix%, deadhead);
end

export iterator dflight_set = 
  partition(leg)
  by(retiming.%regularity_key%,
     retiming_leg.%amount_retimed_start%, 
     retiming_leg.%amount_retimed_end%,
     retiming.%retiming_alternatives%);
end

export iterator day_set =
  partition(leg)
  by (leg.%normalized_scheduled_start_date_utc%);
end

  
