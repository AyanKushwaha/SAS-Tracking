/* -*- crc -*- 
 *
 *
 * Purpose:
 *   The module contains industrial rules common to CC pairing and rostering.
 *
 * Major changes:
 *
 */
root module rules_indust_common

import fundamental;
import levels;
import trip;
import duty;
import leg;
import task;
import parameters;
import duty_time;
import rule_exceptions;
import duty_period;
import rules;
import fdp;
import rest;
import base_product;
import oma16;
import oma16_defs;
import hotel;
import system_db_parameters;

/*
/*
** Rule: 
**    Maximum no of sectors in daily duty for non SK crew
*     Checks the no of sectors in a daily duty.
** 
** Description:
**    The rules checks that the no of sectors within a daily duty is not 
**    exceeded
**
**  SKCMS-3259 - original rule altered to check non-sk agmt crew
**                               
*/

export rule ind_max_sectors_in_daily_duty_non_sk_ALL =
  valid trip.%check_rules%
    and (duty.%is_regarded_fpu_agmt%
    or trip.%has_agmt_group_fpu_cc%)
    and duty.%in_pp_extended%
    and duty_period.%is_first_duty_in_duty_period%
    and duty_period.%is_fdp%
    and not duty.%is_bought%;

        fdp.%num_sectors% <= 
                        %max_no_of_active_sectors_in_daily_duty_non_sk% 
                       + rule_exceptions.%overshoot_int%(duty.%start_utc%);   

  startdate  = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = duty.%failobject_start%;
  failtext(Int value, Int limit) =
          rules.%failtext_int%("Coll: non SK max active sectors in DP", value, limit);
  remark "Coll: non SK max active sectors in DP",
  planner "This rule regualtes the number of active sectors for non SK."
          " Max 6 active sectors in daily duty for trips named FPU.";

end

%max_no_of_active_sectors_in_daily_duty_non_sk% =
    parameter 6 minvalue 0 maxvalue 20
    remark "Non SK: Limit for active sectors in daily duty";

/* New Rules in K15 SKCMS-579
/*
** Rule: 
**    Maximum daily duty- Daily duty is counted from CI to CO for non SK crew.
** 
** Description:
**    The rules checks that the max daily duty is not exceeded
**                               
*/
export rule (on) ind_max_daily_duty_non_sk_ALL =
  valid trip.%check_rules% 
   and (duty.%is_regarded_fpu_agmt% or trip.%has_agmt_group_fpu_cc%)
   and not duty_period.%is_split%
   and duty.%in_pp_extended%
   and duty.%is_on_duty%
   and duty.%is_flight_duty%
   and not duty.%is_bought%;

        duty_period.%time% <= duty_time.%max_daily_duty_non_sk% + rule_exceptions.%overshoot_rel%(duty.%start_utc%);   
  startdate  = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = duty.%failobject_end%;
  failtext (Reltime value, Reltime limit) =    
           rules.%failtext_rel%("Coll: Max daily duty for non SK crew", value, limit);
  remark "Coll: Max daily duty CC+FD flying non SK",
  planner "This rule regulates the max daily duty time for non SK. "
          "Max 16 hours including passive flights in the duty period. "
          "The 16 hour restriction is not valid at split duty and only for trips named FPU.";
end

/**********************************
variables shared for rules in cc resp fc sub-modules:
ind_min_rest_after_fdp_12h_more
***********************************/
%ind_min_rest_after_fdp_12h_more_failtext%(Reltime value, Reltime limit) =
  rules.%failtext_rel%("Coll: min rest after FDP>12h", value, limit);

%_minimum_time_cc_with_extra% =
  rest.%minimum_time_cc% + %extra_rest_for_fdp_12h_more%;

%_minimum_time_fc_with_extra% =
  rest.%minimum_time_fc% + %extra_rest_for_fdp_12h_more%;

%fdp_12h_more% =
  fdp.%scheduled_time% > 12:00 and
  not oma16.%is_extended_fdp%;

%extra_local_transport_time_at_outstation% =
  if duty.%end_station% = default(next(duty(chain), duty.%start_station%), "")
  then nmax(last(leg(duty), hotel.%leg_local_transport_apt_to_hotel% - 0:30), 0:00)
        + nmax(default(next(duty(chain), first(leg(duty), hotel.%leg_local_transport_hotel_to_apt% - 0:30)), 0:00), 0:00)
  else 0:00;


/* Extra minimum rest after an FDP > 12h.
**
** There are 6 possible cases:
** FDP< + 2:00 (pos_16) >FDPE< + 2:00 (pos_09) >FDP
** FDP<        (pos_15) >FDPE< + 4:00 (pos_10) >FDP
** FDP< + 2:00 (pos_14) >FDPE< + 4:00 (pos_02) >FDPE< + 2:00 (pos_05) >FDP
** FDP< + 2:00 (pos_12) >FDPE< + 2:00 (pos_01) >FDPE< + 4:00 (pos_06) >FDP
** FDP<        (pos_13) >FDPE< + 6:00 (pos_04) >FDPE< + 2:00 (pos_07) >FDP
** FDP<        (pos_11) >FDPE< + 4:00 (pos_03) >FDPE< + 4:00 (pos_08) >FDP
*/
%extra_rest_for_fdp_12h_more% =
  if %fdp_12h_more%
  then /* current is FDPE */
       if default(next(duty(chain), %fdp_12h_more%) where (duty_period.%is_first_duty_in_duty_period% and duty_period.%is_on_duty%), false)
       then /* next is FDPE */
            if default(prev(duty(chain), duty_period.%rest_time_after% >= oma16.%min_rest_after_sh_dp_followed_by_fdp% + 2:00) where (duty_period.%is_last_duty_in_duty_period% and duty_period.%is_on_duty%), true) /* SKCMS-886: if prev(duty(chain)... is void then 2 extra hrs was spend before the duty and then default(... , TRUE) */
            then /* prev has rest space for extra 2h (or no prev exists: SKCMS-886) */
                 if default(next(duty(chain), duty_period.%rest_time_after% >= oma16.%min_rest_after_sh_dp_followed_by_fdp% + 4:00) where (duty_period.%is_first_duty_in_duty_period% and duty_period.%is_on_duty%), false)
                 then /* next has rest space for extra 4h */
                      2:00 /* pos_01 */
                 else /* next has no rest space for extra 4h */
                      4:00 /* pos_02 */
            else /* prev has no rest space for extra 2h */
                 if default(next(duty(chain), duty_period.%rest_time_after% >= oma16.%min_rest_after_sh_dp_followed_by_fdp% + 4:00) where (duty_period.%is_first_duty_in_duty_period% and duty_period.%is_on_duty%), false)
                 then /* next has rest space for extra 4h */
                      4:00 /* pos_03 */
                 else /* next has no rest space for extra 4h */
                      6:00 /* pos_04 */
       else /* next no FDPE */
            if default(prev(duty(chain), %fdp_12h_more%) where(duty_period.%is_first_duty_in_duty_period% and duty_period.%is_on_duty%), false)
            then /* prev is FDPE */
                 if default(prev(duty(chain), prev(duty(chain), duty_period.%rest_time_after% >= oma16.%min_rest_after_sh_dp_followed_by_fdp% + 2:00) where(duty_period.%is_last_duty_in_duty_period% and duty_period.%is_on_duty%)) where(duty_period.%is_first_duty_in_duty_period% and duty_period.%is_on_duty%), true) /* SKCMS-886: if prev(duty(chain)... is void then 2 extra hrs was spend before the duty and then default(... , TRUE) */
                 then /* prev of prev has rest space for extra 2h (or no prev of prev exists: SKCMS-886) */
                      if default(prev(duty(chain), duty_period.%rest_time_after% >= oma16.%min_rest_after_sh_dp_followed_by_fdp% + 4:00) where(duty_period.%is_last_duty_in_duty_period% and duty_period.%is_on_duty%), false)
                      then /* prev has rest space for extra 4h */
                           2:00 /* pos_05 */
                      else /* prev has no rest space for extra 4h */
                           4:00 /* pos_06 */
                 else /* prev of prev has no rest space for extra 2h */
                      if default(prev(duty(chain), duty_period.%rest_time_after% >= oma16.%min_rest_after_sh_dp_followed_by_fdp% + 6:00) where(duty_period.%is_last_duty_in_duty_period% and duty_period.%is_on_duty%), false)
                      then /* prev has rest space for extra 6h */
                           2:00 /* pos_07 */
                      else /* prev has no rest space for extra 6h */
                           4:00 /* pos_08 */
            else /* prev no FDPE */
                 if default(prev(duty(chain), duty_period.%rest_time_after% >= oma16.%min_rest_after_sh_dp_followed_by_fdp% + 2:00) where(duty_period.%is_last_duty_in_duty_period% and duty_period.%is_on_duty%), true) /* SKCMS-886: if prev(duty(chain)... is void then 2 extra hrs was spend before the duty and then default(... , TRUE) */
                 then /* prev has rest space for extra 2h (or no prev exists: SKCMS-886) */
                      2:00 /* pos_09 */
                 else /* prev has no rest space for extra 6h */
                      4:00 /* pos_10 */
  else /* current no FDPE */
       if default(next(duty(chain), %fdp_12h_more%) where (duty_period.%is_first_duty_in_duty_period% and duty_period.%is_on_duty%), false)
       then /* next is FDPE */
            if default(next(duty(chain), next(duty(chain), %fdp_12h_more%)  where(duty_period.%is_first_duty_in_duty_period% and duty_period.%is_on_duty%)) where(duty_period.%is_first_duty_in_duty_period% and duty_period.%is_on_duty%), false)
            then /* next of next is FDPE */
                 if default(next(duty(chain), next(duty(chain), duty_period.%rest_time_after% >= oma16.%min_rest_after_sh_dp_followed_by_fdp% + 4:00)  where(duty_period.%is_first_duty_in_duty_period% and duty_period.%is_on_duty%)) where(duty_period.%is_first_duty_in_duty_period% and duty_period.%is_on_duty%), false)
                 then /* next of next has rest space for extra 4h */
                      if default(next(duty(chain), duty_period.%rest_time_after% >= oma16.%min_rest_after_sh_dp_followed_by_fdp% + 4:00) where (duty_period.%is_first_duty_in_duty_period% and duty_period.%is_on_duty%), false)
                      then /* next has rest space for extra 4h */
                           0:00 /* pos_11 */
                      else /* next has no rest space for extra 4h */
                           2:00 /* pos_12 */
                 else /* next of next has no rest space for extra 4h */
                      if default(next(duty(chain), duty_period.%rest_time_after% >= oma16.%min_rest_after_sh_dp_followed_by_fdp% + 6:00) where (duty_period.%is_first_duty_in_duty_period% and duty_period.%is_on_duty%), false)
                      then /* next has rest space for extra 6h */
                           0:00 /* pos_13 */
                      else /* next has no rest space for extra 6h */
                           2:00 /* pos_14 */
            else  /* next of next no FDPE */
                 if default(next(duty(chain), duty_period.%rest_time_after% >= oma16.%min_rest_after_sh_dp_followed_by_fdp% + 4:00) where (duty_period.%is_first_duty_in_duty_period% and duty_period.%is_on_duty%), false)
                 then /* next has rest space for extra 4h */
                      0:00 /* pos_15 */
                 else /* next has no rest space for extra 4h */
                      2:00 /* pos_16 */
       else /* next no FDPE */
            0:00;

/*******************************************************************
** Misc training. Is here
*******************************************************************/

%ofdx_period_limit% =
  if leg.%ofdx_valid% then leg.%ofdx_period_limit%
  else 0;

/*
** Office day x rules. If the activity is a ofdx, it's  checked that it's valid in the time period, and
** that the limit is not reached
*/
export rule ind_training_ofdx_activity_allowed =
  valid trip.%check_rules%
    and leg.%in_pp_extended%
    and not leg.%is_flight_duty%
    and not void(leg.%ofdx_id%)
    and rule_exceptions.%rule_on%(leg.%activity_scheduled_start_time_UTC%);

  leg.%ofdx_attended% <= %ofdx_period_limit%
    + rule_exceptions.%overshoot_int%(leg.%activity_scheduled_start_time_UTC%);


  startdate  = leg.%activity_scheduled_start_time_UTC%;
  severity =  %severity_filter_int%(leg.%start_utc%,%duty_lh_region%);
  failobject = leg.%failobject_departure%;
  failtext(Int value, Int limit) =
    rules.%failtext_int%(concat("Too many ",task.%code%, " Office Duty activities in period"), value, limit);
  remark "(CCR) Funct: More Office Duty activities than limit",
  planner "";
end


