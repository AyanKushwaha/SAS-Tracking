/* -*- crc -*- 
 *
 * 
 *
 * Purpose:
 *   This module contains functions for standard failtexts. 
 *
 * Created by:
 *   Johan Astrom 20Dec 2007
 *
 * Major changes:
 *
 */

module rules

import levels;
import leg;

/*
** Failtext functions
*/

%format_string%(Abstime a, Abstime b) =
  if abs(a-b) < 365*24:00 then
    "%02d%02b"
  else
    "%02d%02b%02y";

export %failtext_int%(String text, Int actual, Int limit) =
  concat(text, format_int(actual, " %d"), 
    format_int(limit, "[%d]"));

export %failtext_int_div_100%(String text, Int actual, Int limit) =
    let actual_sign = if actual < 0 then "-" else "",
        limit_sign = if limit < 0 then "-" else "",
        actual_abs = abs(actual),
        limit_abs = abs(limit);
  concat(text, " ",
         actual_sign, format_int(actual_abs/100, "%d."), format_int(actual_abs - (actual_abs/100)*100, "%d"),
         " [",limit_sign, format_int(limit_abs/100, "%d."), format_int(limit_abs - (limit_abs/100)*100, "%d"),"]");


export %failtext_rel%(String text, Reltime actual, Reltime limit) =
  concat(text, " ", %print_reltime%(actual), 
    "[", %print_reltime%(limit),"]");
  
export %failtext_absdate%(String text, Abstime actual, Abstime limit) =
  let format = %format_string%(actual,limit);
  concat(text, " ", format_time(actual, format), 
    "[", format_time(limit, format),"]");
  
export %failtext_abs%(String text, Abstime actual, Abstime limit) =
  let format = %format_string%(actual, limit);
  concat(text, " ", %print_abs%(actual, format), 
    "[", %print_abs%(limit, format),"]");

export %failtext_str%(String text, String actual, String limit) =
  concat(text," ",actual," [",limit,"]");
  
%print_reltime%(Reltime RTime) =
  format_time(RTime, %reltime_format_string%);

%print_abs%(Abstime Date, String format) = 
  format_time(Date, concat(format," %02H:%02M"));

%reltime_format_string% = "%h:%02M";

