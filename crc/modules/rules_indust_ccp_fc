/* -*- crc -*- 
 *
 * $Header$
 *
 * Purpose:
 *   This module contains flight crew specific industrial rules or limits used in 
 *   Carmen Crew Pairing and as studio only in Carmen Crew Rostering and 
 *   Carmen Crew Tracking respectively.
 *
 * Sections:
 *   1. Connection rules (minimum connection time)
 *   2. Duty rules
 *   3. Block time rules
 *   4. Rest rules
 *
 * Created by:
 *   Henrik Albertson, 20-Dec-2005
 *
 * Major changes:
 *   Hasse Eliasson, 2009May6:
 *     Meal Rules were moved to rules_meal_ccp_fc, so that they
 *     could be redefined for Tracking, in a sub module using inheritance.
 *
 */

module rules_indust_ccp_fc inherits rules_indust_ccp
import crew_pos;
import hotel;
import duty_period;
import parameters;

/****************************************************************
 * Section 1: Connection rules
 * Rules:
 *   - minimum connection times
 *   (- maximum connection times)
 ***************************************************************/

/*
** Rule: Minimum connection time
*/
/*
redefine %min_connection% = connection.%min_time_FC_exception%;
*/

/****************************************************************
 * Section 2: Duty rules
 ***************************************************************/

/*
** Rule: Maximum duty time in a duty
*/
/*
** No longer any restriction for 3 pilots/1 active landing or
** 2 pilots short haul with long haul ac, HenrikA 13oct2006
**
** SKI K12: applies again to 2-pilot production.
*/
redefine %r_valid_duty_time_in_duty_period% =
  (duty.%active_pilots% = 2 and
   duty.%is_long_haul% and
   (parameters.%k12_fc_sp4_2_valid%(duty.%start_hb%) or
    not %duty_touches_excepted_airport%)) or
  (parameters.%k12_fc_sp4_2_valid%(duty.%start_hb%) and
   duty_time.%is_any_sim_instr_scand_dp%);
  
/* No longer any "DD" reduction, HenrikA 17oct2006 */ 
redefine export %duty_time_in_duty_period% =
  if parameters.%k12_fc_sp4_2_valid%(duty.%start_hb%) and
     duty.%is_long_haul% then
         fdp.%time%
  else
    duty_time.%in_duty_period%(duty.union, True);

redefine %leg_duty_time_until_now% =
    trip.%duty_time_in_period%(rest.%duty_period_start_UTC%(duty.union),
                             leg.%co_end_utc%,
                             fundamental.%night_upg%,
                             duty.union);

%duty_touches_excepted_airport% =
  any(leg(duty), crew_pos.%leg_touches_excepted_airport%)
  where(leg.%is_active_flight%);

/*
** Rule: 
**    Maximum number of night duties in a trip
**
** Description:
**    Check that maximum number of night duties between time-off period,
**    (for CCP = inside trip) as well as number of consecutive night 
**    duties is not exceeded. Night duty is defined as any duty 
**    touching the time interval 0000-0500 (FCSH).
**
**    NB! Two implementations are done. One in Pairing checking
**    inside trips and one in Rostering checking inside working period.
**
** Agreement:
**    FC 1:17 2.3Ac
**    CAU K06 C.1.1.4
**    NKF/SBK 8.2
**    4ExNG - no longer applies to CC
**
*/
export rule ind_max_night_duties_in_trip_FC =
  valid trip.%check_rules% and
        duty.%in_pp_extended% and
        not duty.%is_long_haul% and
        duty.%is_night_duty% and
        rule_exceptions.%rule_on%(duty.%start_UTC%);
        
  (trip.%night_duties% - %trip_bought_night_duties% <= %max_night_duties%) and
  (%nr_consecutive_night_duties% <= %max_consecutive_night_duties%);
  
  startdate  = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = %ind_max_night_duties_in_trip_FC_failobject%;
  failtext %max_night_duties_failtext%;
  remark "(CCP) Coll: Max night duties in trip",
  planner "The rule checks that the maximum number of, as well as the"
	        " maximum consecutive night duties is not exceeded (only for FC)."
          " A duty is at night if it touches the interval FC: (00:00,05:00),"
           "The rule is valid for FC with limits: max 3 nights total and max 2 consecutive for FC";
end

%trip_bought_night_duties% =
  count(duty(trip)) where(duty.%is_night_duty% and duty.%is_bought%);
  
%ind_max_night_duties_in_trip_FC_failobject% =
  first(duty(trip), duty.%failobject_start%)
  where(%night_duties_until_now% > %max_night_duties% or
  (%nr_consecutive_night_duties% > %max_consecutive_night_duties%));
  
%night_duties_until_now% =
  count(duty(trip))
  from(first)
  to(current)
  where(duty.%is_night_duty%);
  
%max_night_duties% = 
    parameter 3
    remark "CCP: Max night duties in trip limit";
    
%max_consecutive_night_duties% = 
    parameter 2
    remark "CCP: Max consecutive night duties in trip limit";
    
%max_night_duties_failtext% =
  if(trip.%night_duties% > %max_night_duties%) then
    rules.%failtext_int%("Coll: Night duties", trip.%night_duties%, %max_night_duties%)
  else
    rules.%failtext_int%("Coll: Cons night duties", %nr_consecutive_night_duties%, %max_consecutive_night_duties%);
    
%nr_consecutive_night_duties% =
  count(duty(trip))
  from (current) backwards
  while (%valid_night_duty%);
  
%valid_night_duty% =
  not duty.%is_long_haul% and
  duty.%is_night_duty% and 
  not duty.%is_bought%;

/*
** Rule: 
**    No duty same day when check out later than 0200
**
** Descritption:
**    Check that crew does not check in for early duty if the check out from
**    previous duty is later than 0200 local time and at homebase.
**
** Agreement:
**    
**    4ExNG CC - no longer applies
*/
export rule ind_early_duty_day_after_late_check_out_FC_ALL =
  valid not %is_roster% and
        duty.%is_on_duty% and
        prev(duty(trip), duty.%arrives_at_homebase%) and
        prev(duty(wop), duty.%has_late_co%) and
        rule_exceptions.%rule_on%(duty.%start_UTC%);
        
  duty.%start_scheduled_hb% >= prev(duty(wop), duty.%end_day%) + 24:00 
  + %p_check_in_time_limit_after_night_duty_fc_all%;
  
  startdate  = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = duty.%failobject_start%;
  failtext "Coll: Early C/I day after late C/O";
  remark "(CCP) Coll: No early check in for duty day after late check out",
  planner "The rule checks that if there is a new trip assigned the day after"
          " the previous trip ends, check out for that trip is not later than"
          " 02:00. The rule is valid for all regions short haul.";
end

%p_check_in_time_limit_after_night_duty_fc_all% = 
    parameter 07:00 remark "(CCP) Earliest check-in day after night duty.";

/*
**	redefinitions for Rule: rule ind_max_working_days_in_trip_ALL
*/
redefine %max_days_in_trip% =
  if trip.%contains_short_haul% then
    %max_days_in_trip_sh%
  else
    99; /* FD pure LH trips do not have a limit */

/*
**  Rule:
** 	Max 20 hours duty in flight duty period btw end of a minimum rest period
**  until end of next duty period that is followed by minimum rest.
**  Description:
**  Rule will only be valid for SK SH
**  Rule will check that the time from start of local transfer before a (active)
**  duty that is preceded by minimum rest until the first following duty-period's
**  check-out that is followed by minimum rest does not exceed 20 hours.
**
**  CMS Legality CR229 FD SH SKS and SKD.
**
**  NB! This doesn't assume that there is minimum rest before/after a trip.
**  That is of course part of the normal definition of a trip, but if there
**  for some reason isn't min rest, then it shouldn't be assumed for this rule
**  A warning should be given if the 20hrs rule is violated, so that users
**  don't just accept the missing min rest.
**
**  K11 - applies also to SKN
*/

export rule ind_max_hours_in_flight_duty_fc =
  valid trip.%check_rules% and
        trip.%is_regarded_sk_sh_agmt% and
        not trip.%is_long_haul% and
        duty.%start_hb% < %pp_end% and
        duty.%end_hb% > %pp_start% and
        duty.%is_on_duty% and
        not duty.%has_no_duty_time_contribution% and
        rest.%minimum_rest_satisfied%;
        
  rest.%time_since_previous_min_rest% <= %ind_max_hours_in_duty% + 
  rule_exceptions.%overshoot_rel%(duty.%start_UTC%);
             
  startdate = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%, %duty_lh_region%));
  failobject =  %ind_max_hours_in_flight_duty_failobject%;
  failtext(reltime value, Reltime limit) = 
     rules.%failtext_rel%("Coll: Max dutyhours since last rest period", value, limit); 
  remark "Coll: Max. 20 hours between rest in duty period",
  planner "Rule will check that a rest period is started within "
          "the limit set for max dutyhours in the duty period";
end
/*
%max_hours_agreement_valid% =
  %agreement_valid%("hours_in_duty", duty.%start_hb%);
*/
%ind_max_hours_in_flight_duty_failobject% =
  let start = rest.%duty_rest_end_before%;
  default(
    last(leg(duty), 
         last(leg(chain), next(leg(chain), leg.%failobject_departure%))
         from(current)
         where(leg.%co_end_utc% - start <= %ind_max_hours_in_duty%)),
    duty.%failobject_start%);
       
%ind_max_hours_in_duty% = 
    parameter 20:00 minvalue 0:00
    remark "Max hours duty until next rest period";

/*
** Rule: No duty same day when check out later than 0200
*/

redefine %r_valid_no_duty_same_day_if_late_co% = 
    trip.%is_sks% or trip.%is_ac_employer_szss%;

/*
 * Rule: Max nr of sectors in duty period
 *
 *    Valid for SKN and SKS FD
 *
 *    No more than 6 active sectors in dp
 *    7 sectors are allowed in a dp, but then the last 
 *    sector have to be a passive transfer.
 *
 */
rule ind_max_sectors_in_duty_FC_se_no =
  valid trip.%check_rules% and
        trip.%homebase% <> "CPH" and /* SK, SVS and SZS Danish production should not be valid for this rule, so can't do a check on just region */
        duty.%in_pp_extended% and
        duty.%has_active_flight%;
  fdp.%num_sectors% <= %max_nr_of_sectors_in_duty% + 
  			       rule_exceptions.%overshoot_int%(duty.%start_UTC%);
  startdate  = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = %ind_max_sectors_in_duty_FC_se_no_failobject%;
  failtext(Int value, Int limit) =
    rules.%failtext_int%("Coll: Sectors in DP", value, limit);
  remark "Coll: Max sectors in DP",
          " a seventh leg allowed only if the last leg is passive.";
end

export %ind_max_nr_of_sectors_in_duty_p% =
    parameter 6
    remark "CCP: Max number of active sectors(legs) for FC of SE and NO";

%max_nr_of_sectors_in_duty% =
    if last(leg(duty), leg.%is_deadhead%) then
        %ind_max_nr_of_sectors_in_duty_p% + 1
    else
        %ind_max_nr_of_sectors_in_duty_p%;

%ind_max_sectors_in_duty_FC_se_no_failobject% =
  first(leg(trip), leg.%failobject_departure%)
  where(duty_period.%legs_until_current% > %max_nr_of_sectors_in_duty% + 
        rule_exceptions.%overshoot_int%(duty.%start_UTC%));
  
/*
** Rule:
**   - Maximum nr of legs in a FDP with extension for FC 
**
** Description:
**   Check the number of legs in a FDP with subpart-q extension
**
**   NB! Do not be misled by the name! The rule did originally check active legs
**   but has been changed to check active + passive legs.
**
** Agreement:
**   OSL par 6.1.5 extended to all FC with separate parameters in CCT
**   4ExNG   A new rule created in rule_indust_ccp applicable for FC and CC,
**           so this rule is no longer applicable. 
**   4ExNG contd.....  This rule counting active + passive legs applies again
**                     for FC SH only!
*/

rule ind_max_active_sectors_in_FDP_with_extension_FC_ALL =
  valid trip.%check_rules% and
        %flight_crew% and
        not duty.%is_SKI% and
        duty.%in_pp_extended% and
        duty_period.%is_on_duty% and
        oma16.%is_extended_fdp%;
        
  fdp.%num_sectors% <=
        %ind_max_sectors_in_fdp_with_extension% +
                rule_exceptions.%overshoot_int%(duty.%start_UTC%);
  startdate = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = %ind_max_active_sectors_in_duty_FC_failobject%;
  failtext(Int value, Int limit) =
    rules.%failtext_int%(concat("Coll: Max active+passive legs in FDP with extension ",
                                duty.%region%," ",
                                format_time(duty.%start_hb%,"%d%b")),
                         value,limit);
  remark "Coll: Max nr of active+passive legs in FDP with extension",
  planner "The rule checks that the number of sectors, active + passive,",
          " in a FDP with extension is not more than maximum allowed",
          " (a parameter per region). SKI is not valid in the rule.";
end

%_max_sectors_in_fdp_agreement_text% = 
    concat("max_sectors_in_extended_fdp_",duty.%region%);

%nr_of_active_sectors_in_duty% = 
  duty.%num_active_legs% +
  %_nr_of_active_sectors_in_prev_duty%;

%_nr_of_active_sectors_in_prev_duty% = 
  if default(prev(duty(trip), duty_period.%is_split% and duty_period.%is_first_duty_in_duty_period%), false) then
    prev(duty(trip), duty.%num_active_legs%)
  else
    0;

%ind_max_sectors_in_fdp_with_extension% = 
   if trip.%is_named_fpu% then
      system_db_parameters.%ind_max_sectors_in_fdp_with_extension_p%("max_sectors_in_extended_fdp_fpu", duty.%start_hb%)
   else default(system_db_parameters.%ind_max_sectors_in_fdp_with_extension_p%(%_max_sectors_in_fdp_agreement_text%, duty.%start_hb%)
           , 50);

%ind_max_active_sectors_in_duty_FC_failobject% =
  first(leg(trip), leg.%failobject_departure%)
  where(%nr_of_active_sectors_in_duty_until_now%
        > %ind_max_sectors_in_fdp_with_extension% + 
        rule_exceptions.%overshoot_int%(duty.%start_UTC%));

%nr_of_active_sectors_in_duty_until_now% = 
    count(leg(duty)) from(first) to(current) 
    where(leg.%is_active_flight%) + 
    %_nr_of_active_sectors_in_prev_duty%; 

/****************************************************************
 * Section 3: Block time rules
 ***************************************************************/

/*
** Rule:
**    Max block time for single long haul leg
**
** Description:
**    Check that the max block time for a single leg is not exceeded.
**    The rule is only valid for flights with 2 active pilots.
**
** Agreement:
**    SKI K06 p.3
*/
rule ind_max_block_time_single_lh_leg_FC =
  valid trip.%check_rules% and
        duty.%in_pp% and
        (leg.%is_long_haul% or duty.%is_sks% or duty.%is_ac_employer_szss%)
        and not crew_pos.%leg_touches_excepted_airport% and
        duty.%active_pilots% = 2 and
        leg.%is_active_flight%;
  leg.%block_time% <= %max_block_time_single_leg% + 
  		      rule_exceptions.%overshoot_rel%(leg.%activity_scheduled_start_time_UTC%);
  startdate  = leg.%activity_scheduled_start_time_UTC%;
  severity =  %severity_filter_int%(leg.%start_utc%,%duty_lh_region%);
  failobject = leg.%failobject_departure%;
  failtext(Reltime value, Reltime limit) =
    rules.%failtext_rel%("Coll: BLH", value, limit);
  remark "(CCP) Coll: Max block time for single leg",
  planner "The rule checks that the maximum block time for a single long haul"
           " leg, or a SKS leg, is not exceeded. It is only active for legs with 2 active pilots.";
end

%max_block_time_single_leg% = 6:30;

/****************************************************************
 * Section 4: Rest rules
 ***************************************************************/

/*
** Rule: Rest in 24hrs from c/i
*/
redefine %r_valid_rest_in_24hrs_from_ci% =
  duty.%is_short_haul% and
  not rest.%is_short%;

/*
** Rule: Night rest required before/after short stop
**   NB! Not valid for SKN (CR 221)
**
**   NB: K11 - valid for SKN again!
*/
redefine %r_valid_night_rest_surrounding_short_stop% = 
  true;


/*
** Rule:
**    No split duties 
**
** Description:
**    The rule checks that split duty according to the Subpart Q definition
**    is not assigned:
**
**    For all FC except SKI at homebase
**
**    It is necessary because FC SH after K11 no longer have any union rules 
**    for minimum rest, and Subpart Q allows split duty at homebase,
**    but the FC unions don't want it!
**
** Agreement:
**    OSL 6.1.5 (CR 306)
**    K11 FC SH SKD/SKN/SKS 6.1.8
*/

/*
** The new version of rule,  checks only for split duty between duty periods.
** Another version has been added in rules_indust_ccr_fc, that checks for
** split duty between trips, i.e. at home base, to solve the Matador problem.
*/

rule ind_no_split_duty_after_duty_period_fc =
  valid trip.%check_rules%
        and not trip.%is_ski% 
        and duty.%arrives_at_homebase% 
        and trip.%in_pp% 
        and trip.%is_on_duty% 
        and not is_last(duty(trip)) 
        and not duty.%is_split_duty_exception% 
        and rule_exceptions.%rule_on%(duty.%start_utc%);

  not (duty_period.%is_split% and duty_period.%is_first_duty_in_duty_period%);
  
  startdate = duty.%start_utc%;
  severity =  first(leg(duty), %severity_filter_int%(leg.%start_utc%,%duty_lh_region%));
  failobject = next(duty(trip), duty.%failobject_start%);
  failtext "Coll: Split duty not allowed at homebase";
  remark "Coll: No split duties after duty_period at homebase",
  planner "The rule checks that no split duty is scheduled for"
          " flight deck duty periods at homebase, except is region SKI";
end

/* end of file */


