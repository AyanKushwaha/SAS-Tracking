/* -*- crc -*- 
 *
 *
 * Purpose:
 *   The module contains industrial rules common to CC pairing and rostering.
 *
 * Major changes:
 *
 */
module rules_indust_common_fc inherits rules_indust_common

import parameters;
import duty_time;
import duty_period;
import trip;
import leg;
import fundamental;
import crew_pos;
import rules;

/*
** Rule: Maximum duty time in 1x24 hrs
** It is actually unnecessary to check this rule for regular LH production,
** since all other rules and traffic structure will prevent this rule from breaking.
** But it is stated in the agreement so it is implemented.
**
** No longer any restriction for 3 pilots/1 active landing or
** 2 pilots short haul with long haul ac, HenrikA 13oct2006
**
** SKI K12: applies again to 2-pilot production.
*/

%duty_touches_excepted_airport% =
  any(leg(duty), crew_pos.%leg_touches_excepted_airport%)
  where(leg.%is_active_flight%);


redefine %r_valid_duty_time_in_1x24_hrs% =
  parameters.%k12_fc_sp4_2_valid%(duty.%start_hb%) or
   not %duty_touches_excepted_airport%;      /* JIRA: SASCMS-2161 (CR443) */

/* No longer any "DD" reduction, HenrikA 17oct2006 */ 
redefine export %duty_time_1x24_hrs% = duty_time.%1x24_hrs%;
redefine export %duty_time_1x24_hrs_fwd% = duty_time.%1x24_hrs_fwd%;
redefine export %duty_time_1x24_hrs_bwd% = duty_time.%1x24_hrs_bwd%;

redefine %leg_duty_time_1x24hrs_until_now% = 
  trip.%duty_time_in_period%((leg.%co_end_utc% - 1*24:00), leg.%co_end_utc%, fundamental.%night_upg%, duty.union);


/*
** Rule: 
**    Maximum duty time in 1x24 hrs and is valid for SKI FC and SKD FC.
**    Validity depencies is defined in duty_time. table duty_time_1x24_limits_fc
**
**    SKCMS-680
*/
export rule ind_max_duty_time_in_1x24_hrs_FC_SKI_QA_SKD =
  valid trip.%check_rules%
        and (duty_time.%crew_or_duty_ski_fd% or
             duty_time.%crew_or_duty_skd_fd%)
        and duty.%in_pp_extended% 
        and duty.%has_flight_duty% 
        and not duty.%is_bought% 
        and %r_valid_duty_time_in_1x24_hrs% and
        rule_exceptions.%rule_on%(duty.%scheduled_block_off_utc%);

  %duty_time_1x24_hrs_fwd% <= duty_time.%max_in_1x24_hrs_fwd%  
  and
  %duty_time_1x24_hrs_bwd% <= duty_time.%max_in_1x24_hrs_bwd%;
  
  startdate  = duty.%scheduled_block_off_utc%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = %ind_max_duty_time_in_1x24_hrs_FC_SKD_SKN_SKL_JAP_failobject%;
  failtext %ind_max_duty_time_in_1x24_hrs_FC_SKD_SKN_SKL_JAP_failtext%;
  remark "Coll: Max duty time in 1x24 hrs (SKI FC or SKD FC)",
  planner "The rule checks that maximum duty time in 1x24 hrs is"
	      " not exceeded. The rule is valid for FC SKI (when 2 active pilots),"
          "  and SKD (except when in Tracking mode)";
end




/*
** Rule: 
**    Maximum duty time in 1x24 hrs and is valid for FC SKS and SKN.
**    Valid when a split duty is used. For all other duties (SKS and SKN) the
**    duty in calendar day is calculated by the rule 
**    rules_indust_ccp_fc ind_max_duty_time_in_calendar_end/start_day_FC .
**    Validity depencies is defined in duty_time. table duty_time_1x24_limits_fc
**
**    SKS-680
*/

export rule ind_max_duty_time_in_1x24_hrs_split_duty_FC_SKS_SKN =
  valid trip.%check_rules% 
    and parameters.%K15_jan16_valid%(duty.%start_UTC%)
    and (duty_time.%crew_or_duty_sks_fd% or duty_time.%crew_or_duty_skn_fd%)
    and duty.%in_pp_extended%
    and duty.%has_flight_duty%
    and duty_period.%is_split%
    and not duty.%is_bought%
    and %r_valid_duty_time_in_1x24_hrs%
    and rule_exceptions.%rule_on%(duty.%scheduled_block_off_utc%);
  %duty_time_1x24_hrs_fwd% <= duty_time.%max_in_1x24_hrs_fwd%  
  and
  %duty_time_1x24_hrs_bwd% <= duty_time.%max_in_1x24_hrs_bwd%;
  
  startdate  = duty.%scheduled_block_off_utc%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = %ind_max_duty_time_in_1x24_hrs_FC_SKD_SKN_SKL_JAP_failobject%;
  failtext %ind_max_duty_time_in_1x24_hrs_FC_SKD_SKN_SKL_JAP_failtext%;
  remark "Coll: Max duty time in 1x24 hrs for FC SKS and SKN when split duty ",
  planner "The rule checks that maximum duty time in 1x24 hrs is"
	      " not exceeded. The rule is valid for FC SKS and FC SKN"
          " when split duty is used";
end


/* New Rules in K15 SKCMS-680
/*
** Rule: 
**    Maximum duty time in calendar day. Checks the duty_time in a calendar
**    day at duty.start_day respective duty.end_end
** 
** Description:
**    The rules checks that the duty time within a calendar day is not exceeded
**                               
*/
export rule ind_max_duty_time_in_calendar_end_day_FC =
  valid trip.%check_rules% and
        parameters.%K15_jan16_valid%(duty.%start_UTC%) and
        (duty_time.%crew_or_duty_sks_fd% or duty_time.%crew_or_duty_skn_fd%) and
        not duty_period.%is_split% and
        duty.%in_pp_extended% and
        duty.%has_flight_duty% and
        not duty.%is_bought% and
        %r_valid_duty_time_in_1x24_hrs%;

        duty_time.%duty_time_calendar_day_end_day% <= duty_time.%max_duty_time_in_calendar_day_sks_skn% + rule_exceptions.%overshoot_rel%(duty.%start_UTC%);   
  startdate  = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = duty.%failobject_end%;
  failtext (Reltime value, Reltime limit) =    
           rules.%failtext_rel%("Coll: Max duty time in calendar day (duty.end_day)", value, limit);
  remark "Coll: Max duty time in caldendar day (duty.end_day + 24:00)",
  planner "The rule checks that maximum duty time in calendar day"
	  " is not exceeded. The rule is valid for pilots who is not flying CJ"
         "  or SKI";
end

export rule ind_max_duty_time_in_calendar_start_day_FC =
  valid trip.%check_rules% and
        parameters.%K15_jan16_valid%(duty.%start_UTC%) and
        (duty_time.%crew_or_duty_sks_fd% or duty_time.%crew_or_duty_skn_fd%) and
        not duty_period.%is_split% and
        duty.%in_pp_extended% and
        duty.%has_flight_duty% and
        not duty.%is_bought% and
        %r_valid_duty_time_in_1x24_hrs%;

        duty_time.%duty_time_calendar_day_start_day% <= duty_time.%max_duty_time_in_calendar_day_sks_skn% + rule_exceptions.%overshoot_rel%(duty.%start_UTC%);   
  startdate  = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = duty.%failobject_start%;
  failtext(Reltime value, Reltime limit) =
          rules.%failtext_rel%("Coll: Max duty time in calendar day (duty.start_day)", value, limit);
  remark "Coll: Max duty time in caldendar day (duty.end_day + 24:00",
  planner "The rule checks that maximum duty time in calendar day"
	  " is not exceeded. The rule is valid for pilots who is not flying CJ"
         "  or SKI";
end


/* New Rules in K15 SKCMS-638
/*
** Rule: 
**    Checks the lenght of last duty in a duty period it shall not
**    be longer than the break in the duty period.
**    Valid for SKS_FD,SKN_FD, SKD_FD
**                               
*/

export rule ind_max_length_of_last_duty_in_duty_period_FC =
  valid trip.%check_rules% and
        parameters.%K15_jan16_valid%(duty.%start_UTC%) and
        (duty_time.%crew_or_duty_sks_fd% or duty_time.%crew_or_duty_skn_fd% or
         duty_time.%crew_or_duty_skd_fd%) and
        duty.%in_pp_extended% and
        duty_period.%is_split% and
        duty_period.%is_last_duty_in_duty_period% and
        duty.%has_flight_duty%;

        duty.%time% <= %time_between_co_and_ci_in_break% 
                         +  rule_exceptions.%overshoot_rel%(duty.%start_UTC%);   
  startdate  = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = duty.%failobject_start%;
  failtext(Reltime value, Reltime limit) =
          rules.%failtext_rel%("Coll: Lenght of last duty in duty period)", value, limit);
  remark "Coll: Length of last duty in duty period",
  planner "The rule checks that the length of the last duty in duty period"
	  " is not longer than duty period break."
          " Valid for  SKS_FD_AG, SKD_FD_AG, SKN_FD_AG.";
end

%time_between_co_and_ci_in_break% = duty.%start_utc% - prev(duty(wop),duty.%end_utc%);

/* New rule for K15 SKCMS-644*/

/*
** Rule:
**    Max block time for 2 pilots LH
**
** Description:
**    Check that the max block time for a single leg is not exceeded.
**    The rule is only valid for flights with 2 active pilots.
**    This rule excludes CPH crew since when this rule is written it is unclear
**    when this rule shall be valid for CPH crew
*/

rule ind_max_block_time_in_2_pilot_lh_duty_pass_FC_excl_CPH =
  valid trip.%check_rules% and
        parameters.%K15_jan16_valid%(duty.%start_UTC%) and
        trip.%homebase% <> "CPH" and
        duty.%in_pp_extended% and
	duty.%is_long_haul% and 
        duty.%active_pilots% = 2;

  duty.%block_time% <= %max_block_time_in_duty_pass_2_pilots_lh% + 
  		       rule_exceptions.%overshoot_rel%(duty.%start_UTC%);
  startdate  = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = %ind_max_block_time_in_2_pilot_lh_duty_pass_FC_failobject%;
  failtext(Reltime value, Reltime limit) =
    rules.%failtext_rel%("Coll: BLH in duty pass 2 pilot LH", value, limit);
  remark "Coll: Max block time in 2 pilot lh duty pass",
  planner "The rule checks that the block time in a long haul"
          " duty pass is not exceeded. It is only active for legs with "
          " 2 active pilots.";
end

rule ind_max_block_time_in_2_pilot_lh_duty_pass_CPH_FC =
  valid trip.%check_rules% and
        parameters.%K15_SKCMS_644_valid%(duty.%start_UTC%) and
        trip.%homebase%= "CPH" and
        duty.%in_pp_extended% and
	duty.%is_long_haul% and 
        duty.%active_pilots% = 2;

  duty.%block_time% <= %max_block_time_in_duty_pass_2_pilots_lh% + 
  		       rule_exceptions.%overshoot_rel%(duty.%start_UTC%);
  startdate  = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = %ind_max_block_time_in_2_pilot_lh_duty_pass_FC_failobject%;
  failtext(Reltime value, Reltime limit) =
    rules.%failtext_rel%("Coll: BLH in duty pass 2 pilot LH", value, limit);
  remark "Coll: Max block time in 2 pilot lh duty pass",
  planner "The rule checks that the block time in a long haul"
          " duty pass is not exceeded. It is only active for legs with "
          " 2 active pilots.";
end

%special_station_IAH% =
  duty.%end_station% = "IAH" and trip.%homebase%<>"CPH";

%ind_max_block_time_in_2_pilot_lh_duty_pass_FC_failobject% =
  first(leg(duty), leg.%failobject_departure%)
  where(%duty_block_time_until_now% > %max_block_time_in_duty_pass_2_pilots_lh% + 
  		       rule_exceptions.%overshoot_rel%(duty.%start_UTC%));

%tz_difference% =
  if duty.%outbound% then
     duty.%arrival_station_tz_corrector% - duty.%departure_station_tz_corrector%
  else
    duty.%departure_station_tz_corrector% - duty.%arrival_station_tz_corrector%;
  

table max_block_time_duty_pass_2_pilots_lh =
   %special_station_IAH%, %tz_difference%, trip.%homebase%, duty.%outbound%
                                -> %max_block_time_in_duty_pass_2_pilots_lh%;
   
 true,            -,          -,   -   ->   11:05;
 false,       <-7:00,         -,   true   ->  100:00;
 false,       <-7:00,         -,   false  ->  100:00;
 false, (-7:00,-2:00(,     "CPH",  true   ->  11:30;
 false, (-7:00,-2:00(,     "CPH",  false  ->  10:00;
 false, (-7:00,-2:00(,   <>"CPH",  true   ->  11:00;
 false, (-7:00,-2:00(,   <>"CPH",  false  ->  10:00;
 false, (-2:00, 2:00),         -,  -      ->  100:00;
 false,        >2:00 ,     "CPH",  true   ->  10:00;
 false,        >2:00,      "CPH",  false  ->  11:00;
 false,        >2:00,    <>"CPH",  true   ->  10:00;
 false,        >2:00,    <>"CPH",  false  ->  11:00;
     -,            -,          -,  -      -> 0:00; 
  
end



/* New rule when migrating to K15, was part of the old rule
*  ind_max_block_time_in_lh_duty_pass_FC SKCMS-644 */
/*
** Rule:
**    Max block time for SKN with more than 2 pilots
**
*/

rule ind_max_block_time_in_skn_duty_pass_FC =
  valid trip.%check_rules% and
        parameters.%K15_jan16_valid%(duty.%start_UTC%) and
        duty.%in_pp_extended% and
        duty.%is_active_flight% and
        (duty.%is_skn% and duty.%active_pilots% > 2);

  duty.%block_time% <= %max_block_time_in_duty_pass_skn% + 
  		       rule_exceptions.%overshoot_rel%(duty.%start_UTC%);
  startdate  = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = %ind_max_block_time_in_skn_duty_pass_FC_failobject%;
  failtext(Reltime value, Reltime limit) =
    rules.%failtext_rel%("Coll: BLH in duty pass", value, limit);
  remark "Coll: Max block time in duty pass for SKN pilot",
  planner "The rule checks that the block time in skn"
          " duty pass is not exceeded. It is only active for legs with "
          " more than 2 active pilots.";
end


%ind_max_block_time_in_skn_duty_pass_FC_failobject% =
  first(leg(duty), leg.%failobject_departure%)
  where(%duty_block_time_until_now% > %max_block_time_in_duty_pass_skn% + 
  		       rule_exceptions.%overshoot_rel%(duty.%start_UTC%));

%duty_block_time_until_now% = 
  sum(leg(duty),leg.%block_time%)
  from(first) to(current);

table max_block_time_duty_pass_skn =
  duty.%active_pilots% -> %max_block_time_in_duty_pass_skn%; 
      3     -> 12:30;
      4     -> 16:00;
      -     -> void_RelTime;
end


/*  Old rule for crew with homebase CPH, can be removed after
**  when K15 rules for CPH crew in this matter is in production
**  rules ind_max_block_time_in_skn_duty_pass_FC and 
**  ind_max_block_time_in_2_pilot_lh_duty_pass_FC_CPH
**  SKCMS-644
*/

rule ind_max_block_time_in_lh_duty_pass_CPH_FC =
  valid trip.%check_rules% and
        not parameters.%K15_SKCMS_644_valid%(duty.%start_UTC%) and
        trip.%homebase% = "CPH" and
        duty.%in_pp_extended% and
	    ((duty.%is_long_haul% and duty.%active_pilots% = 2)
            or (duty.%is_skn% and duty.%active_pilots% > 2)) and
        (parameters.%k12_fc_sp4_2_valid%(duty.%start_hb%) or
         not %duty_touches_excepted_airport%);
  duty.%block_time% <= %max_block_time_in_duty_pass% + 
  		       rule_exceptions.%overshoot_rel%(duty.%start_UTC%);
  startdate  = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = %ind_max_block_time_in_lh_duty_pass_FC_failobject%;
  failtext(Reltime value, Reltime limit) =
    rules.%failtext_rel%("Coll: BLH in duty pass", value, limit);
  remark "Coll: Max block time in duty pass",
  planner "The rule checks that the block time in a long haul"
          " duty pass is not exceeded. It is only active for legs with "
          " 2 active pilots.";
end


rule ind_max_block_time_in_lh_duty_pass__exl_CPH_FC =
  valid trip.%check_rules% and
        not parameters.%K15_jan16_valid%(duty.%start_UTC%) and
        trip.%homebase% <> "CPH" and
        duty.%in_pp_extended% and
	    ((duty.%is_long_haul% and duty.%active_pilots% = 2)
            or (duty.%is_skn% and duty.%active_pilots% > 2)) and
        (parameters.%k12_fc_sp4_2_valid%(duty.%start_hb%) or
         not %duty_touches_excepted_airport%);
  duty.%block_time% <= %max_block_time_in_duty_pass% + 
  		       rule_exceptions.%overshoot_rel%(duty.%start_UTC%);
  startdate  = duty.%start_UTC%;
  severity = first(leg(duty), %severity_filter_int%(leg.%start_hb%,%duty_lh_region%));
  failobject = %ind_max_block_time_in_lh_duty_pass_FC_failobject%;
  failtext(Reltime value, Reltime limit) =
    rules.%failtext_rel%("Coll: BLH in duty pass", value, limit);
  remark "Coll: Max block time in duty pass",
  planner "The rule checks that the block time in a long haul"
          " duty pass is not exceeded. It is only active for legs with "
          " 2 active pilots.";
end


%duty_touches_PEK% =
  any(leg(duty), crew_pos.%leg_touches_PEK%)
  where(leg.%is_active_flight%);

%ind_max_block_time_in_lh_duty_pass_FC_failobject% =
  first(leg(duty), leg.%failobject_departure%)
  where(%duty_block_time_until_now% > %max_block_time_in_duty_pass% + 
  		       rule_exceptions.%overshoot_rel%(duty.%start_UTC%));


table max_block_time_duty_pass =
  duty.%region%, duty.%is_long_haul%, duty.%active_pilots%,
  %duty_touches_excepted_airport%,%duty_touches_PEK%
                                -> %max_block_time_in_duty_pass%; 
  -,     true,  2, true, false  ->  9:30;
  -,     true,  2, true, true   -> 11:00;
  -,     true,  2, false, -     ->  8:00;
  "SKN", -,     3,   -  , -     -> 12:30;
  "SKN", -,     4,   -  , -     -> 16:00;
  -,     -,     -,   -  , -     -> void_RelTime;
end

/* New Rules in K15 SKCMS-799
/*
** Rule:
**  Compostion of last duty in split duty
** 
**  Only valid for short haul
**  DPF: 2 sectors allowed after split duty. 
**  SPF: 2 sectors allowed after split duty ( Norweigen domestic), 
         otherwise 1 sector. 
**  NSF: 2 sectors allowed after split duty 
**  SNF: 2 sectors allowed after split duty 
**  FPU: 2 sectors allowed after split duty

** The meaning of this is that :
**   1)a pilot can fly 2 active sectors after split duty if he/she does not tou **      base station (ie not his/hers home base) or home base.
**   2)If the crew member arrive at a base station the active duty has to end, 
**     but a passive flight to home base is allowed. If no passive flight to 
**     home base then a rest period must follow at 
       the base station.
**   3)If the crew member arrives at home base the duty has to end, 
       ie no more flights are allowed.
**                               
*/

export rule ind_duty_restrictions_after_short_stop_FC =
  valid trip.%check_rules%
     and parameters.%K15_jan16_valid%(duty.%start_UTC%)
     and duty.%in_pp_extended% 
     and duty_period.%is_split%
     and duty_period.%is_last_duty_in_duty_period%
     and duty.%is_short_haul%
     and leg.%is_first_in_duty%
     and not leg.%is_bought% ;
     duty.%num_active_legs% <= %max_no_of_legs_in_split_duty_fc% +
                        rule_exceptions.%overshoot_int%(leg.%start_UTC%);         
  startdate = leg.%activity_scheduled_start_time_UTC%;
  severity =  %severity_filter_int%(leg.%start_utc%,%duty_lh_region%);
  failtext(Int value, int limit) =%ind_duty_restrictions_after_short_stop_FC_failext%;
  failobject = %ind_duty_restrictions_after_short_stop_FC_failobject%;
  remark "Coll: Max no of legs in split duty after short stop",
  planner "The rule checks the duty after short stop"
          "If legs in duty not touches base or home then the #legs are 2"
          " For SPF 1 if not Norwegian Domestic then 2"
          " If firts leg in duty touches Base then #legs 1 but #legs 2 is"
          " allowed if next leg flies to homebase as deadhead and the duty ends"
          " If first leg in duty arrives at homebase then the duty must end";
end

%ind_duty_restrictions_after_short_stop_FC_failext% =
if (duty.%any_leg_arrives_at_SH_base% or duty.%any_leg_arrives_at_homebase%) 
then
  if leg.%arrives_at_trip_or_crew_homebase%
  then
     if leg.%is_last_in_trip% then
      "OK"
     else
      "Coll: No more legs allowed after arriving at homebase after split duty"
  else
    if leg.%arrives_at_SH_base% then
       if leg.%is_last_in_trip% then
          "OK"
       else
         if next(leg(duty),leg.%arrives_at_trip_or_crew_homebase% and
                           leg.%is_deadhead%) then
            "OK"
         else
          "Coll: 2nd leg after split duty must be passive to homebase"
    else
      if (duty_time.%crew_or_duty_sks_fd% and not (leg.%end_country%="NO")) 
      then
        "Coll: Max 1 leg after split duty"
      else
        "Coll: Max 2 legs after split duty"
else
  if duty_time.%crew_or_duty_sks_fd% and not duty.%is_norwegian_domestic% then
     "Coll: Max 1 leg after split duty"
   else
     "Coll: Max 2 legs after split duty";


%max_no_of_legs_in_split_duty_fc% =
if (duty.%any_leg_arrives_at_SH_base% or duty.%any_leg_arrives_at_homebase%) 
then
  if leg.%arrives_at_trip_or_crew_homebase%
  then
     if leg.%is_last_in_trip% then
      1
     else
      0
  else
    if leg.%arrives_at_SH_base% then
       if leg.%is_last_in_trip% then
          1
       else
         if next(leg(duty),leg.%arrives_at_trip_or_crew_homebase% and
                           leg.%is_deadhead%) then
            1
         else
          0
    else
      if (duty_time.%crew_or_duty_sks_fd% and not (leg.%end_country%="NO")) 
      then
        1
      else
        2
else
  if duty_time.%crew_or_duty_sks_fd% and not duty.%is_norwegian_domestic% then
     1
   else
     2;


%ind_duty_restrictions_after_short_stop_FC_failobject% =
  last(leg(duty),leg.%failobject_departure%);
/* if %max_no_of_legs_in_split_duty_fc% = 1 then
   /* More than one leg, second leg must fail 
   next(leg(duty),leg.%failobject_departure%)
else 
  if %max_no_of_legs_in_split_duty_fc% = 2 then
    /* More than 2 legs, third must fail 
   next(leg(duty),next(leg(duty),leg.%failobject_departure%))
  else
     if %max_no_of_legs_in_split_duty_fc% = 0 then
        /* Either is second leg illegal or we have more than 2 legs 
       if duty.%num_legs% = 2 then
          /* The second leg must be erronous 
          next(leg(duty),leg.%failobject_departure%)
       else    
          /* More than 2 legs, third must fail 
          next(leg(duty),next(leg(duty),leg.%failobject_departure%))
     else
       /* We shall never come here 
       leg.%failobject_departure%;
*/


