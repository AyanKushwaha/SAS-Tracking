/* -*- crc -*- */

/* 
 * Definitions needed for select-and-operate.
 *
 * Added to SAS CARMUSR from OTS CARMUSR.
 * 
 */

module studio_sno 

import levels;
import iterators; 

/*
 * ROSTER LEFT
 */

%roster_is_marked_left% = default(marked_crew, false);
%any_marked_left_roster_in_bag% = any(chain_set, %roster_is_marked_left%);

%marked_left_rosters_warning_txt% = 
  if %any_marked_left_roster_in_bag% then 
     ""
  else 
     "There is no selected roster in the left window";

iterator marked_left_roster_set =
        partition(chain)
        by(%roster_is_marked_left%);
end

/* 
 * ROSTER MAIN
 */

%roster_is_marked_main% = not void(crr_crew_id) and %any_leg_in_chain_is_marked%;
%any_marked_main_roster_in_bag% = any(chain_set, %roster_is_marked_main%);

%marked_main_rosters_warning_txt% = 
  if %any_marked_main_roster_in_bag% then 
     ""
  else 
     "There is no selected roster in the main window";

iterator marked_main_roster_set =
        partition(chain)
        by(%roster_is_marked_main%);
end

/* 
 * CHAIN
 */

%any_leg_in_chain_is_marked% = any(leg(chain), marked);

iterator single_bag_with_chains = 
    partition(chain)
    by (true);
end 

%legid_in_chain%(int leg_id) = any(leg(chain), leg_identifier = leg_id);

/* 
 * TRIP
 */   

%trip_is_marked% = %all_legs_in_trip_marked%;   

%marked_trips_warning_txt% =
  if %trip_marking_ok_in_bag% then
     ""
  else if not %any_fully_marked_trip_in_bag% then
     "There are no completely selected trips in the window"
  else if %num_partly_marked_trips_in_bag% = 1 then
     "One partly selected trip has not been considered"
  else
     format_int(%num_partly_marked_trips_in_bag%,
                "%d partly selected trips have not been considered");

iterator marked_trip_set =
        partition(trip)
        by(%trip_is_marked%);
end


%trip_marking_ok_in_bag% =
   %any_fully_marked_trip_in_bag% and not %any_partly_marked_trip_in_bag%;

%legid_in_trip%(int leg_id) = any(leg(trip), leg_identifier = leg_id);

/* private */

%all_legs_in_trip_marked% = all(leg(trip), marked);

%any_leg_trip_marked% = any(leg(trip), marked);

%trip_is_partly_marked% = 
  %any_leg_trip_marked% and not %all_legs_in_trip_marked%;

%num_partly_marked_trips_in_bag% = 
   count(trip_set) where (%trip_is_partly_marked%);

%any_partly_marked_trip_in_bag% =
   any(trip_set, %trip_is_partly_marked%);

%any_fully_marked_trip_in_bag% = 
   any(trip_set, %all_legs_in_trip_marked%);


/* 
 * DUTY 
 */

%duty_is_marked% = %all_legs_in_duty_marked%;

%marked_duties_warning_txt% =
  if %duty_marking_ok_in_bag% then
     ""
  else if not %any_fully_marked_duty_in_bag% then
     "There are no completely selected duties in the window"
  else if %num_partly_marked_duties_in_bag% = 1 then
     "One partly selected duty has not been considered"
  else
     format_int(%num_partly_marked_duties_in_bag%,
                "%d partly selected duties have not been considered");

iterator marked_duty_set =
        partition(duty)
        by(%all_legs_in_duty_marked%);
end

%duty_marking_ok_in_bag% =
   %any_fully_marked_duty_in_bag% and not %any_partly_marked_duty_in_bag%;

%legid_in_duty%(int leg_id) = any(leg(duty), leg_identifier = leg_id);   
   
/* private */


%all_legs_in_duty_marked% = all(leg(duty), marked);

%any_leg_in_duty_marked% = any(leg(duty), marked);

%duty_is_partly_marked% = 
  %any_leg_in_duty_marked% and not %all_legs_in_duty_marked%;

%any_partly_marked_duty_in_bag% =
   any(duty_set, %duty_is_partly_marked%); 

%num_partly_marked_duties_in_bag% = 
   count(duty_set) where (%duty_is_partly_marked%);  

%any_fully_marked_duty_in_bag% = 
   any(duty_set, %all_legs_in_duty_marked%);  
      

/*
 * LEG
 */

%leg_is_marked% = marked;

%any_marked_leg_in_bag% = any(leg_set, %leg_is_marked%);

%marked_legs_warning_txt% = 
  if %any_marked_leg_in_bag% then 
     ""
  else 
     "There are no selected legs in the main window";

iterator marked_leg_set =
        partition(leg)
        by(%leg_is_marked%);
end


/******/

%crew_on_trip_slice_not_zero% = 
  assigned_crew_position_1 +
  assigned_crew_position_2 +
  assigned_crew_position_3 +
  assigned_crew_position_4 +
  assigned_crew_position_5 +
  assigned_crew_position_6 +
  assigned_crew_position_7 +
  assigned_crew_position_8 +
  assigned_crew_position_9 +
  assigned_crew_position_10 +
  assigned_crew_position_11 +
  assigned_crew_position_12 > 0;

/* For behave/gherkin */
%num_marked_trips% = count(trip_set) where (%trip_is_marked%);
%num_marked_legs% = count(leg_set) where (%leg_is_marked%);
