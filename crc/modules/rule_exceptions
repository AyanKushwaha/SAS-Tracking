/* -*- crc -*- 
 *
 * 
 *
 * Purpose:
 *   Definitions needed to read from the rule exception etab 
 *
 * Created by:
 *   Extracted from the Carmen Standard User, 07-Dec-2005
 *
 * Major changes:
 *   2006-10-24, David Lennartsson, Jeppesen
 *               Added table lookups for compatability with the 
 *               R&D Tracking project
 *   2006-11-01, Jonas Carlsson, Jeppesen
 *               Changed lookups to return default values for use in CCP and
 *               moved the actual implementation to rule_exceptions_ccr for
 *               use in CCR and CCT.
 *
 */

root module rule_exceptions

export %rule_on%(Abstime SDate) = true;
export %rule_on_activity%(string ActivityKey) = true;

export %rule_off%(Abstime SDate) = false; /*%rule_s_off%(%current_rule_id%, SDate);*/
export %rule_s_off%(String RuleId, Abstime SDate) = false;
export %rule_off_activity%(string ActivityKey) = false;
export %rule_s_off_activity%(String RuleId, string ActivityKey) = false;

export %overshoot_int%(Abstime SDate) = 0;
export %overshoot_s_int%(String RuleId, Abstime SDate) = 0;

export %overshoot_rel%(Abstime SDate) = 0:00;
export %overshoot_s_rel%(String RuleId, Abstime SDate) = 0:00;

export %overshoot_int_activity%(string ActivityKey) = 0;
export %overshoot_s_int_activity%(String RuleId, string ActivityKey) = 0;

export %overshoot_rel_activity%(string ActivityKey) = 0:00;
export %overshoot_s_rel_activity%(String RuleId, string ActivityKey) = 0:00;

export %crew_has% = false;

/* Parameter to keep track if rule exceptions should be considered.
   The parameter is temporarily set to False when running the subq_violation job (SASCMS-4461) */
export %include_rule_exceptions_p% = parameter True
                              remark "RULE EXCEPTIONS: Use rule exceptions for SubQ rules";

export %overshoot_rel_on_off%(AbsTime start) =
  if %include_rule_exceptions_p% then %overshoot_rel%(start)
  else 0:00;

export %overshoot_s_rel_on_off%(String RuleId, AbsTime start) =
  if %include_rule_exceptions_p% then %overshoot_s_rel%(RuleId, start)
  else 0:00;

export %overshoot_int_on_off%(AbsTime start) =
  if %include_rule_exceptions_p% then %overshoot_int%(start)
  else 0;

/* end of file */
