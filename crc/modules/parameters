/* -*- crc -*-

Parameters
-------------------------------------------------------

Use: Code for fetching parameter values from database 
     plans.

Contents: 
  1. Basic lookups
  2. Parameter definitions
  3. Agreement validity
     

*******************************************************/

/*******************************************************
  1. Basic definitions and table lookups
*******************************************************/ 

module parameters

import system_db_parameters;
import fundamental;
import base_utils;



/*
** Access to parameter set etable
*/

 
global export %param_table%(string variable, string value, abstime date) =
  default(%_param_table%(variable, value, date) > 0, false);

%param_set_table_name% = "rave_string_paramset";  
  
table param_table(string variable, string value, abstime date)=
  variable, value, date -> int %_param_table%;
  
  external %param_set_table_name%;
  
  ravevar, val,
  (validfrom, validto) -> row_number;
  
  -, - , - -> void_int;
end



/*
** Access to agreement_validity table has been moved to system_db_parameters module 
*/

/*******************************************************
  2. Parameter Definitions
*******************************************************/ 


/* Performance management parameters */

/* start of validity period, given any date within */
export %pm_validity_start% = 
  system_db_parameters.%pm_validity_start%(%pp_start%);

/* end of validity period (exclusive), given any date within */
export %pm_validity_end% = 
  system_db_parameters.%pm_validity_end%(%pp_start%);

/* goal for number of attended PM acttivities for the period in which 'date' occurs */
export %pm_attend_goal% = 
  system_db_parameters.%pm_attend_goal%(%pp_start%);

/* limit for number of attendeded PM acttivities for the period in which 'date' occurs. The difference from 'goal' is normally 1,
   which allows for planning a few extra activities if this is needed to fulfill the general plan */
export %pm_attend_limit% = 
  system_db_parameters.%pm_attend_limit%(%pp_start%);

export %db_instance% = 
  system_db_parameters.%db_instance%(%pp_start%);

%fdc15_modif_target_default% =
  parameter 100
  remark "fdc15_modified_target_default: 103 will increase month fulltime target by 3% for all except FC, AP%";

%fdc15_modif_target_fc% =
  parameter 100
  remark "fdc15_modified_target_fc: 103 will increase month fulltime target by 3% for FC%";

%fdc15_modif_target_ap% =
  parameter 100
  remark "fdc15_modified_target_ap: 103 will increase month fulltime target by 3% for AP%";

export %fdc15_modif_target%(String rank) =
  if rank = "FC" then %fdc15_modif_target_fc%
  else if rank = "AP" then %fdc15_modif_target_ap%
  else %fdc15_modif_target_default%;

export %fdc15_endyear_margin% =
  parameter 2
  remark "fdc15 allowed balance dept in next last month";

export %list12_report_start_date% = 
  parameter 1Jan1986 0:00
  remark "Last used start_date parameter value for the List 12 report";

export %list12_report_end_date% = 
  parameter 1Jan1986 0:00
  remark "Last used end_date parameter value for the List 12 report";

export %supervision_report_start_date% = 
  parameter 1Jan1986 0:00
  remark "Last used start_date parameter value for the SupervisionDetails report";

export %supervision_report_end_date% = 
  parameter 1Jan1986 0:00
  remark "Last used end_date parameter value for the SupervisionDetails report";


export %overtime_report_start_date% = 
  parameter 1Jan1986 0:00
  remark "Last used start_date parameter value for the OvertimeStatement report";

export %overtime_report_end_date% = 
  parameter 1Jan1986 0:00
  remark "Last used end_date parameter value for the OvertimeStatement report";

export %perdiemstatement_report_start_date% = 
  parameter 1Jan1986 0:00
  remark "Last used start_date parameter value for the PerDiemStatement report";

export %perdiemstatement_report_end_date% = 
  parameter 1Jan1986 0:00
  remark "Last used end_date parameter value for the PerDiemStatement report";

export %EC_Supervision_Details_report_start_date% = 
  parameter 1Jan1986 0:00
  remark "Last used start_date parameter value for the ECSupervisionDetails report";

export %EC_Supervision_Details_report_end_date% = 
  parameter 1Jan1986 0:00
  remark "Last used end_date parameter value for the ECSupervisionDetails report";

export %ECPerDiemStatement_report_start_date% = 
  parameter 1Jan1986 0:00
  remark "Last used start_date parameter value for the ECPerDiemStatement report";

export %ECPerDiemStatement_report_end_date% = 
  parameter 1Jan1986 0:00
  remark "Last used end_date parameter value for the ECPerDiemStatement report";














/*******************************************************

  3. Agreement Validity
     
     Module parameters contain outdated validity parameters. 
     New paramaters should be put in system_db_parameters.

*******************************************************/ 

/* CR463B(K10): Short stop always counted as duty time for FD SH SKS and SKD. */
export %short_stop_duty_time_valid%(Abstime start) = 
  %agreement_valid%("short_stop_duty_time_K10", start);

/* SASCMS-2686: SKN meal break allocation rules */
export %meal_allocation_skn%(Abstime start) =
  %agreement_valid%("meal_allocation_skn", start);

/* SASCMS-2605: SKS & SKD meal break allocation rules */
export %meal_allocation_sks%(Abstime start) =
  %agreement_valid%("meal_allocation_sks", start);

export %meal_allocation_skd%(Abstime start) =
  %agreement_valid%("meal_allocation_skd", start);
  
 /* SASCMS-3142: SKS CC charter agreement */
export %charter_cc_sks_valid%(Abstime start) =
  %agreement_valid%("charter_cc_sks", start);

  /* SASCMS-3245: K11 FC SP10.7 */
export %k11_fc_sp10_7_valid%(Abstime start) =
  %agreement_valid%("K11_fc_sp10.7", start);

 /* SASCMS-????: K11 SKN CC */
export %k11_skn_cc_valid%(Abstime start) =
  %agreement_valid%("K11_skn_cc", start);

  /* SASCMS-3223: K11 SKN CC SP10.7 */
export %k11_skn_cc_sp10_7_valid%(Abstime start) =
  %agreement_valid%("K11_skn_cc_sp10.7", start);

  /* SASCMS-3277/3225: K11 SKN CC SP10.8 */
export %k11_skn_cc_sp10_8_valid%(Abstime start) =
  %agreement_valid%("K11_skn_cc_sp10.8", start);

  /* SASCMS-3388: SubQ CC LH max FDP when not 3 local nights*/
export %subq_not_3_local_nights_cc_valid%(Abstime start) =
  %agreement_valid%("subq_not_3_local_nights_cc", start);
  
  /* SASCMS-3226: K11 SKN CC SP10.9 */
export %k11_skn_cc_sp10_9_valid%(Abstime start) =
  %agreement_valid%("K11_skn_cc_sp10.9", start);

  /* SASCMS-3297: K11 FC SP10.9 */
export %k11_fc_sp10_9_valid%(Abstime start) =
  %agreement_valid%("K11_fc_sp10.9", start);

  /* SASCMS-3249: K11 FC SP2.2 (CMS2) */
export %k11_fc_sp2_2_valid%(Abstime start) =
  %agreement_valid%("K11_fc_sp2.2", start);

  /* SASCMS-3290: K11 SKN CC SP3.2 */
export %k11_skn_cc_sp3_2_valid%(Abstime start) =
  %agreement_valid%("K11_skn_cc_sp3.2", start);

  /* SASCMS-3865: K11 FC SP3.2 */
export %k11_fc_sp3_2_valid%(Abstime start) =
  %agreement_valid%("K11_fc_sp3.2", start);

  /* SASCMS-4066: Schedule Directive Line Check Pilots 01jan2012 */
export %schedule_directive_lcp_01jan12_valid%(Abstime start) =
  %agreement_valid%("schedule_directive_lcp_01jan12", start);

/* This is used for rquest bidding in the report server */  
export %is_request_bidding% =
  parameter False
  remark "Turn on request bidding rules";

  /* SASCMS-4609: K12 SKN CC SP4.1 */
export %k12_skn_cc_sp4_1_valid%(Abstime start) =
  %agreement_valid%("K12_skn_cc_sp4.1", start);

  /* SASCMS-4635: K12 SKN CC FX SP4.1 */
export %k12_skn_cc_fx_sp4_1_valid%(Abstime start) =
  %agreement_valid%("K12_skn_cc_fx_sp4.1", start);

  /* SASCMS-4678: K12 FC SH Consecutive days with meal load */
export %k12_fc_sh_meal_load_valid%(Abstime start) =
  %agreement_valid%("K12_fc_sh_meal_load", start);

  /* SASCMS-4706: K12 FC SP4.2 */
export %k12_fc_sp4_2_valid%(Abstime start) =
  %agreement_valid%("K12_fc_sp4.2", start);

  /* SASCMS-4868: K12 SKD CC SP4.3 */
export %k12_skd_cc_sp4_3_valid%(Abstime start) =
  %agreement_valid%("K12_skd_cc_sp4.3", start);


  /* SASCMS-4974: K12 SKS CC SP4.4 */
export %k12_sks_cc_sp4_4_valid%(Abstime start) =
  %agreement_valid%("K12_sks_cc_sp4.4", start);

  /* SASCMS-5261: K4ExNG CC SP5.1 */
/*
** NB! This has been replaced by variables in crew, trip, duty and leg,
** because 4ExNG doesn't apply to SKJ/SKK CC and we can't import those
** modules here to check region without there being modular circularity!
*/

  /* SASCMS-5515: K4ExNG CC BL accumulation SP5.1 */
/*export %k4exng_cc_bl_sp5_1_valid%(Abstime start) =
  %agreement_valid%("K4ExNG_cc_bl_sp5.1", start) and
  %cabin_crew%;
*/

/* 4ExNG CC SP5.1 Valid from 01Dec2012 */
export %4exng_cc_ot_allowances_valid%(Abstime start) =
  %agreement_valid%("4exng_cc_ot_allowances", start) and
  %cabin_crew%;

/* 4ExNG CC SP5.1 Valid from 01Jan2013 */
export %4exng_cc_ot_valid%(Abstime start) =
  %agreement_valid%("4exng_cc_ot", start) and
  %cabin_crew%;
  
/* 4ExNG CC TEMP CREW Valid from 01Apr2013 */
export %4exng_cc_tempcrew_valid%(Abstime start) =
  %agreement_valid%("4exng_cc_tempcrew", start) and
  %cabin_crew%;

/* 4ExNG FC SH Overtime Valid from 01Apr2013 */
export %4exng_fc_ot_valid%(Abstime start) =
  %agreement_valid%("4exng_fc_ot_valid", start) and
  %flight_crew%;

/* SASCMS-5246: K4ExNG FC SP5.1 */
export %k4exng_fc_sp5_1_valid%(Abstime start) =
  %agreement_valid%("K4ExNG_fc_sp5.1", start) and
  %flight_crew%;

/* SASCMS-5570: K4ExNG FC rescheduling rules SP5.1 */
export %k4exng_fc_resched_sp5_1_valid%(Abstime start) =
  %agreement_valid%("K4ExNG_fc_resched_sp5.1", start) and
  %flight_crew%;

/* SASCMS-5583: K4ExNG FC 190 P-days rule SP5.1 */
/*export %k4exng_fc_190_p_days_sp5_1_valid%(Abstime start) =
**  %agreement_valid%("K4ExNG_fc_190_p_days_sp5.1", start) and
**  %flight_crew%;
*/

/* SASCMS-5796: K4ExNG CC SKN split duty SP6.1 */
/*export %k4exng_cc_skn_split_duty_sp6_1_valid%(Abstime start) =
**  %agreement_valid%("K4ExNG_cc_skn_split_duty_sp6.1", start);
*/

/* SASCMS-5768: Recurrent simulatorpass for 737 Classic no longer required */
export %sim_pass_classic_req%(Abstime start) =
  not %agreement_valid%("skn_sim_pass_classic_not_req", start);

/* SASCMS-5995: K4ExNG FD LH: Max 1 BL/SBY before production */
export %k4exng_fc_lh_1_bl_or_sby_before_production%(Abstime start) =
  %agreement_valid%("K4ExNG_fc_1_bl_sby_before_prod", start) and
  %flight_crew%;
  
/* SASCMS-6152: FC SKI: Max 3 FS weekends during a calendar year */
export %fs_ski_fc_limit_weekends_valid%(Abstime start) =
  %agreement_valid%("fs_ski_fc_limit_weekends", start) and
  %flight_crew%;

export %oma16_a_valid%(Abstime start) =
  %agreement_valid%("oma16_a",start);

export %frm_valid%(Abstime start) =
  %agreement_valid%("frm_valid",start);

export %k15sk_jan16_valid%(Abstime start) =
  %agreement_valid%("k15sk_jan16",start);

export %k15qa_feb16_valid%(Abstime start) =
  %agreement_valid%("k15qa_feb16",start);

export %fdc15_sk_se_valid%(Abstime start) =
  %agreement_valid%("fdc15_sk_se_valid", start);

export %K15_qa_cc_mar16_valid%(Abstime start) =
  %agreement_valid%("K15_qa_cc_mar16",start);
  
export %K15_qa_fd_meal_valid%(Abstime start) =
  %agreement_valid%("k15qa_fdmeal",start);

export %cc16_lh_far_timezones_valid%(Abstime start) =
  %agreement_valid%("cc16_lh_far_timezones", start);



export %sb_default_duty_time% = parameter 7:00
    remark "Default SB duty time";
    
export %airport_sb_default_duty_time% = parameter 4:00
    remark "Default airport SB duty time";

export %sb_default_block_time% = parameter 6:00
    remark "Default SB block time";
export %_consider_calculated_sb_duty_time% = parameter True remark "Consider SB duty time";

export %sb_line_default_block_time% = parameter 6:00
    remark "Default SB line block time";

export %consider_sb_line_default_block_time% = parameter True
   remark "Consider SB line block time";

/* Used to override ground duty code for standby */
export %override_ground_duty_code% = parameter false
   remark "Hide special codes";

export %consider_calculated_sb_block_time% = parameter True remark "Consider SB block time";


/*
** Slipping, used in rules_induct_ccr_fc and duty_time_ccr
**
**
*/
export %slipp_layover_time_zone_p% = 
  parameter -07:00
  remark "The far time zone for which single slipping gives extra freedays";

export %min_required_freedays_for_far_timezones_with_single_slipping_fc_p% =
  parameter 4
  remark "The no of freedays required when single slipping on far destination";


/* Specific parameter for K15 LH flight crew single slipping */
export %k15_fc_lh_single_slipping_valid%(Abstime start) =
  %agreement_valid%("K15_fc_lh_single_slipping", start);


export %max_no_of_single_slipping_far_dest_1_month_p% =
  parameter 1
  remark "Max number of single slippings for far dest in one calendar month";


export %max_no_of_single_slipping_far_dest_1_year_p% =
  parameter 8
  remark "Max number of single slippings for far dest in one calendar year";

/* Parameter for K15 CC validity */
export %K15_CC_valid%(Abstime start) =
  %agreement_valid%("K15_CC_valid", start);

/* Parameter for K15 FC validity */
export %K15_FC_valid%(Abstime start) =
  %agreement_valid%("K15_FC_valid", start);

/* parameters K15 that shall be active 01JAN2016*/
export %k15_jan16_valid%(Abstime start ) =
  %agreement_valid%("k15_jan16", start);

/* parameters K15 for SKCMS-742 Min 12h offset between CI and CO ..
** include ground activities. Valid from 01Dec2015 */
export %K15_SKCMS_742_DEC15%(Abstime start) =
  %agreement_valid%("k15_SKCMS-742-dec15", start);

/* parameter used for K15 and 1x24 rule for SKD-FD_AG*/
export %K15_1x24_SKD_FD_AG_valid%(Abstime start ) =   
  %agreement_valid%("k15_1x24_SKD_FD_AG", start);

export %K15_SKCMS_644_valid%(Abstime start) =
  %agreement_valid%("k15_SKCMS-644", start);

export %k15_feb16_valid%(Abstime start) =
  %agreement_valid%("k15_feb16", start);

export %K15_qa_FD_feb16_valid%(Abstime start) =
  %agreement_valid%("k15_qa_FD_feb16", start);

export %K15_qa_CC_daily_duty_hours_valid%(Abstime start) =
  %agreement_valid%("k15_qa_CC_daily_duty_hours", start);

export %oma16_b_valid%(Abstime start) =
  %agreement_valid%("oma16_b", start);

export %oma16_b2b_valid%(Abstime start) =
  %agreement_valid%("oma16_b2b", start);


/* No more than 6 active sectors in dp for SKD-FC validity date
** Since the validity date for SKD-FC was not notified at the time of creating
** ind_max_sectors_in_duty_FC rule, this parameter is created for later update by SAS internally.
*/
export %k15_jan33_valid_max_sectors_in_duty_SKD_FS%(Abstime start) =
  %agreement_valid%("k15_leg_in_duty_SKD_FS", start);


export %QA_freeday_limit_valid% =
    parameter 01Feb2016
    remark "FD and QA_CC freeday limit valid from";


export %rule_R441B_FC_valid%(Abstime start) =
  /* Activation date for rule resched_R441_FC and also rule resched_R309B_CC - Jira SKCMS-527/712 */
  %agreement_valid%("rule_R441B_FC", start);



/* Jira SKCMS-691 */
%f3_overtime_comp_key% = "f3_overtime_comp";

%f3_overtime_comp_valid_date% = system_db_parameters.%agreement_valid_first%(%f3_overtime_comp_key%);

export %f3_overtime_comp_valid%(Abstime start) =
  %agreement_valid%(%f3_overtime_comp_key%, start);


/* Jira SKCMS-628
   fxx ->  F15 / F16
*/
%fxx_boughtday_comp_key% = "k15qa_feb16";

export %fxx_boughtday_comp_valid_date% = system_db_parameters.%agreement_valid_first%(%fxx_boughtday_comp_key%);

export %fxx_boughtday_comp_valid% =
  %fxx_boughtday_comp_valid_at_date%(fundamental.%now%);

export %fxx_boughtday_comp_valid_at_date%(Abstime date) =
  %agreement_valid%(%fxx_boughtday_comp_key%, date);




/* Jira SKCMS-952 */
export %ci_times_for_charter_valid%(Abstime start) =
  /* Max three bl days in calendar month for NKF CC rule: 
     ind_max_blank_days_in_calendar_month_NKF_CC */
  %agreement_valid%("ci_times_for_charter", start);

/* Jira SKCMS-1007 */
export %co_times_for_LH_valid%(Abstime start) =
  /* C/O for LH on non-homebase */
  %agreement_valid%("co_times_for_LH", start);

/* SKCMS-1875/1943 */
export %extra_ci_for_cc_training_valid%(Abstime start) =
  %agreement_valid%("extra_ci_for_cc_training",start);
  
/* SKCMS-2596 agreement validity */
export %k20_skn_cc_planned_rest_after_3_prod_days%(Abstime start)  =
  %agreement_valid%("k20_skn_cc_pln_rest_after_3d_p", start);

/* SKCMS-2559 */
export %dispensation_al_cc_new_release_valid%(Abstime start) =
  %agreement_valid%("dispensation_al_cc_new_release",start);

/* SKCMS-2615 */
export %dispensation_a2_cc_new_skn_valid%(Abstime start) =
  %agreement_valid%("dispensation_a2_cc_new_skn",start);  

export %dispensation_a2_cc_new_skd_valid%(Abstime start) =
  %agreement_valid%("dispensation_a2_cc_new_skd",start);

export %dispensation_a2_cc_new_sks_valid%(Abstime start) =
  %agreement_valid%("dispensation_a2_cc_new_sks",start);
  
/* Know if we are running rave code from Salary.
** These parameters are being set from Python (see salary.run.run())
** before a salary run starts and they are being unset after a salary
** run ends. I suggest using these instead of salary.%salary_month_start_p%
** and salary.%salary_month_end_p% because "parameters" is a low-level module,
** so it can be imported into other rave modules like crew, crew_contract, etc,
** while you cannot do that with "salary" module.
*/
export %is_salary_run% =
  parameter False
  remark "Is salary run. Do not change this manually.";

export %salary_month_start_p% = parameter 1Jan1986 0:00
  remark "Salary: Start of salary period";

export %salary_month_end_p% = parameter 1Jan1986 0:00
  remark "Salary: End of salary period";


/* END */



