/*
The SoftLocks module is meant to be a more flexible alternative to hard locks.
The following goals can be fulfilled by using this etable:
---
 Type             Description
 REQ_BASE:        Impose a flight being flown by the crew from a certain base.
 NOT_BASE:        Prohibit a flight being flown by the crew from a certain base.
 REQ_TRIPSTART:   Impose a flight starting a trip.
 REQ_TRIPEND:     Impose a flight ending a trip.
 NOT_TRIPSTART:   Prohibit a flight starting a trip.
 NOT_TRIPEND:     Prohibit a flight ending a trip.
 REQ_DUTYSTART:   Impose a flight starting a duty.
 REQ_DUTYEND:     Impose a flight ending a duty.
 NOT_DUTYSTART:   Prohibit a flight starting a duty.
 NOT_DUTYEND:     Prohibit a flight ending a duty.
 REQ_CXN_AFT:     Impose (lock) a connection after a flight or between two
                  flights, with or without a layover (of undefined or of
                  XX:XX-YY:YY length) in between.
 NOT_CXN_AFT:     Prohibit a connection after a flight or between two
                  flights, with or without a layover (of undefined or of
                  XX:XX-YY:YY length) in between.
 REQ_CXN_BEF:     Impose (lock) a connection before a flight or between two
                  flights, with or without a layover (of undefined or of
                  XX:XX-YY:YY length) in between.
 NOT_CXN_BEF:     Prohibit a connection before a flight or between two
                  flights, with or without a layover (of undefined or of
                  XX:XX-YY:YY length) in between.
 REQ_REST_AFT:    Impose at least XX:XX-YY:YY rest period after a flight.
 REQ_REST_BEF:    Impose at least XX:XX-YY:YY rest period before a flight.
 CXN_BUFFER:      XX:XX additional connection time before a flight and YY:YY
                  after. It is possible to specify that the buffer only should
                  be used when connecting to a certain flight. Use the Rave
                  variables %sl_cxn_buffer_after% and %sl_cxn_buffer_before% to
                  access this Reltime buffer.
---
Column descriptions:
E Type
  Type string in a predefined set, see above.
S Carrier1
  Carrier of leg 1. Mandatory for all SoftLock types.
I FlightNr1
  The flight number of leg 1, used in all soft lock types. May be empty if
  DepArr1 is used instead.
S DepArr1
  The departure and arrival airport of leg 1 on the format "DEP-ARR".
  May be used instead of FlightNr1. Only needed for multi-leg flights, may be
  empty otherwise.
S ActiveOrDH1
  String which limits the SoftLock to Active or DH flights for leg 1. Valid
  strings are "A" (active), "D" (deadhead) or "*" (any). "A" is the default
  value, which means that the SoftLock only applies to an active flight.
S TrafficDay
  D   = Daily
  1-7 = Traffic day on which leg 1 departs (in local time).
  Example string: "67" (weekend legs)
D DateFrom
  Start date for the soft lock.
  Date on which leg 1 departs (in local time).
D DateTo
  End date for the soft lock.
  Date on which leg 1 departs (in local time).
S Carrier2. Mandatory if FlightNr2 or DepArr2 is used.
  Carrier of leg 2.
I FlightNr2
  This flight number is used as leg 2 for soft lock types REQ_CXN_...
  and NOT_CXN_... (for ..._BEF types leg 2 is before leg 1, otherwise after.)
S DepArr2
  The departure and arrival airport of leg 2 on the format "DEP-ARR".
  May be used instead of FlightNr2. (for ..._BEF types leg 2 is before leg 1,
  otherwise after.)
S ActiveOrDH2
  String which limits the SoftLock to Active or DH flights for leg 2. Valid
  strings are "A" (active), "D" (deadhead) or "*" (any). "A" is the default
  value, which means that the SoftLock only applies to an active flight.
R LimitMin
  Reltime minimum limit used for SoftLock types REQ_CXN_AFT, NOT_CXN_AFT,
  REQ_CXN_BEF, NOT_CXN_BEF, REQ_REST_AFT and REQ_REST_BEF.
  Denoted as "XX:XX". 0:00 means that LimitMin will not be used.
R LimitMax
  Reltime maximum limit used for SoftLock types REQ_CXN_AFT, NOT_CXN_AFT,
  REQ_CXN_BEF, NOT_CXN_BEF, REQ_REST_AFT and REQ_REST_BEF.
  Denoted as "YY:YY". 0:00 means that LimitMax will not be used.
S Base
  Base in use for soft lock types 1 and 2.
S ACType
  Aircraft type for which the soft lock apply.
  Blank = All AC types
B ACChange
  If true, the SoftLock is only applied if there is an AC change.
  Can be used for REQ_CXN_... and NOT_CXN_...
I Penalty
   >10 = Penalty to use
  1-10 = Standard penalty from parameter set is used (1=low, 9=high)
     0 = The soft lock is to be regarded as a rule.
B Active
  true  = Use this soft lock
  false = Do not use this soft lock
C Comment
  All comments go here (ignored by the SoftLock package).
*/
/*
==>> SL.etab was created Mon Aug 20 15:52:42 2007
     by the script "SoftLocksGUI.py" and contains 0 rows.
     henrik.enstrom@carmensystems.com
*/
20
EType "Type" [ "REQ_BASE" ; "NOT_BASE" ; "REQ_TRIPSTART" ; "REQ_TRIPEND" ; "NOT_TRIPSTART" ; "NOT_TRIPEND" ; "REQ_DUTYSTART" ; "REQ_DUTYEND" ;	"NOT_DUTYSTART" ; "NOT_DUTYEND" ; "REQ_CXN_AFT" ; "NOT_CXN_AFT" ; "REQ_CXN_BEF" ; "NOT_CXN_BEF" ; "REQ_REST_AFT" ; "REQ_REST_BEF" ;	"CXN_BUFFER" ] 30 / 20,
SCarrier1 "1st carrier" [ "AA" % "IB" % "ZZ" ] 2 / 13,
IFlightNr1 "1st flight nr" [ 0 % 0 % 9999999 ] 7 / 10,
SDepArr1 "1st DEP-ARR" 7 / 13,
SActiveOrDH1 "1st Active/DH" [ "A" % "*" % "Z" ] 1 / 14,
STrafficDay "1st Traf. day (D, 1-7)" [ "A" % "D" % "Z" ] 7 / 16,
ADateFrom "1st From (flight dep)" [ 01JAN2000 % 01JAN2000 % 01JAN2030 ] 15 / 17,
ADateTo "1st To (flight dep)" [ 01JAN2000 % 01JAN2030 % 01JAN2030 ] 15 / 15,
SCarrier2 "2nd carrier" [ "AA" % "IB" % "ZZ" ] 2 / 13,
IFlightNr2 "2nd flight nr" [ 0 % 0 % 9999999 ] 7 / 10,
SDepArr2 "2nd DEP-ARR" 7 / 13,
SActiveOrDH2 "2nd Active/DH" [ "A" % "*" % "Z" ] 1 / 14,
RLimitMin "Min time limit" [ -999:00 % 0:00 % 999:00 ] 7 / 15,
RLimitMax "Max time limit" [ -999:00 % 0:00 % 999:00 ] 7 / 15,
SBase "Base" 7 / 7,
SACType "AC type" 7 / 7,
BACChange "If AC-chg" [ false % false % true ] 5 / 10,
IPenalty "Penalty (1-9=Std, 0=Rule)" [ 0 % 0 % 9999999 ] 7 / 22,
BActive "Active" [ false % true % true ] 5 / 10,
CComment "Comment" 50 / 15,
