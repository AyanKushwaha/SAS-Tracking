/*
 * This is the Common customization file for the core menu SelectCrew.
 * Definitions should only be included in this if they are to be
 * used by all applications and roles where this menu is available.
 * The file is named SelectCrew_Common.menu.
*/

Menu SelectCrew
{
   `by Filtering Mask...`
      !Select 	f.exec CuiFilterObjects(gpc_info, CuiWhichArea, "CrewFilter", 0, 0)
   `by Surname/Empno/ID...`!Select  REDO f.exec PythonEvalExpr("SelectCrewForm.select_crew()")
   /* TODO: This should possible nit be delivered /EkG */
   `by Rave values...`
      !Select   f.exec CuiFilterObjects(gpc_info, CuiWhichArea, "CrewFilter", "Filter Crew by rave values", "rave_crew_filter_values")

    f.separator

   `Rank` 		    f.menu 	SelectCrewRank
   `Xmas Group`		f.menu 	SelectCrewGroup
   `Planning Group` f.menu  SelectCrewPlanningGroup
   `Homebase`   	f.menu 	SelectCrewHomebase
   `Contract` 		f.menu 	SelectCrewContract
   `Qualifications` f.menu 	SelectCrewQualifications
   f.separator

   `Restrictions` 	f.menu 	SelectRestrictions
   `Crew warnings` 	f.menu 	SelectWarnings
   `Misc` 		    f.menu 	SelectCrewMisc
   `Lifestyles`     f.menu 	SelectLifestyle
   `Bids` 		    f.menu 	SelectBids
   f.separator

   `Instructors` 	f.menu 	SelectInstructors
   `Recurrent` 		f.menu 	SelectRecurrent
   `Training` 		f.menu 	SelectTraining
   `Recency` 		f.menu 	SelectRecency
}

/* Rank */
Menu SelectCrewRank
{
   `Flight Deck`        REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewrank_pilot%': 'true'})")
   `FC`                 REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewrank_FC%': 'true'})")
   `FP`                 REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewrank_FP%': 'true'})")
   `FR`                 REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewrank_FR%': 'true'})")
   f.separator

   `Cabin Crew`         REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewrank_cabin%': 'true'})")
   `AP`                 REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewrank_AP%': 'true'})")
   `AS`                 REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewrank_AS%': 'true'})")
   `AH`                 REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewrank_AH%': 'true'})")
}

/* Xmas Group */
Menu SelectCrewGroup
{
   `Flight Deck (SH)`   REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewgroup_FD_SH%': 'true'})")
   `FD Group 1  (SH)`   REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewgroup_FD_SH_1%': 'true'})")
   `FD Group 2  (SH)`   REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewgroup_FD_SH_2%': 'true'})")
   `FD Group 3  (SH)`   REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewgroup_FD_SH_3%': 'true'})")
   f.separator
   `Flight Deck (LH)`   REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewgroup_FD_LH%': 'true'})")
   `FD Group 1  (LH)`   REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewgroup_FD_LH_1%': 'true'})")
   `FD Group 2  (LH)`   REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewgroup_FD_LH_2%': 'true'})")
   f.separator
   `Cabin Crew`         REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewgroup_CC%': 'true'})")
   `CC Group F`         REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewgroup_CC_F%': 'true'})")
   `CC Group P`         REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crewgroup_CC_P%': 'true'})")
}

Menu SelectCrewPlanningGroup
{
   `SKD`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%planning_group_SKD%': 'true'})")
   `SKI`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%planning_group_SKI%': 'true'})")
   `SKN`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%planning_group_SKN%': 'true'})")
   `SKS`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%planning_group_SKS%': 'true'})")
   `SVS`                 REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%planning_group_SVS%': 'true'})")
   `MFF`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%filter_group_MFF%': 'true'})")
}

Menu SelectCrewHomebase
{
   `CPH`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%station_CPH%': 'true'})")
   `OSL`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%station_OSL%': 'true'})")
   `STO`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%station_STO%': 'true'})")
   `BGO`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%station_BGO%': 'true'})")
   `BJS`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%station_BJS%': 'true'})")
   `HKG`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%station_HKG%': 'true'})")
   `NRT`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%station_NRT%': 'true'})")
   `SHA`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%station_SHA%': 'true'})")
}


/* Contract */
Menu SelectCrewContract
{
   `Full time`          REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%fulltime%': 'true'})")
   `Part time`          REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%parttime%': 'true'})")
   f.separator

   `Variable group`     REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%variable_group%': 'true'})")
   `Fixed group`        REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%any_fixed_group%': 'true'})")
   `Fixed group (excl. specials)`
                        REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%fixed_group%': 'true'})")
   f.separator

   `5/4 Flex`           REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%flex_group%': 'true'})")
   `F/V group`          REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%fv_group%': 'true'})")
   `Resource Pool`      REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%tempcrew%': 'true'})")

   f.separator
   `Passiv +`           REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%passive_plus%': 'true'})")
}


/* Qualifications */
Menu SelectCrewQualifications
{
   `Aircraft`           f.menu SelectCrewAircraft
   `Airport`            f.menu SelectCrewAirport
   `Airport, expired`   f.menu SelectCrewAirportExpired
}


/* Qualifications - Aircraft */
Menu SelectCrewAircraft
{
   `Longhaul` 		REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crew_is_lh%': 'true'})")

   `Shorthaul only` 	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crew_is_sh_only%': 'true'})")

   f.separator
   `Common` f.title
   `38`		REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_qual_38%':'true'})")
   `A2`   	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_qual_A2%':'true'})")
   `A2NX`   REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_qual_A2NX%':'true'})")

   f.separator
   `Flight Deck specific` f.title
   `A3`   	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_qual_A3%':'true'})")
   `A5`   	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_qual_A5%':'true'})")
   `A2A3`   REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_qual_A2A3%':'true'})")
   `A2A5`   REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_qual_A2A5%':'true'})")
   
   f.separator
   `Cabin Crew specific` f.title
   `AL`   	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_qual_AL%':'true'})")

   f.separator
   `FF`   	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_qual_FF%':'true'}, usePlanningArea=False)")

   f.separator
   `EJ`   	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_qual_EJ%':'true'}, usePlanningArea=False)")
}


/* Qualifications - Airport */
Menu SelectCrewAirport
{
   `US (EWR, IAD, ORD, SEA)` REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_ap_qual_any_US%': 'true'})")
   f.separator
   `FNC`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_ap_qual_FNC%': 'true'})")
   `HMV`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_ap_qual_HMV%': 'true'})")
   `INN`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_ap_qual_INN%': 'true'})")
   `JKH`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_ap_qual_JKH%': 'true'})")
   `LCG`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_ap_qual_LCG%': 'true'})")
   `SFJ`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_ap_qual_SFJ%': 'true'})")
   `SMI`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_ap_qual_SMI%': 'true'})")
   `THU`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_ap_qual_THU%': 'true'})")
   `UAK`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_ap_qual_UAK%': 'true'})")
   `GZP`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_ap_qual_GZP%': 'true'})")
   `FAE`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_ap_qual_FAE%': 'true'})")
}

Menu SelectCrewAirportExpired
{
   `US (EWR, IAD, ORD, SEA)` REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_exp_ap_qual_any_US%': 'true'})")
   f.separator
   `FNC`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_exp_ap_qual_FNC%': 'true'})")
   `HMV`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_exp_ap_qual_HMV%': 'true'})")
   `INN`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_exp_ap_qual_INN%': 'true'})")
   `JKH`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_exp_ap_qual_JKH%': 'true'})")
   `LCG`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_exp_ap_qual_LCG%': 'true'})")
   `SFJ`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_exp_ap_qual_SFJ%': 'true'})")
   `SMI`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_exp_ap_qual_SMI%': 'true'})")
   `THU`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_exp_ap_qual_THU%': 'true'})")
   `UAK`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_exp_ap_qual_UAK%': 'true'})")
   `GZP`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_exp_ap_qual_GZP%': 'true'})")
   `FAE`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%has_exp_ap_qual_FAE%': 'true'})")
}


/* Restrictions */
Menu SelectRestrictions
{
   `Any` 		REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.%has_any_restriction_in_pp%':'true'})")
   f.separator
   `Any new` 		REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.%has_restr_new_in_pp%':'true'})")
   `New on rank` 	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.%has_restr_new_rank_in_pp%':'true'})")
   `New employee` 	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.%has_restr_new_new_in_pp%':'true'})")
   `New on A/C type` 	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.%has_qual_restr_any_qual_in_pp%':'true'})")
   `New 6 months` 	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.%has_restr_new_6m_in_pp%':'true'})")
   `New REFR` 	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.%has_restr_new_refr_in_pp%':'true'})")
   `Commuter` 	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.%is_commuter_in_pp%':'true'})")
  f.separator
   `Any medical` 	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.%has_restr_medical_in_pp%':'true'})")
   `Medical (medic)` 	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.%has_restr_medical_medic_in_pp%':'true'})")
   f.separator
   `Training Capt` 	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.%has_restr_training_capt_in_pp%':'true'})")
   `Training DCT` 	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.%has_restr_training_dct_in_pp%':'true'})")
   `Training FOC` 	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.%has_restr_training_foc_in_pp%':'true'})")
   `Training REFR` 	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.%has_restr_training_refr_in_pp%':'true'})")
}


/* Misc */
Menu SelectCrewMisc
{
   `Annotations...` 	REDO f.exec PythonEvalExpr("Annotations.selectAnnotations()")
   `Special schedules` 	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'crew.has_spec_sched':'true'})")
   `Standbys` 		f.menu SelectStandby
}


/* Instructors */
Menu SelectInstructors
{
   `Flight Deck`        f.menu SelectInstructorsFD
   `Cabin Crew`         f.menu SelectInstructorsCC
}


/* Instructors - Flight Deck */
Menu SelectInstructorsFD
{
   `All (LIFUS, TRI/TRE, SFI/SFE, SUP, OL)` REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_fd_instructor':'true'})")
   `LIFUS`              REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_lifus_instr':'true'})")
   `FC LIFUS`           REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_lifus_instr':'true', 'crew.rank':'FC'})")
   `FP/FR Instructors`  REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_fd_instructor':'true', 'crew.rank':'!FC'})")
   `LCP`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_lcp':'true'})")
   `TRI/TRE`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_tri_tre_instr':'true'})")
   `SFI/SFE`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_sfi_sfe_instr':'true'})")
   `OPT/CRM`            REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_opt_crm_instr':'true'})")
   `SUP`            	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_sup_instr':'true'})")
   `OL`            	REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_ol_instr_ac_qual':'true', 'crew.%is_pilot%':'true'})")
}


/* Instructors - Cabin Crew */
Menu SelectInstructorsCC
{
   `LCS`              REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_lcs_instr':'true'})")
   `AS`                 REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_as_instr':'true'})")
   `SCC`                REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_scc': 'true'})")
   `INSTR`              REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_cc_instr':'true'})")
   `REC`                 REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_rec_instr':'true'})")
   `OL`                 REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_ol_instr':'true', 'crew.%is_cabin%':'true'})")
   `PM`                 REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.is_pm_instr':'true'})")
}


/* Recurrent */
Menu SelectRecurrent
{
   	`Flight Deck` 	f.title
   	`OPC/PC`	f.menu SelectPcOpc
   	`OTS`		f.menu SelectOts
   	`LPC`		f.menu SelectLpc
      	`LC`		f.menu SelectLC
   	`Must have PGT`	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_pgt_any%':'true'},'training.%pgt_any_date%')")
   	`May have PGT`  	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_pgt_any%':'true'},'training.%pgt_any_date%')")
   	`Must have CRM`		REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_crm%':'true'},'training.%crm_date%')")
   	`May have CRM`          REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_crm%':'true'},'training.%crm_date%')")
   	`Need AST 38`		REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%needs_ast_for_qual_group_38%':'true'})")
   	`Need AST A2`		REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%needs_ast_for_qual_group_A2%':'true'})")
   	`Need AST A3A5`		REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%needs_ast_for_qual_group_A3A5%':'true'})")

    f.separator
    `Cabin Crew`    f.title
    `Must have REC`     REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_rec%':'true'},'training.%rec_date%')")
    `May have REC`      REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_rec%':'true'},'training.%rec_date%')")
    `Lack REC Month`    REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%no_rec_month_all%':'true'})")
    `REC Month`         f.menu SelectRecMonth
    `Must have CRMC`    REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_crmc%':'true'},'training.%crmc_date%')")
    `May have CRMC`     REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_crmc%':'true'},'training.%crmc_date%')")
    `Lack CRMC Month`   REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%no_crmc_month%':'true'})")
    `Not had PM`        REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%not_had_pm%':'true'},'training.%pm_sort%')")
    `Not enough PM`     REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%not_enough_pm%':'true'},'training.%pm_sort%')")
    `Must have LCC`     REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_lcc%':'true'},'training.%lc_date%')")
    `May have LCC`      REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_lcc%':'true'},'training.%lc_date%')")
}


/* Recurrent - Cabin Crew - REC Month */
Menu SelectRecMonth
{
   `Jan`	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%rec_month%':'1'})")
   `Feb`	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%rec_month%':'2'})")
   `Mar`	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%rec_month%':'3'})")
   `Apr`	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%rec_month%':'4'})")
   `May`	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%rec_month%':'5'})")
   `Jun`	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%rec_month%':'6'})")
   `Jul`	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%rec_month%':'7'})")
   `Aug`	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%rec_month%':'8'})")
   `Sep`	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%rec_month%':'9'})")
   `Oct`	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%rec_month%':'10'})")
   `Nov`	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%rec_month%':'11'})")
   `Dec`	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%rec_month%':'12'})")
}


Menu SelectLC
{
   `Must have LC, any`  REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_lc%':'true'},'training.%lc_date%')")
   `Must have LC, A2`   REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_lc_a2%':'true'},'training.%lc_date%')")
   `Must have LC, A3`   REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_lc_a3%':'true'},'training.%lc_date%')")
   `Must have LC, A5`   REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_lc_a5%':'true'},'training.%lc_date%')")

   f.separator
   `May have LC, any`   REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_lc%':'true'},'training.%lc_date%')")
   `May have LC, A2`    REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_lc_a2%':'true'},'training.%lc_date%')")
   `May have LC, A3`    REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_lc_a3%':'true'},'training.%lc_date%')")
   `May have LC, A5`    REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_lc_a5%':'true'},'training.%lc_date%')")
   `May have LC, with LCP` REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'studio_select.%lc_or_lcp%':'true'}, 'studio_select.%lc_sort%')")

   f.separator
   `Needs LC after FAM, any`    REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%needs_lc_after_fam%':'true'},'training.%lc_after_fam_date%')")
}

Menu SelectLpc
{
    `Must have, any`REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_lpc_any%':'true'}, 'studio_select.%pc_opc_sel_date_must%')")
    `Must have A2`  REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_lpca2%':'true'}, 'studio_select.%pc_opc_sel_date_must%')")
    `Must have A3`  REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_lpca3%':'true'}, 'studio_select.%pc_opc_sel_date_must%')")
    `Must have A5`  REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_lpca5%':'true'}, 'studio_select.%pc_opc_sel_date_must%')")
    `Must have A3A5`REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_lpca3a5%':'true'}, 'studio_select.%pc_opc_sel_date_must%')")
    f.separator
    `May have, any` REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_lpc_any%':'true'}, 'studio_select.%pc_opc_sel_date_may%')")
    `May have A2`   REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_lpca2%':'true'}, 'studio_select.%pc_opc_sel_date_may%')")
    `May have A3`   REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_lpca3%':'true'}, 'studio_select.%pc_opc_sel_date_may%')")
    `May have A5`   REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_lpca5%':'true'}, 'studio_select.%pc_opc_sel_date_may%')")
    `May have A3A5` REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_lpca3a5%':'true'}, 'studio_select.%pc_opc_sel_date_may%')")
}

Menu SelectOts
{
    `Must have, any`REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_ots_any%':'true'}, 'studio_select.%pc_opc_sel_date_must%')")
    `Must have A2`  REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_otsa2%':'true'}, 'studio_select.%pc_opc_sel_date_must%')")
    `Must have A3`  REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_otsa3%':'true'}, 'studio_select.%pc_opc_sel_date_must%')")
    `Must have A5`  REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_otsa5%':'true'}, 'studio_select.%pc_opc_sel_date_must%')")
    `Must have A3A5`REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_otsa3a5%':'true'}, 'studio_select.%pc_opc_sel_date_must%')")
    f.separator
    `May have, any` REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_ots_any%':'true'}, 'studio_select.%pc_opc_sel_date_may%')")
    `May have A2`   REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_otsa2%':'true'}, 'studio_select.%pc_opc_sel_date_may%')")
    `May have A3`   REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_otsa3%':'true'}, 'studio_select.%pc_opc_sel_date_may%')")
    `May have A5`   REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_otsa5%':'true'}, 'studio_select.%pc_opc_sel_date_may%')")
    `May have A3A5` REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_otsa3a5%':'true'}, 'studio_select.%pc_opc_sel_date_may%')")
}

Menu SelectPcOpc
{
    `Must have, any`REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_pc_opc_any%':'true'}, 'studio_select.%pc_opc_sel_date_must%')")
    `Must have A2`  REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_pc_opc_a2%':'true'}, 'studio_select.%pc_opc_sel_date_must%')")
    `Must have A3`  REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_pc_opc_a3%':'true'}, 'studio_select.%pc_opc_sel_date_must%')")
    `Must have 38`  REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%must_have_pc_opc_38%':'true'}, 'studio_select.%pc_opc_sel_date_must%')")
    f.separator
    `May have, any` REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_pc_opc_any%':'true'}, 'studio_select.%pc_opc_sel_date_may%')")
    `May have A2`   REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_pc_opc_a2%':'true'}, 'studio_select.%pc_opc_sel_date_may%')")
    `May have A3`   REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_pc_opc_a3%':'true'}, 'studio_select.%pc_opc_sel_date_may%')")
    `May have 38`   REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'training.%may_have_pc_opc_38%':'true'}, 'studio_select.%pc_opc_sel_date_may%')")

    f.separator
    `May be assist` REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%may_be_assist%':'true'})")
    `A3/A4 PC-date mismatch` REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%pc_opc_match_in_pp%':'false'})")
}

Menu pushSelect_1_5
{
        "[ 1 ]" f.exec PythonEvalExpr("SelectCrew.toPersonalEtab(1)")
        "[ 2 ]" f.exec PythonEvalExpr("SelectCrew.toPersonalEtab(2)")
        "[ 3 ]" f.exec PythonEvalExpr("SelectCrew.toPersonalEtab(3)")
        "[ 4 ]" f.exec PythonEvalExpr("SelectCrew.toPersonalEtab(4)")
        "[ 5 ]" f.exec PythonEvalExpr("SelectCrew.toPersonalEtab(5)")
}

Menu popSelect_1_5
{
        "[ 1 ]" REDO f.exec PythonEvalExpr("SelectCrew.fromPersonalEtab(1)")
        "[ 2 ]" REDO f.exec PythonEvalExpr("SelectCrew.fromPersonalEtab(2)")
        "[ 3 ]" REDO f.exec PythonEvalExpr("SelectCrew.fromPersonalEtab(3)")
        "[ 4 ]" REDO f.exec PythonEvalExpr("SelectCrew.fromPersonalEtab(4)")
        "[ 5 ]" REDO f.exec PythonEvalExpr("SelectCrew.fromPersonalEtab(5)")
}

Menu popSubSelect_1_5
{
        "[ 1 ]" REDO f.exec PythonEvalExpr("SelectCrew.fromPersonalEtab(1, True)")
        "[ 2 ]" REDO f.exec PythonEvalExpr("SelectCrew.fromPersonalEtab(2, True)")
        "[ 3 ]" REDO f.exec PythonEvalExpr("SelectCrew.fromPersonalEtab(3, True)")
        "[ 4 ]" REDO f.exec PythonEvalExpr("SelectCrew.fromPersonalEtab(4, True)")
        "[ 5 ]" REDO f.exec PythonEvalExpr("SelectCrew.fromPersonalEtab(5, True)")
}

/* end of file */
