/*
 * This is the application specific customization file for the
 * core menu SelectCrew.
 * This only includes definitions that should apply for 'Tracking'.
 * The file is named SelectCrew_Tracking.menu.
*/

Menu SelectCrew
{
  `by Filtering Mask...` f.after
  `Illness` f.menu SelectCrewIllnessMenu
  `Checked-in` f.menu SelectCheckinMenu
  
  `Misc` f.before
  `Publish` f.menu SelectCrewPublishMenu
  
  `by Surname/Empno/ID...` f.drop

  `Annotations...` f.before
    f.separator
   `Restrictions` 	f.menu 	SelectRestrictions
   `Instructors` 	f.menu 	SelectInstructors
   `Recurrent` 		f.menu 	SelectRecurrent

   f.separator

   `Save to temporary filter`        f.menu  pushSelect_1_5
   `Use temporary filter`            f.menu  popSelect_1_5
}

Menu SelectCrewInitial
{
  `Mini Filter...` !Select _M Ctrl<Key>E REDO f.exec PythonEvalExpr("MiniSelect.startMiniSelectForm()")
  `Filter` _F f.menu SelectCrew
}

Menu SelectCrewMisc
{
  `Standbys` f.before
  `Reduced need after now`
     REDO
     f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort(\
              {'studio_select.%reduced_need_after_now%':'true',\
               'FILTER_MARK':'LEG'},\
              'studio_select.%reduced_need_after_now_sort%')")
  `Crew back from lease`
     REDO
     f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort(\
              {'crew.%back_from_lease_pp%':'true'},\
              'crew.%back_from_lease_pp_sort%')")
  `Annotations...` f.after
  `FX available today` REDO f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'annotations.%code_FX%':'true'})")
}

Menu SelectCrewIllnessMenu  
{
/*
  No specifications for this function. It is being removed. If activated in the future, the functionality should
  be revised.
  
  `Ill on fourth day`  
    REDO
    f.exec PythonEvalExpr("MenuCommandsExt.select(\
             {'studio_select.crew_is_ill_on_fourth_day_today':'true'},\
             Cui.CuiWhichArea, Cui.CrewMode)")
*/	     
  `Report-back`  
    REDO
    f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort(\
             {'studio_select.crew_is_ill_with_report_back':'true'},\
              'studio_select.%early_date_ill_crew_report_back%')")
}

Menu SelectCheckinMenu
{
  `Checked-in` 
    REDO
    f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort(\
             {'studio_select.crew_checked_in_not_departed':'true'},\
             'studio_select.%sort_mandatory_check_in_after_now%,studio_select.%sort_check_in_after_now_flight_descriptor%,studio_select.%sort_crew_category%')")
  `Checked-in early` 
    REDO
    f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort(\
             {'studio_select.crew_checked_in_early':'true'},\
             'studio_select.%sort_mandatory_check_in_after_now%,studio_select.%sort_check_in_after_now_flight_descriptor%,studio_select.%sort_crew_category%')")
  `Late for check-in` 
    REDO
    f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort(\
             {'studio_select.crew_late_for_checkin':'true'},\
             'studio_select.%sort_mandatory_check_in_after_now%,studio_select.%sort_check_in_after_now_flight_descriptor%,studio_select.%sort_crew_category%')")
}

Menu SelectTraining
{
   `Unperformed training` 			REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'training.%unperformed_training_in_pp%':'true'})")
   `FD on training, with instr.` 	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort({'studio_select.%training_or_instr%':'true'}, 'studio_select.%training_sort%')")
   `FD has any LIFUS or T-flight in pp` 	REDO OPAQ f.exec PythonEvalExpr("MenuCommandsExt.selectCrew({'studio_select.%crew_on_any_lifus_or_t_flight%':'true'})")
   `By schoolplan number...`  	    REDO OPAQ f.exec PythonEvalExpr("carmusr.planning.SelectCrewTrainingForm.select_schoolplan('crew')")
}

Menu SelectCrewPublishMenu
{
  `Do-not-publish after now`
     REDO
     f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort(\
              {'publish.%do_not_publish_after_now%':'true'},\
              'publish.%do_not_publish_after_now_sort%')")
  `Published-not-informed after now`
     REDO
     f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort(\
              {'publish.%pubnotinf_after_now%':'true'},\
              'publish.%pubnotinf_after_now_sort%')")
  `Published-not-informed after tomorrow`
     REDO
     f.exec PythonEvalExpr("MenuCommandsExt.selectAndSort(\
              {'publish.%pubnotinf_after_tomorrow%':'true'},\
              'publish.%pubnotinf_after_tomorrow_sort%')")
}

/* end of file */
